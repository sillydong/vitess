// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const KILL = 57509
const CONNECTION = 57510
const SEQUENCE = 57511
const EACH = 57512
const ROW = 57513
const BEFORE = 57514
const FOLLOWS = 57515
const PRECEDES = 57516
const DEFINER = 57517
const INVOKER = 57518
const INOUT = 57519
const OUT = 57520
const DETERMINISTIC = 57521
const CONTAINS = 57522
const READS = 57523
const MODIFIES = 57524
const SQL = 57525
const SECURITY = 57526
const TEMPORARY = 57527
const CLASS_ORIGIN = 57528
const SUBCLASS_ORIGIN = 57529
const MESSAGE_TEXT = 57530
const MYSQL_ERRNO = 57531
const CONSTRAINT_CATALOG = 57532
const CONSTRAINT_SCHEMA = 57533
const CONSTRAINT_NAME = 57534
const CATALOG_NAME = 57535
const SCHEMA_NAME = 57536
const TABLE_NAME = 57537
const COLUMN_NAME = 57538
const CURSOR_NAME = 57539
const SIGNAL = 57540
const RESIGNAL = 57541
const SQLSTATE = 57542
const DECLARE = 57543
const CONDITION = 57544
const CURSOR = 57545
const CONTINUE = 57546
const EXIT = 57547
const UNDO = 57548
const HANDLER = 57549
const FOUND = 57550
const SQLWARNING = 57551
const SQLEXCEPTION = 57552
const USER = 57553
const IDENTIFIED = 57554
const ROLE = 57555
const REUSE = 57556
const GRANT = 57557
const GRANTS = 57558
const REVOKE = 57559
const NONE = 57560
const ATTRIBUTE = 57561
const RANDOM = 57562
const PASSWORD = 57563
const INITIAL = 57564
const AUTHENTICATION = 57565
const SSL = 57566
const X509 = 57567
const CIPHER = 57568
const ISSUER = 57569
const SUBJECT = 57570
const ACCOUNT = 57571
const EXPIRE = 57572
const NEVER = 57573
const DAY = 57574
const OPTION = 57575
const OPTIONAL = 57576
const EXCEPT = 57577
const ADMIN = 57578
const PRIVILEGES = 57579
const MAX_QUERIES_PER_HOUR = 57580
const MAX_UPDATES_PER_HOUR = 57581
const MAX_CONNECTIONS_PER_HOUR = 57582
const MAX_USER_CONNECTIONS = 57583
const FAILED_LOGIN_ATTEMPTS = 57584
const PASSWORD_LOCK_TIME = 57585
const UNBOUNDED = 57586
const REQUIRE = 57587
const PROXY = 57588
const BEGIN = 57589
const START = 57590
const TRANSACTION = 57591
const COMMIT = 57592
const ROLLBACK = 57593
const SAVEPOINT = 57594
const WORK = 57595
const RELEASE = 57596
const BIT = 57597
const TINYINT = 57598
const SMALLINT = 57599
const MEDIUMINT = 57600
const INT = 57601
const INTEGER = 57602
const BIGINT = 57603
const INTNUM = 57604
const SERIAL = 57605
const REAL = 57606
const DOUBLE = 57607
const FLOAT_TYPE = 57608
const DECIMAL = 57609
const NUMERIC = 57610
const DEC = 57611
const FIXED = 57612
const PRECISION = 57613
const TIME = 57614
const TIMESTAMP = 57615
const DATETIME = 57616
const YEAR = 57617
const CHAR = 57618
const VARCHAR = 57619
const BOOL = 57620
const CHARACTER = 57621
const VARBINARY = 57622
const NCHAR = 57623
const NVARCHAR = 57624
const NATIONAL = 57625
const VARYING = 57626
const TEXT = 57627
const TINYTEXT = 57628
const MEDIUMTEXT = 57629
const LONGTEXT = 57630
const LONG = 57631
const BLOB = 57632
const TINYBLOB = 57633
const MEDIUMBLOB = 57634
const LONGBLOB = 57635
const JSON = 57636
const ENUM = 57637
const GEOMETRY = 57638
const POINT = 57639
const LINESTRING = 57640
const POLYGON = 57641
const GEOMETRYCOLLECTION = 57642
const MULTIPOINT = 57643
const MULTILINESTRING = 57644
const MULTIPOLYGON = 57645
const LOCAL = 57646
const LOW_PRIORITY = 57647
const NULLX = 57648
const AUTO_INCREMENT = 57649
const APPROXNUM = 57650
const SIGNED = 57651
const UNSIGNED = 57652
const ZEROFILL = 57653
const COLLATION = 57654
const DATABASES = 57655
const SCHEMAS = 57656
const TABLES = 57657
const FULL = 57658
const PROCESSLIST = 57659
const COLUMNS = 57660
const FIELDS = 57661
const ENGINES = 57662
const PLUGINS = 57663
const NAMES = 57664
const CHARSET = 57665
const GLOBAL = 57666
const SESSION = 57667
const ISOLATION = 57668
const LEVEL = 57669
const READ = 57670
const WRITE = 57671
const ONLY = 57672
const REPEATABLE = 57673
const COMMITTED = 57674
const UNCOMMITTED = 57675
const SERIALIZABLE = 57676
const CURRENT_TIMESTAMP = 57677
const DATABASE = 57678
const CURRENT_DATE = 57679
const CURRENT_USER = 57680
const CURRENT_TIME = 57681
const LOCALTIME = 57682
const LOCALTIMESTAMP = 57683
const UTC_DATE = 57684
const UTC_TIME = 57685
const UTC_TIMESTAMP = 57686
const REPLACE = 57687
const CONVERT = 57688
const CAST = 57689
const SUBSTR = 57690
const SUBSTRING = 57691
const TRIM = 57692
const LEADING = 57693
const TRAILING = 57694
const BOTH = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const OVER = 57700
const WINDOW = 57701
const GROUPING = 57702
const GROUPS = 57703
const CURRENT = 57704
const ROWS = 57705
const RANGE = 57706
const AVG = 57707
const BIT_AND = 57708
const BIT_OR = 57709
const BIT_XOR = 57710
const COUNT = 57711
const JSON_ARRAYAGG = 57712
const JSON_OBJECTAGG = 57713
const MAX = 57714
const MIN = 57715
const STDDEV_POP = 57716
const STDDEV = 57717
const STD = 57718
const STDDEV_SAMP = 57719
const SUM = 57720
const VAR_POP = 57721
const VARIANCE = 57722
const VAR_SAMP = 57723
const CUME_DIST = 57724
const DENSE_RANK = 57725
const FIRST_VALUE = 57726
const LAG = 57727
const LAST_VALUE = 57728
const LEAD = 57729
const NTH_VALUE = 57730
const NTILE = 57731
const ROW_NUMBER = 57732
const PERCENT_RANK = 57733
const RANK = 57734
const MATCH = 57735
const AGAINST = 57736
const BOOLEAN = 57737
const LANGUAGE = 57738
const WITH = 57739
const QUERY = 57740
const EXPANSION = 57741
const UNUSED = 57742
const ARRAY = 57743
const DESCRIPTION = 57744
const EMPTY = 57745
const JSON_TABLE = 57746
const LATERAL = 57747
const MEMBER = 57748
const RECURSIVE = 57749
const ACTIVE = 57750
const BUCKETS = 57751
const CLONE = 57752
const COMPONENT = 57753
const DEFINITION = 57754
const ENFORCED = 57755
const EXCLUDE = 57756
const FOLLOWING = 57757
const GEOMCOLLECTION = 57758
const GET_MASTER_PUBLIC_KEY = 57759
const HISTOGRAM = 57760
const HISTORY = 57761
const INACTIVE = 57762
const INVISIBLE = 57763
const LOCKED = 57764
const MASTER_COMPRESSION_ALGORITHMS = 57765
const MASTER_PUBLIC_KEY_PATH = 57766
const MASTER_TLS_CIPHERSUITES = 57767
const MASTER_ZSTD_COMPRESSION_LEVEL = 57768
const NESTED = 57769
const NETWORK_NAMESPACE = 57770
const NOWAIT = 57771
const NULLS = 57772
const OJ = 57773
const OLD = 57774
const ORDINALITY = 57775
const ORGANIZATION = 57776
const OTHERS = 57777
const PATH = 57778
const PERSIST = 57779
const PERSIST_ONLY = 57780
const PRECEDING = 57781
const PRIVILEGE_CHECKS_USER = 57782
const PROCESS = 57783
const REFERENCE = 57784
const REQUIRE_ROW_FORMAT = 57785
const RESOURCE = 57786
const RESPECT = 57787
const RESTART = 57788
const RETAIN = 57789
const SECONDARY = 57790
const SECONDARY_ENGINE = 57791
const SECONDARY_LOAD = 57792
const SECONDARY_UNLOAD = 57793
const SKIP = 57794
const SRID = 57795
const THREAD_PRIORITY = 57796
const TIES = 57797
const VCPU = 57798
const VISIBLE = 57799
const SYSTEM = 57800
const INFILE = 57801

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"REQUIRE",
	"PROXY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"CURRENT",
	"ROWS",
	"RANGE",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 36,
	5, 51,
	-2, 999,
	-1, 44,
	141, 1061,
	142, 1087,
	-2, 205,
	-1, 51,
	181, 639,
	182, 639,
	-2, 629,
	-1, 58,
	1, 1546,
	478, 1546,
	-2, 667,
	-1, 492,
	128, 1097,
	-2, 1091,
	-1, 493,
	128, 1098,
	-2, 1092,
	-1, 597,
	98, 1352,
	128, 1352,
	-2, 1045,
	-1, 598,
	98, 1465,
	128, 1465,
	-2, 1046,
	-1, 603,
	98, 1375,
	128, 1375,
	-2, 1047,
	-1, 604,
	98, 1421,
	128, 1421,
	-2, 1048,
	-1, 605,
	98, 1422,
	128, 1422,
	-2, 1049,
	-1, 606,
	98, 1306,
	128, 1306,
	-2, 1053,
	-1, 608,
	98, 1398,
	128, 1398,
	-2, 1055,
	-1, 1069,
	1, 731,
	5, 731,
	12, 731,
	13, 731,
	14, 731,
	15, 731,
	17, 731,
	19, 731,
	30, 731,
	31, 731,
	56, 731,
	57, 731,
	58, 731,
	59, 731,
	60, 731,
	62, 731,
	63, 731,
	66, 731,
	67, 731,
	69, 731,
	70, 731,
	478, 731,
	-2, 761,
	-1, 1073,
	67, 68,
	69, 68,
	-2, 72,
	-1, 1304,
	128, 1100,
	-2, 1096,
	-1, 1469,
	44, 477,
	-2, 1317,
	-1, 1473,
	68, 477,
	-2, 1268,
	-1, 1476,
	68, 473,
	72, 473,
	-2, 1195,
	-1, 1477,
	68, 474,
	72, 474,
	-2, 1205,
	-1, 1594,
	44, 520,
	148, 522,
	150, 520,
	151, 520,
	-2, 560,
	-1, 1670,
	5, 52,
	-2, 827,
	-1, 1976,
	69, 1247,
	70, 1247,
	128, 1247,
	-2, 674,
	-1, 1999,
	1, 782,
	5, 782,
	12, 782,
	13, 782,
	14, 782,
	15, 782,
	17, 782,
	19, 782,
	30, 782,
	31, 782,
	56, 782,
	57, 782,
	58, 782,
	59, 782,
	60, 782,
	62, 782,
	63, 782,
	66, 782,
	67, 782,
	69, 782,
	70, 782,
	478, 782,
	-2, 761,
	-1, 2102,
	148, 523,
	-2, 521,
	-1, 2165,
	5, 52,
	-2, 1019,
	-1, 2365,
	41, 1107,
	-2, 1105,
	-1, 2494,
	5, 52,
	-2, 1022,
}

const yyPrivate = 57344

const yyLast = 30183

var yyAct = [...]int{

	555, 84, 2683, 2656, 2632, 2646, 416, 2647, 2497, 2511,
	495, 2634, 2417, 7, 2177, 2416, 6, 2548, 2575, 2385,
	2415, 5, 2418, 8, 2573, 2479, 2484, 2365, 1521, 1104,
	2312, 2272, 1993, 1519, 796, 1709, 2510, 2012, 1194, 1892,
	1738, 1020, 1969, 498, 2414, 3, 484, 622, 2367, 1428,
	87, 1478, 2062, 2230, 1422, 2253, 2208, 2224, 1282, 1533,
	1901, 2013, 1902, 1970, 1426, 2095, 1819, 2498, 1069, 2192,
	2086, 835, 477, 1710, 399, 402, 472, 511, 1966, 461,
	97, 1460, 1592, 1470, 1510, 84, 395, 110, 1275, 1459,
	1985, 1978, 1938, 1338, 1623, 1329, 1401, 1867, 1196, 1466,
	1243, 1193, 1759, 1559, 1216, 1449, 424, 424, 1868, 1405,
	1174, 1290, 1802, 1506, 500, 617, 1393, 599, 1084, 1065,
	812, 2193, 922, 1412, 1066, 1575, 554, 929, 1306, 476,
	865, 480, 616, 942, 886, 925, 591, 1494, 471, 602,
	1083, 419, 595, 1248, 596, 418, 396, 397, 398, 864,
	588, 89, 1039, 783, 2705, 2701, 795, 1075, 2691, 2673,
	2671, 2651, 2627, 2556, 86, 620, 1241, 1038, 73, 896,
	2344, 2613, 2610, 2047, 2202, 2664, 2542, 2645, 2492, 2209,
	37, 37, 411, 2615, 2527, 37, 2342, 2211, 37, 2357,
	91, 92, 93, 94, 95, 2612, 2609, 1830, 2059, 2541,
	490, 2345, 1959, 1605, 1704, 2538, 2539, 1546, 2459, 1546,
	1645, 2579, 37, 2157, 76, 40, 41, 1604, 782, 2008,
	2009, 1705, 2297, 1446, 1447, 825, 1424, 2574, 1270, 1271,
	570, 1247, 576, 578, 577, 574, 575, 573, 572, 571,
	1574, 2007, 85, 85, 1085, 916, 1086, 85, 2491, 1445,
	85, 579, 580, 410, 1245, 1246, 2214, 1481, 409, 785,
	1609, 788, 789, 2580, 1747, 1785, 612, 1746, 1573, 1603,
	1748, 1480, 838, 883, 85, 933, 839, 840, 1495, 2396,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 2281, 413, 968, 2212, 2213, 2215, 2216, 2217,
	2579, 1244, 1486, 1488, 2144, 1487, 122, 118, 119, 1500,
	120, 1495, 2142, 389, 408, 469, 1228, 817, 2347, 1825,
	1601, 1595, 1596, 849, 1594, 618, 1597, 1598, 2225, 1856,
	2640, 2370, 455, 2085, 1861, 2558, 2228, 1585, 76, 40,
	41, 2557, 2069, 124, 123, 2517, 1829, 2463, 2242, 2226,
	2227, 2339, 2580, 2102, 2461, 2231, 2232, 2233, 2234, 2249,
	42, 1607, 1610, 1586, 1261, 2564, 824, 824, 823, 1534,
	1482, 116, 1827, 1482, 2240, 2343, 2660, 2553, 2337, 845,
	2332, 1507, 824, 2551, 2552, 816, 820, 2336, 2515, 822,
	2335, 493, 84, 84, 2334, 125, 2333, 126, 2576, 2453,
	2331, 2449, 2450, 1528, 854, 2545, 2546, 856, 2060, 834,
	2611, 2499, 855, 2179, 2063, 2064, 2065, 2066, 2067, 831,
	1730, 2412, 818, 821, 1396, 819, 836, 830, 837, 839,
	840, 1527, 1847, 1848, 1103, 403, 853, 857, 2642, 390,
	902, 131, 1939, 903, 131, 2063, 2064, 2065, 2066, 2067,
	131, 2410, 846, 847, 2361, 2480, 2072, 832, 833, 117,
	1249, 2607, 449, 427, 427, 911, 787, 786, 400, 88,
	2629, 1895, 1406, 919, 392, 131, 2638, 404, 2697, 2633,
	1103, 2254, 2255, 1102, 1941, 1602, 131, 2576, 1103, 1874,
	131, 625, 977, 2636, 131, 979, 1251, 2455, 1828, 1250,
	2101, 422, 1103, 420, 423, 2348, 2018, 2340, 131, 427,
	393, 625, 2210, 1600, 1229, 2046, 2577, 1495, 2460, 131,
	121, 850, 2687, 412, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1606, 2087, 1018, 1580, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 77,
	1037, 1040, 1040, 1040, 1046, 1040, 1040, 1046, 1040, 1046,
	1055, 1056, 1057, 1058, 1059, 1060, 2397, 1070, 2358, 83,
	83, 898, 899, 900, 83, 2623, 1831, 83, 2490, 815,
	1019, 1247, 1509, 1943, 1792, 2577, 1608, 1485, 1947, 978,
	1942, 2516, 1940, 401, 401, 908, 113, 1945, 2360, 2454,
	2071, 83, 401, 401, 1245, 1246, 1076, 2132, 2706, 904,
	1944, 2635, 2637, 910, 2703, 2313, 2692, 2674, 784, 602,
	798, 1064, 2465, 468, 602, 1946, 1948, 2685, 2265, 2315,
	2686, 1855, 2684, 113, 421, 467, 1820, 468, 894, 2264,
	1852, 1833, 1832, 1097, 429, 430, 431, 432, 433, 437,
	438, 442, 443, 452, 451, 450, 453, 454, 457, 456,
	458, 434, 435, 436, 439, 440, 441, 444, 445, 448,
	446, 447, 1821, 77, 1431, 1433, 103, 1581, 1182, 1180,
	851, 1072, 982, 983, 984, 985, 986, 987, 988, 989,
	2016, 1167, 1543, 1088, 1850, 1103, 1737, 1542, 1089, 2018,
	2314, 1736, 115, 114, 1042, 1044, 1764, 1048, 1050, 1764,
	1053, 914, 1101, 1735, 893, 826, 780, 790, 1074, 1041,
	1043, 1045, 1047, 1049, 1051, 1052, 1054, 1079, 360, 105,
	848, 2268, 131, 102, 1777, 1889, 1767, 625, 625, 115,
	114, 1680, 980, 981, 2458, 1098, 2081, 2129, 2121, 1782,
	1781, 1854, 1853, 625, 1751, 1743, 1432, 1764, 1640, 1822,
	1823, 2263, 1628, 1613, 1285, 1163, 1096, 1081, 948, 808,
	1677, 1778, 958, 1450, 968, 968, 1176, 1441, 1226, 1764,
	1313, 131, 111, 2036, 940, 939, 1783, 1217, 1770, 1764,
	2549, 824, 112, 1195, 1771, 1311, 1312, 1310, 824, 824,
	824, 1550, 941, 1763, 424, 828, 1763, 1175, 1278, 941,
	814, 841, 1893, 824, 2677, 2657, 2676, 1675, 107, 1674,
	108, 424, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 2269, 2037, 1198, 940, 939, 131,
	966, 967, 959, 960, 961, 962, 963, 964, 965, 958,
	100, 1912, 968, 1780, 1763, 941, 797, 1888, 945, 980,
	981, 1885, 939, 1224, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 1763, 1983, 968, 941,
	1982, 920, 1884, 1874, 1218, 1236, 1763, 1881, 980, 981,
	1880, 1883, 84, 1874, 1094, 99, 824, 1103, 1551, 1274,
	1877, 1875, 829, 1239, 813, 843, 2549, 1876, 2588, 424,
	2587, 1961, 1200, 858, 1256, 791, 1259, 1876, 1394, 1394,
	1693, 1220, 1560, 1221, 1177, 2690, 1265, 2624, 1184, 1169,
	2643, 1212, 1213, 98, 1215, 2241, 1267, 961, 962, 963,
	964, 965, 958, 104, 2235, 968, 940, 939, 466, 1203,
	1204, 2024, 85, 2694, 1625, 1626, 1627, 131, 131, 131,
	84, 936, 2520, 1309, 941, 2698, 2513, 1273, 2512, 1283,
	1284, 1333, 1334, 625, 2495, 1254, 1304, 800, 801, 802,
	803, 804, 805, 806, 2355, 1296, 1298, 1299, 1264, 1231,
	1232, 1297, 100, 1234, 2354, 959, 960, 961, 962, 963,
	964, 965, 958, 1022, 1019, 968, 2456, 940, 939, 1237,
	940, 939, 2514, 1072, 2626, 1252, 1255, 2550, 1253, 2699,
	1266, 940, 939, 2353, 1223, 941, 1260, 1302, 941, 1263,
	1779, 940, 939, 1431, 1433, 1676, 1272, 940, 939, 941,
	926, 585, 586, 927, 1963, 2352, 1308, 1372, 2346, 941,
	2201, 1425, 2457, 1379, 1382, 941, 1070, 1300, 1307, 1808,
	1070, 1395, 2200, 1911, 516, 515, 518, 519, 520, 521,
	1330, 1347, 1331, 517, 522, 1351, 940, 939, 957, 956,
	966, 967, 959, 960, 961, 962, 963, 964, 965, 958,
	1807, 1805, 968, 1786, 941, 1019, 1287, 889, 888, 940,
	939, 1749, 2600, 1750, 862, 2599, 602, 2561, 2559, 1198,
	1436, 2526, 2452, 2451, 1438, 1432, 2409, 941, 2362, 921,
	1288, 2330, 2291, 1289, 1304, 1276, 2238, 861, 1430, 2237,
	1421, 1305, 2236, 2198, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 824,
	1456, 824, 625, 2029, 1303, 1803, 1570, 1233, 1201, 1199,
	427, 427, 2586, 1434, 415, 1072, 1205, 1206, 1207, 131,
	1072, 2585, 131, 2462, 1072, 1455, 2407, 427, 427, 2379,
	131, 1214, 625, 1767, 2373, 2261, 2116, 2112, 2103, 625,
	625, 625, 131, 131, 131, 2073, 1467, 1439, 1540, 131,
	1538, 1539, 1474, 2057, 625, 1443, 1046, 1442, 1448, 2056,
	1457, 2055, 1385, 1464, 1841, 1840, 427, 1564, 1548, 1547,
	1332, 1397, 1512, 1513, 1514, 1515, 1230, 1566, 1227, 1192,
	1191, 1190, 1189, 1178, 1172, 1684, 1171, 460, 1496, 1497,
	1498, 1499, 1170, 1168, 884, 810, 1336, 496, 1163, 1508,
	1344, 407, 405, 2304, 2616, 84, 2188, 2606, 1077, 1353,
	1354, 2533, 921, 2372, 1269, 427, 427, 427, 1183, 625,
	1364, 2188, 2531, 427, 1368, 901, 1958, 2324, 427, 427,
	2188, 2529, 2188, 2411, 1629, 2323, 131, 625, 1739, 131,
	1391, 625, 2304, 2403, 921, 2304, 2320, 2304, 921, 1019,
	2052, 1572, 1454, 2304, 2303, 1461, 618, 1516, 1517, 131,
	2188, 2187, 2030, 1304, 1078, 945, 1080, 1552, 1967, 428,
	428, 1981, 1558, 2169, 921, 1612, 921, 2044, 2043, 2040,
	2041, 474, 894, 957, 956, 966, 967, 959, 960, 961,
	962, 963, 964, 965, 958, 1409, 1565, 968, 905, 1483,
	1484, 892, 1489, 1490, 1491, 1492, 1493, 1571, 1578, 2040,
	2039, 625, 2123, 1739, 1455, 428, 1584, 1638, 921, 1587,
	1503, 1504, 1505, 1562, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 1706, 1708, 968, 1617,
	1070, 1070, 1070, 1070, 1070, 1615, 1616, 2371, 1634, 1739,
	1345, 1346, 1409, 921, 88, 1308, 1425, 1077, 1731, 1583,
	1582, 1356, 1357, 1358, 1359, 88, 1070, 1307, 1340, 1630,
	2124, 1370, 1567, 1408, 1369, 1371, 1532, 625, 625, 906,
	1707, 1376, 1711, 1435, 131, 1076, 1712, 1370, 921, 1100,
	1099, 1981, 131, 131, 1280, 1668, 891, 131, 131, 892,
	1372, 131, 131, 131, 2535, 2124, 1981, 1741, 1370, 1742,
	1734, 2163, 1409, 1078, 1546, 1076, 1531, 602, 2053, 1638,
	1740, 625, 625, 1414, 1417, 1418, 1419, 1415, 1726, 1416,
	1420, 2042, 1995, 1986, 1987, 1865, 1733, 894, 1753, 1692,
	1444, 1303, 1631, 1632, 1633, 1279, 1638, 1698, 1697, 1235,
	1545, 1281, 84, 1262, 1072, 1072, 1072, 1072, 1072, 1713,
	486, 1242, 1716, 1181, 1179, 1714, 1715, 1523, 1717, 1525,
	1072, 1754, 1589, 1082, 1725, 824, 918, 917, 824, 824,
	1072, 1414, 1417, 1418, 1419, 1415, 613, 1416, 1420, 131,
	625, 1088, 625, 1744, 85, 2543, 1811, 2530, 1846, 131,
	1175, 131, 131, 427, 427, 427, 1766, 1768, 131, 1752,
	1756, 1994, 2378, 2376, 2203, 1836, 1482, 1685, 1686, 1687,
	1839, 85, 2175, 1511, 1762, 1765, 424, 2023, 1986, 1987,
	1795, 1507, 1797, 1798, 1799, 1800, 1757, 1529, 1502, 131,
	131, 131, 1501, 1164, 897, 1804, 881, 2668, 85, 1624,
	1520, 1787, 1788, 1806, 1561, 2666, 2648, 2051, 1794, 1989,
	1967, 1809, 1186, 907, 131, 1163, 131, 895, 1801, 890,
	625, 1992, 1826, 1722, 625, 1720, 1919, 1991, 1723, 1719,
	1721, 1563, 625, 1718, 1724, 625, 1418, 1419, 481, 482,
	1842, 957, 956, 966, 967, 959, 960, 961, 962, 963,
	964, 965, 958, 1851, 2582, 968, 2540, 1843, 1849, 1899,
	1866, 1614, 1291, 1857, 2570, 1461, 934, 935, 1304, 2166,
	1863, 1622, 1590, 1878, 1871, 1890, 1891, 1621, 2294, 1894,
	1611, 1864, 2260, 1769, 1879, 2191, 1972, 84, 2111, 2110,
	1872, 2028, 2027, 1761, 2019, 932, 1869, 1882, 1887, 2467,
	2470, 2525, 2524, 2366, 2560, 2364, 1905, 2448, 2447, 406,
	1844, 1997, 1910, 2349, 2350, 1906, 2001, 2002, 2003, 1914,
	1968, 1960, 1796, 1789, 1790, 1791, 1793, 923, 1711, 1095,
	1980, 1973, 1712, 879, 946, 863, 860, 1636, 2595, 924,
	859, 1845, 1639, 811, 2383, 2382, 2161, 1641, 1642, 1950,
	2270, 1949, 1647, 1648, 1649, 1650, 1651, 1652, 1283, 1284,
	1655, 2006, 1569, 2000, 1524, 1660, 1661, 1662, 1663, 2004,
	1665, 1666, 1667, 1185, 2518, 1975, 2368, 1670, 1671, 1672,
	1673, 131, 131, 131, 131, 131, 1679, 1990, 1896, 1682,
	1683, 2243, 1812, 131, 1688, 1689, 1557, 131, 2244, 100,
	1695, 131, 1696, 1998, 1166, 1699, 1700, 131, 1701, 1702,
	934, 935, 1971, 2594, 2068, 2593, 1908, 2011, 1897, 1898,
	2049, 2050, 2017, 2010, 2020, 912, 913, 1727, 1728, 2592,
	2054, 625, 1620, 2327, 1904, 844, 478, 1996, 2563, 2562,
	1619, 2522, 424, 2471, 2387, 2021, 1303, 2279, 2022, 479,
	88, 2386, 2075, 2273, 1739, 1814, 1815, 1816, 1951, 1952,
	2090, 1953, 1954, 2670, 2669, 1955, 1862, 1162, 1860, 2070,
	1859, 1681, 1678, 2031, 2032, 1588, 1219, 1274, 1964, 1965,
	2035, 937, 2669, 2670, 2400, 2026, 1277, 2038, 613, 463,
	465, 90, 625, 1834, 57, 1402, 1837, 1838, 930, 2428,
	54, 2430, 19, 427, 1516, 1, 1517, 2033, 949, 2429,
	18, 1579, 1276, 1999, 2431, 20, 625, 131, 427, 625,
	625, 1257, 2122, 2432, 21, 2223, 553, 2222, 2093, 2125,
	2427, 15, 2229, 427, 2080, 2098, 2115, 2084, 2100, 2092,
	2155, 2088, 2089, 2076, 2091, 2120, 2104, 2426, 14, 2058,
	2131, 2061, 2099, 427, 1824, 625, 2239, 1904, 2025, 1461,
	427, 1461, 2420, 10, 2441, 35, 1173, 2078, 2440, 34,
	2439, 30, 2438, 29, 1021, 2437, 28, 2435, 25, 2434,
	24, 2436, 26, 2338, 625, 625, 794, 1036, 2425, 13,
	131, 1072, 2422, 12, 2421, 11, 2183, 2184, 2185, 1530,
	625, 2419, 9, 885, 2523, 1711, 2466, 2468, 2140, 1712,
	2363, 2170, 2245, 2207, 2206, 1818, 1817, 625, 2194, 880,
	1240, 1870, 609, 1163, 1873, 2077, 621, 2162, 1541, 2181,
	2034, 84, 1599, 2478, 1468, 2171, 428, 428, 1458, 615,
	96, 1549, 1909, 827, 368, 1465, 799, 1775, 1917, 2469,
	882, 1774, 1784, 428, 428, 1479, 1773, 2186, 1926, 1927,
	2182, 1772, 2464, 1776, 1108, 2219, 2220, 2221, 1106, 1933,
	1107, 1105, 1754, 1937, 1110, 2204, 1109, 372, 625, 1090,
	625, 2505, 938, 106, 2195, 58, 2262, 1886, 2127, 1593,
	101, 109, 428, 374, 976, 1618, 1745, 600, 601, 593,
	2218, 2537, 2544, 625, 1070, 928, 2256, 2257, 2481, 1691,
	1035, 1974, 1392, 2258, 499, 1729, 2483, 1295, 514, 2196,
	513, 512, 509, 625, 510, 625, 2578, 625, 1556, 625,
	2246, 2247, 1286, 2251, 1703, 2248, 950, 2152, 2153, 2154,
	2252, 428, 428, 428, 1972, 2045, 497, 1972, 2299, 428,
	2259, 2266, 488, 1068, 428, 428, 1061, 2197, 2274, 2199,
	1997, 1568, 2267, 1413, 1411, 474, 2017, 2275, 2276, 1410,
	2302, 1187, 2250, 589, 1988, 1984, 1423, 2137, 2138, 1067,
	2139, 131, 470, 2141, 74, 2143, 842, 391, 2156, 2296,
	2395, 946, 2298, 39, 464, 483, 27, 1644, 1646, 427,
	17, 852, 22, 16, 131, 427, 1591, 2295, 1656, 1657,
	1658, 1659, 792, 2326, 43, 2328, 1461, 46, 1072, 45,
	1813, 2325, 131, 2301, 427, 2306, 625, 427, 2317, 2318,
	2316, 427, 427, 1202, 427, 2311, 1526, 1430, 2504, 2307,
	2631, 866, 2655, 2547, 2329, 33, 32, 31, 1516, 2433,
	2442, 2384, 2189, 2190, 625, 2424, 2280, 2423, 131, 625,
	1222, 2341, 2618, 2351, 23, 2617, 625, 625, 2356, 4,
	1971, 909, 75, 1971, 36, 2319, 611, 2369, 1972, 2,
	84, 2359, 0, 2321, 0, 2322, 2305, 0, 2374, 2375,
	0, 0, 621, 621, 0, 2388, 0, 0, 1071, 0,
	1021, 2390, 2389, 2381, 0, 0, 0, 0, 621, 84,
	2126, 0, 0, 0, 0, 0, 0, 0, 2413, 474,
	2401, 0, 2406, 0, 2402, 0, 0, 2271, 2282, 2283,
	2284, 2285, 0, 0, 2408, 1904, 2289, 2405, 0, 0,
	2292, 2293, 2377, 2136, 0, 0, 0, 0, 128, 131,
	1162, 0, 1070, 0, 2145, 2146, 0, 394, 1293, 1294,
	2151, 0, 0, 0, 0, 0, 625, 0, 0, 0,
	0, 0, 0, 625, 625, 625, 0, 2164, 2165, 0,
	2167, 0, 625, 2168, 0, 0, 0, 2472, 0, 0,
	0, 2475, 0, 590, 2474, 625, 2476, 614, 0, 0,
	2486, 781, 0, 2180, 1971, 0, 2473, 0, 0, 0,
	921, 0, 0, 0, 0, 793, 2493, 0, 0, 0,
	0, 2488, 2500, 131, 1711, 0, 807, 84, 1712, 428,
	428, 428, 2487, 0, 0, 0, 0, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 1377, 1378, 0, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 0, 427, 968, 0, 0, 1072, 0, 0, 0,
	0, 0, 0, 0, 2521, 0, 0, 2519, 0, 0,
	0, 0, 0, 0, 0, 0, 2536, 0, 0, 0,
	0, 0, 474, 625, 2528, 131, 0, 0, 0, 1920,
	0, 625, 1923, 1924, 1925, 0, 0, 1928, 0, 2406,
	0, 0, 0, 1453, 0, 2554, 0, 0, 2566, 0,
	2568, 0, 609, 0, 0, 0, 0, 609, 1091, 0,
	0, 84, 0, 0, 0, 0, 2278, 84, 2583, 2569,
	2565, 625, 2571, 0, 2581, 2589, 2598, 625, 2567, 0,
	0, 2604, 131, 2584, 131, 0, 0, 2286, 2287, 2288,
	625, 2290, 0, 2477, 0, 2605, 0, 2591, 0, 84,
	0, 2614, 0, 2608, 84, 625, 0, 2622, 0, 424,
	2621, 0, 0, 1518, 2628, 2620, 0, 2619, 2308, 2309,
	2310, 0, 0, 0, 0, 2641, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 2625, 0, 84, 84, 0,
	0, 0, 84, 0, 0, 0, 0, 2598, 2630, 0,
	0, 2658, 0, 2662, 0, 0, 2649, 2661, 0, 0,
	0, 0, 84, 2667, 2665, 84, 0, 625, 0, 2678,
	2650, 2598, 2663, 2652, 2680, 0, 0, 0, 0, 0,
	0, 2509, 84, 2688, 84, 424, 0, 0, 84, 809,
	0, 2598, 0, 2598, 0, 0, 0, 0, 0, 474,
	0, 2675, 84, 0, 0, 84, 625, 474, 0, 0,
	0, 2598, 84, 0, 0, 0, 84, 2391, 2392, 2393,
	2394, 2598, 0, 0, 2693, 2598, 0, 2398, 2399, 0,
	930, 455, 0, 0, 0, 1915, 1916, 1165, 887, 0,
	0, 2702, 1921, 1922, 0, 0, 0, 1760, 2094, 0,
	0, 0, 2096, 0, 1929, 1930, 1931, 1932, 0, 1934,
	1935, 1936, 0, 0, 0, 0, 0, 621, 0, 0,
	427, 0, 0, 131, 621, 621, 621, 0, 625, 0,
	625, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	0, 2596, 0, 0, 0, 0, 915, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2639, 0, 0, 428,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 428, 0, 0, 0, 0, 0,
	2489, 0, 0, 0, 0, 0, 0, 2494, 0, 428,
	0, 0, 0, 1694, 2160, 0, 0, 625, 0, 0,
	0, 0, 0, 0, 1258, 0, 0, 0, 0, 428,
	0, 449, 0, 0, 0, 0, 428, 0, 0, 0,
	0, 0, 621, 2681, 0, 0, 621, 0, 0, 0,
	0, 0, 625, 0, 957, 956, 966, 967, 959, 960,
	961, 962, 963, 964, 965, 958, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 0, 0,
	0, 0, 0, 2532, 1063, 0, 1073, 1337, 1342, 1343,
	0, 0, 0, 0, 1348, 1349, 1350, 0, 1352, 0,
	0, 1355, 625, 0, 0, 0, 1360, 1361, 1362, 1363,
	0, 1365, 1366, 1367, 0, 625, 1335, 0, 0, 1373,
	1374, 1375, 0, 0, 0, 1381, 1384, 625, 1389, 1390,
	0, 0, 0, 0, 0, 0, 427, 0, 0, 0,
	0, 0, 2572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1400, 0, 1403, 1404, 0, 0, 0,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 0,
	0, 0, 0, 2128, 0, 0, 0, 0, 0, 0,
	384, 2130, 1398, 1399, 0, 0, 625, 0, 0, 0,
	2133, 2134, 0, 0, 0, 0, 0, 2135, 0, 0,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 609,
	0, 0, 427, 0, 0, 0, 0, 0, 0, 381,
	0, 0, 0, 621, 0, 0, 621, 621, 0, 0,
	0, 0, 0, 429, 430, 431, 432, 433, 437, 438,
	442, 443, 452, 451, 450, 453, 454, 457, 456, 458,
	434, 435, 436, 439, 440, 441, 444, 445, 448, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2150, 361, 0, 0, 0, 428, 0, 0, 364, 0,
	0, 428, 0, 0, 0, 0, 2695, 2696, 373, 382,
	383, 0, 0, 0, 0, 621, 590, 621, 0, 1188,
	428, 0, 0, 428, 0, 2159, 0, 428, 428, 0,
	428, 0, 1962, 0, 0, 2097, 0, 0, 0, 1208,
	1209, 1210, 0, 0, 370, 1760, 1211, 371, 2106, 2108,
	379, 380, 0, 0, 0, 0, 0, 0, 2097, 0,
	0, 0, 931, 0, 0, 957, 956, 966, 967, 959,
	960, 961, 962, 963, 964, 965, 958, 0, 2005, 968,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 0, 0, 968, 1577, 0, 0, 0, 1577,
	0, 376, 0, 0, 0, 0, 0, 1577, 0, 0,
	1577, 0, 129, 0, 0, 388, 0, 0, 0, 0,
	0, 129, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 621, 1268, 956, 966, 967, 959, 960, 961,
	962, 963, 964, 965, 958, 474, 473, 968, 0, 0,
	0, 0, 1637, 0, 487, 0, 1292, 592, 610, 0,
	1643, 129, 455, 0, 362, 129, 0, 0, 0, 1653,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	1664, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 375, 365, 366,
	0, 387, 0, 0, 0, 367, 369, 1690, 363, 386,
	385, 0, 0, 0, 0, 0, 0, 0, 37, 38,
	76, 40, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 2117, 64, 0, 0, 0, 0, 0, 82, 0,
	0, 486, 42, 68, 69, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 378, 609, 0, 0, 428, 0,
	0, 0, 2097, 0, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 0,
	85, 1407, 0, 0, 2097, 0, 0, 0, 0, 0,
	609, 0, 449, 0, 0, 1437, 0, 0, 0, 0,
	0, 0, 2158, 0, 0, 0, 621, 0, 0, 0,
	0, 1021, 0, 0, 0, 0, 2149, 0, 0, 0,
	0, 2172, 2173, 0, 0, 2174, 0, 0, 2176, 0,
	0, 0, 0, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 0, 44, 78, 48, 47, 50, 474, 61,
	474, 0, 0, 0, 0, 0, 2015, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 2015, 0, 0, 0, 51, 81, 80, 0, 0,
	59, 60, 49, 0, 0, 0, 1522, 0, 0, 0,
	0, 621, 0, 0, 621, 621, 1535, 70, 1536, 1537,
	0, 0, 0, 0, 0, 1544, 957, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 0, 0,
	968, 0, 0, 129, 0, 0, 0, 0, 62, 63,
	1858, 0, 0, 0, 0, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 71, 0, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	621, 887, 0, 0, 0, 0, 2148, 0, 0, 0,
	0, 0, 129, 0, 0, 621, 0, 53, 79, 0,
	55, 56, 66, 0, 67, 0, 0, 621, 0, 2147,
	0, 0, 1918, 0, 429, 430, 431, 432, 433, 437,
	438, 442, 443, 452, 451, 450, 453, 454, 457, 456,
	458, 434, 435, 436, 439, 440, 441, 444, 445, 448,
	446, 447, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 428, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 2015, 0, 0, 0,
	0, 609, 0, 621, 0, 1979, 957, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 1957, 0,
	968, 0, 0, 0, 0, 77, 0, 0, 1979, 957,
	956, 966, 967, 959, 960, 961, 962, 963, 964, 965,
	958, 0, 37, 968, 76, 40, 41, 0, 621, 0,
	621, 0, 621, 0, 2014, 0, 64, 0, 0, 0,
	0, 952, 82, 955, 486, 0, 42, 0, 1021, 0,
	969, 970, 971, 972, 973, 974, 975, 83, 953, 954,
	951, 957, 956, 966, 967, 959, 960, 961, 962, 963,
	964, 965, 958, 0, 0, 968, 0, 0, 129, 129,
	129, 1130, 0, 0, 85, 0, 0, 0, 610, 0,
	0, 0, 0, 610, 0, 0, 957, 956, 966, 967,
	959, 960, 961, 962, 963, 964, 965, 958, 2443, 0,
	968, 2654, 2657, 2653, 0, 0, 0, 0, 0, 0,
	2555, 0, 1956, 0, 0, 0, 0, 0, 2015, 0,
	0, 2083, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 78, 48,
	47, 50, 0, 0, 0, 2482, 2485, 0, 0, 2109,
	0, 0, 428, 2444, 2114, 0, 0, 0, 0, 0,
	0, 2118, 2119, 0, 1907, 1117, 0, 0, 0, 51,
	81, 80, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 0, 0, 0, 1835, 957, 956, 966, 967, 959,
	960, 961, 962, 963, 964, 965, 958, 0, 0, 968,
	0, 0, 2501, 2502, 0, 0, 0, 1131, 0, 0,
	957, 956, 966, 967, 959, 960, 961, 962, 963, 964,
	965, 958, 62, 63, 968, 2445, 0, 0, 428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 72, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 0, 0, 1900, 0, 0,
	0, 2178, 0, 0, 0, 0, 0, 0, 2178, 2178,
	2178, 2446, 79, 0, 55, 56, 66, 621, 67, 0,
	129, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	2178, 1197, 0, 0, 2485, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 129, 129, 0, 0, 2590, 0,
	129, 0, 0, 0, 1144, 1147, 1148, 1149, 1150, 1151,
	1152, 0, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	0, 1132, 1133, 1134, 1135, 1111, 1115, 1145, 1112, 1118,
	1114, 1116, 1113, 1130, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1635, 0, 0, 0, 0, 0, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 621, 129, 0, 0,
	473, 957, 956, 966, 967, 959, 960, 961, 962, 963,
	964, 965, 958, 0, 0, 968, 2679, 0, 0, 0,
	129, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1197, 0, 0, 0, 0, 2300, 1117, 0, 0,
	0, 0, 2178, 0, 0, 0, 0, 0, 2048, 0,
	0, 0, 0, 0, 1146, 2014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 2074, 0, 0, 1341, 1341, 1341, 0, 0, 1131,
	1341, 1341, 1341, 1341, 1341, 1341, 0, 0, 1341, 2079,
	0, 0, 0, 1341, 1341, 1341, 1341, 0, 1341, 1341,
	1341, 0, 0, 0, 0, 0, 1341, 1341, 1341, 0,
	0, 0, 1341, 1341, 0, 1341, 1341, 0, 0, 0,
	610, 0, 0, 0, 0, 2113, 0, 0, 0, 0,
	0, 0, 2380, 0, 0, 0, 0, 0, 0, 0,
	1341, 1341, 1341, 1341, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 129, 473, 0, 0, 0, 129, 129,
	0, 0, 129, 1440, 1197, 610, 0, 0, 0, 0,
	0, 2404, 0, 0, 0, 0, 0, 0, 0, 1197,
	0, 0, 0, 0, 0, 0, 1144, 1147, 1148, 1149,
	1150, 1151, 1152, 0, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 0, 1132, 1133, 1134, 1135, 1111, 1115, 1145,
	1112, 1118, 1114, 1116, 1113, 0, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 2014, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 129, 129, 0, 0, 0, 609, 0, 129,
	0, 0, 0, 0, 37, 0, 76, 40, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	2205, 0, 0, 0, 82, 0, 0, 0, 42, 0,
	1553, 1554, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 1146, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2443, 0, 0, 0, 0, 2704, 0, 0, 1197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 44,
	78, 48, 47, 50, 0, 0, 0, 0, 0, 0,
	2178, 0, 0, 0, 0, 2444, 0, 0, 0, 1341,
	0, 0, 621, 0, 0, 0, 0, 1341, 0, 0,
	0, 51, 81, 80, 0, 0, 1341, 1341, 49, 0,
	0, 0, 0, 0, 0, 0, 0, 1341, 0, 0,
	0, 1341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 37, 0, 76, 40,
	41, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	64, 2644, 0, 0, 62, 63, 82, 2445, 0, 0,
	42, 610, 129, 129, 129, 129, 129, 0, 0, 0,
	0, 71, 0, 72, 473, 0, 0, 0, 129, 0,
	0, 0, 473, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 610, 0, 85, 0,
	0, 0, 0, 2446, 79, 0, 55, 56, 66, 0,
	67, 37, 0, 76, 40, 41, 0, 0, 0, 0,
	0, 0, 2443, 0, 0, 64, 0, 2700, 0, 0,
	0, 82, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 78, 48, 47, 50, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 2444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 81, 80, 0, 2443, 129, 0,
	49, 77, 2689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 78, 48, 47,
	50, 0, 0, 0, 0, 0, 62, 63, 0, 2445,
	0, 0, 2444, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 72, 0, 0, 51, 81,
	80, 129, 0, 0, 0, 49, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 1341, 0, 1197, 0, 2446, 79, 0, 55, 56,
	66, 0, 67, 0, 0, 0, 37, 0, 76, 40,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 62, 63, 0, 2445, 0, 82, 0, 0, 0,
	42, 0, 37, 0, 76, 40, 41, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 64, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 42, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	2446, 79, 0, 55, 56, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2443, 77, 85, 2659, 0, 2672, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2443, 0,
	0, 0, 37, 0, 76, 40, 41, 0, 0, 0,
	0, 44, 78, 48, 47, 50, 64, 0, 0, 0,
	0, 0, 82, 0, 0, 83, 42, 2444, 0, 0,
	0, 0, 0, 0, 0, 455, 0, 44, 78, 48,
	47, 50, 129, 51, 81, 80, 0, 0, 77, 0,
	49, 0, 0, 2444, 0, 0, 1161, 0, 0, 0,
	0, 0, 0, 0, 85, 129, 0, 0, 0, 51,
	81, 80, 0, 0, 0, 0, 49, 0, 37, 0,
	76, 40, 41, 129, 0, 0, 0, 0, 2443, 0,
	0, 0, 64, 2597, 0, 0, 62, 63, 82, 2445,
	83, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 71, 0, 72, 0, 0, 0, 129,
	0, 0, 62, 63, 0, 2445, 0, 44, 78, 48,
	47, 50, 2096, 0, 0, 487, 0, 1103, 0, 71,
	85, 72, 0, 2444, 0, 2446, 79, 0, 55, 56,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 51,
	81, 80, 0, 0, 2443, 449, 49, 0, 0, 0,
	0, 2446, 79, 0, 55, 56, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 78, 48, 47, 50, 0, 0,
	473, 0, 62, 63, 610, 2445, 0, 0, 0, 2444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 72, 0, 0, 0, 51, 81, 80, 0, 0,
	0, 449, 49, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2446, 79, 0, 55, 56, 66, 0, 67, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 62, 63,
	0, 2445, 0, 0, 0, 83, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2446, 79, 0,
	55, 56, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 431,
	432, 433, 437, 438, 442, 443, 452, 451, 450, 453,
	454, 457, 456, 458, 434, 435, 436, 439, 440, 441,
	444, 445, 448, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 0, 473, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 429, 430, 431, 432, 433, 437, 438,
	442, 443, 452, 451, 450, 453, 454, 457, 456, 458,
	434, 435, 436, 439, 440, 441, 444, 445, 448, 446,
	447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 761, 741, 323,
	691, 764, 658, 677, 776, 680, 683, 724, 641, 704,
	254, 675, 642, 0, 662, 631, 669, 632, 659, 693,
	179, 657, 743, 707, 763, 212, 720, 0, 169, 220,
	218, 0, 0, 0, 261, 322, 762, 699, 0, 770,
	215, 0, 716, 771, 312, 238, 0, 0, 695, 750,
	702, 739, 690, 726, 650, 715, 765, 676, 722, 766,
	0, 0, 0, 0, 2503, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 129, 719, 760, 672, 721, 723,
	629, 718, 0, 636, 643, 775, 756, 665, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 694, 703, 734,
	687, 0, 0, 610, 0, 0, 0, 0, 0, 663,
	0, 713, 0, 129, 0, 644, 637, 0, 0, 692,
	0, 0, 0, 649, 136, 664, 735, 0, 627, 191,
	239, 149, 740, 755, 689, 203, 352, 759, 686, 685,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 733, 295, 673, 628, 744, 660, 670, 170, 668,
	288, 258, 341, 0, 710, 265, 287, 216, 330, 730,
	339, 340, 678, 779, 349, 354, 0, 700, 647, 309,
	180, 0, 138, 0, 272, 175, 208, 688, 725, 661,
	167, 731, 714, 749, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 2506, 2507, 2508, 0, 0, 0,
	0, 346, 684, 298, 297, 679, 199, 738, 717, 633,
	281, 728, 204, 137, 320, 357, 154, 210, 325, 626,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 671, 729, 342, 737, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 634, 0, 314,
	344, 359, 157, 656, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 654, 655, 652, 0, 653,
	705, 706, 767, 768, 769, 736, 646, 0, 751, 752,
	0, 0, 0, 0, 0, 742, 757, 758, 727, 777,
	681, 682, 651, 300, 282, 635, 638, 639, 640, 648,
	696, 697, 709, 712, 747, 746, 745, 748, 753, 773,
	772, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 135, 145, 214, 778, 280, 186,
	345, 630, 177, 0, 698, 701, 711, 732, 133, 146,
	156, 162, 176, 181, 185, 674, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 754, 761,
	741, 323, 691, 764, 658, 677, 776, 680, 683, 724,
	641, 704, 254, 675, 642, 0, 662, 631, 669, 632,
	659, 693, 179, 657, 743, 707, 763, 212, 720, 0,
	169, 220, 218, 0, 0, 0, 261, 322, 762, 699,
	0, 770, 215, 0, 716, 771, 312, 238, 0, 0,
	695, 750, 702, 739, 690, 726, 650, 715, 765, 676,
	722, 766, 0, 0, 0, 0, 624, 0, 1462, 1463,
	0, 0, 0, 0, 0, 645, 0, 719, 760, 672,
	721, 723, 629, 718, 0, 636, 643, 775, 756, 665,
	666, 667, 1755, 0, 0, 0, 0, 0, 0, 694,
	703, 734, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 663, 0, 713, 0, 0, 0, 644, 637, 0,
	0, 692, 0, 0, 0, 649, 136, 664, 735, 0,
	627, 191, 239, 149, 740, 755, 689, 203, 352, 759,
	686, 685, 275, 0, 317, 193, 213, 153, 132, 147,
	163, 192, 250, 733, 295, 673, 628, 744, 660, 670,
	170, 668, 288, 258, 341, 0, 710, 265, 287, 216,
	330, 730, 339, 340, 678, 779, 349, 354, 0, 700,
	647, 309, 180, 0, 138, 0, 272, 175, 208, 688,
	725, 661, 167, 731, 714, 749, 308, 328, 155, 324,
	237, 243, 164, 166, 165, 148, 303, 327, 159, 168,
	313, 291, 318, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 684, 298, 297, 679, 199, 738,
	717, 633, 281, 728, 204, 137, 320, 357, 154, 210,
	325, 626, 187, 249, 172, 259, 260, 184, 134, 277,
	231, 232, 230, 233, 671, 729, 342, 737, 279, 139,
	321, 338, 160, 299, 301, 355, 286, 142, 336, 316,
	235, 205, 206, 140, 0, 141, 284, 178, 190, 173,
	253, 0, 189, 274, 333, 334, 171, 358, 150, 348,
	144, 151, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 143, 335, 234, 223, 211, 183, 195, 270,
	219, 271, 196, 241, 240, 242, 221, 225, 0, 634,
	0, 314, 344, 359, 157, 656, 302, 326, 0, 0,
	158, 188, 182, 269, 244, 152, 198, 311, 209, 217,
	283, 356, 257, 289, 161, 343, 310, 654, 655, 652,
	0, 653, 705, 706, 767, 768, 769, 736, 646, 0,
	751, 752, 0, 0, 0, 0, 0, 742, 757, 758,
	727, 777, 681, 682, 651, 300, 282, 635, 638, 639,
	640, 648, 696, 697, 709, 712, 747, 746, 745, 748,
	753, 773, 772, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 135, 145, 214, 778,
	280, 186, 345, 630, 177, 0, 698, 701, 711, 732,
	133, 146, 156, 162, 176, 181, 185, 674, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 251, 252, 255, 256, 262, 263, 264, 266, 267,
	268, 273, 276, 278, 285, 290, 292, 293, 294, 296,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	754, 761, 741, 323, 691, 764, 658, 677, 776, 680,
	683, 724, 641, 704, 254, 675, 642, 0, 662, 631,
	669, 632, 659, 693, 179, 657, 743, 707, 763, 212,
	720, 0, 169, 220, 218, 0, 0, 0, 261, 322,
	762, 699, 0, 770, 215, 0, 716, 771, 312, 238,
	0, 0, 695, 750, 702, 739, 690, 726, 650, 715,
	765, 676, 722, 766, 0, 0, 0, 0, 624, 0,
	1462, 1463, 0, 0, 0, 0, 0, 645, 0, 719,
	760, 672, 721, 723, 629, 718, 0, 636, 643, 775,
	756, 665, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 694, 703, 734, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 0, 713, 0, 0, 0, 644,
	637, 0, 0, 692, 0, 0, 0, 649, 136, 664,
	735, 0, 627, 191, 239, 149, 740, 755, 689, 203,
	352, 759, 686, 685, 275, 0, 317, 193, 213, 153,
	132, 147, 163, 192, 250, 733, 295, 673, 628, 744,
	660, 670, 170, 668, 288, 258, 341, 0, 710, 265,
	287, 216, 330, 730, 339, 340, 678, 779, 349, 354,
	0, 700, 647, 309, 180, 0, 138, 0, 272, 175,
	208, 688, 725, 661, 167, 731, 714, 749, 308, 328,
	155, 324, 237, 243, 164, 166, 165, 148, 303, 327,
	159, 168, 313, 291, 318, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 684, 298, 297, 679,
	199, 738, 717, 633, 281, 728, 204, 137, 320, 357,
	154, 210, 325, 626, 187, 249, 172, 259, 260, 184,
	134, 277, 231, 232, 230, 233, 671, 729, 342, 737,
	279, 139, 321, 338, 160, 299, 301, 355, 286, 142,
	336, 316, 235, 205, 206, 140, 0, 141, 284, 178,
	190, 173, 253, 0, 189, 274, 333, 334, 171, 358,
	150, 348, 144, 151, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 143, 335, 234, 223, 211, 183,
	195, 270, 219, 271, 196, 241, 240, 242, 221, 225,
	0, 634, 0, 314, 344, 359, 157, 656, 302, 326,
	0, 0, 158, 188, 182, 269, 244, 152, 198, 311,
	209, 217, 283, 356, 257, 289, 161, 343, 310, 654,
	655, 652, 0, 653, 705, 706, 767, 768, 769, 736,
	646, 0, 751, 752, 0, 0, 0, 0, 0, 742,
	757, 758, 727, 777, 681, 682, 651, 300, 282, 635,
	638, 639, 640, 648, 696, 697, 709, 712, 747, 746,
	745, 748, 753, 773, 772, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 135, 145,
	214, 778, 280, 186, 345, 630, 177, 0, 698, 701,
	711, 732, 133, 146, 156, 162, 176, 181, 185, 674,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 251, 252, 255, 256, 262, 263, 264,
	266, 267, 268, 273, 276, 278, 285, 290, 292, 293,
	294, 296, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 754, 761, 1976, 323, 691, 764, 658, 677,
	776, 680, 683, 724, 641, 704, 254, 675, 642, 0,
	662, 631, 669, 632, 659, 693, 179, 657, 743, 707,
	763, 212, 720, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 762, 699, 0, 770, 215, 0, 716, 771,
	312, 238, 0, 0, 695, 750, 702, 739, 690, 726,
	650, 715, 765, 676, 722, 766, 85, 0, 921, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 719, 760, 672, 721, 723, 629, 718, 0, 636,
	643, 775, 756, 665, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 694, 703, 734, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 713, 0, 0,
	0, 644, 637, 0, 0, 692, 0, 0, 0, 649,
	136, 664, 735, 0, 627, 191, 239, 149, 740, 755,
	689, 203, 352, 759, 686, 685, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 733, 295, 673,
	628, 744, 660, 670, 170, 668, 288, 258, 341, 0,
	710, 265, 287, 216, 330, 730, 339, 340, 678, 779,
	349, 354, 0, 700, 647, 309, 180, 0, 138, 0,
	272, 175, 208, 688, 725, 661, 167, 731, 714, 749,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 684, 298,
	297, 679, 199, 738, 717, 633, 281, 728, 204, 137,
	320, 357, 154, 210, 325, 626, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 671, 729,
	342, 737, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 634, 0, 314, 344, 359, 157, 656,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 654, 655, 652, 0, 653, 705, 706, 767, 768,
	769, 736, 646, 0, 751, 752, 0, 0, 0, 0,
	0, 742, 757, 758, 727, 777, 681, 682, 651, 300,
	282, 635, 638, 639, 640, 648, 696, 697, 709, 712,
	747, 746, 745, 748, 753, 773, 772, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 708,
	135, 145, 214, 1977, 280, 186, 345, 630, 177, 0,
	698, 701, 711, 732, 133, 146, 156, 162, 176, 181,
	185, 674, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 754, 761, 741, 323, 691, 764,
	658, 677, 776, 680, 683, 724, 641, 704, 254, 675,
	642, 0, 662, 631, 669, 632, 659, 693, 179, 657,
	743, 707, 763, 212, 720, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 762, 699, 0, 770, 215, 0,
	716, 771, 312, 238, 0, 0, 695, 750, 702, 739,
	690, 726, 650, 715, 765, 676, 722, 766, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 719, 760, 672, 721, 723, 629, 718,
	0, 636, 643, 775, 756, 665, 666, 667, 0, 0,
	0, 0, 0, 0, 0, 694, 703, 734, 687, 0,
	0, 0, 0, 0, 0, 2277, 0, 663, 0, 713,
	0, 0, 0, 644, 637, 0, 0, 692, 0, 0,
	0, 649, 136, 664, 735, 0, 627, 191, 239, 149,
	740, 755, 689, 203, 352, 759, 686, 685, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 733,
	295, 673, 628, 744, 660, 670, 170, 668, 288, 258,
	341, 0, 710, 265, 287, 216, 330, 730, 339, 340,
	678, 779, 349, 354, 0, 700, 647, 309, 180, 0,
	138, 0, 272, 175, 208, 688, 725, 661, 167, 731,
	714, 749, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	684, 298, 297, 679, 199, 738, 717, 633, 281, 728,
	204, 137, 320, 357, 154, 210, 325, 626, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	671, 729, 342, 737, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 634, 0, 314, 344, 359,
	157, 656, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 654, 655, 652, 0, 653, 705, 706,
	767, 768, 769, 736, 646, 0, 751, 752, 0, 0,
	0, 0, 0, 742, 757, 758, 727, 777, 681, 682,
	651, 300, 282, 635, 638, 639, 640, 648, 696, 697,
	709, 712, 747, 746, 745, 748, 753, 773, 772, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 135, 145, 214, 778, 280, 186, 345, 630,
	177, 0, 698, 701, 711, 732, 133, 146, 156, 162,
	176, 181, 185, 674, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 754, 761, 741, 323,
	691, 764, 658, 677, 776, 680, 683, 724, 641, 704,
	254, 675, 642, 0, 662, 631, 669, 632, 659, 693,
	179, 657, 743, 707, 763, 212, 720, 0, 169, 220,
	218, 0, 0, 0, 261, 322, 762, 699, 0, 770,
	215, 0, 716, 771, 312, 238, 0, 0, 695, 750,
	702, 739, 690, 726, 650, 715, 765, 676, 722, 766,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 719, 760, 672, 721, 723,
	629, 718, 0, 636, 643, 775, 756, 665, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 694, 703, 734,
	687, 0, 0, 0, 0, 0, 0, 1913, 0, 663,
	0, 713, 0, 0, 0, 644, 637, 0, 0, 692,
	0, 0, 0, 649, 136, 664, 735, 0, 627, 191,
	239, 149, 740, 755, 689, 203, 352, 759, 686, 685,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 733, 295, 673, 628, 744, 660, 670, 170, 668,
	288, 258, 341, 0, 710, 265, 287, 216, 330, 730,
	339, 340, 678, 779, 349, 354, 0, 700, 647, 309,
	180, 0, 138, 0, 272, 175, 208, 688, 725, 661,
	167, 731, 714, 749, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 684, 298, 297, 679, 199, 738, 717, 633,
	281, 728, 204, 137, 320, 357, 154, 210, 325, 626,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 671, 729, 342, 737, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 634, 0, 314,
	344, 359, 157, 656, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 654, 655, 652, 0, 653,
	705, 706, 767, 768, 769, 736, 646, 0, 751, 752,
	0, 0, 0, 0, 0, 742, 757, 758, 727, 777,
	681, 682, 651, 300, 282, 635, 638, 639, 640, 648,
	696, 697, 709, 712, 747, 746, 745, 748, 753, 773,
	772, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 135, 145, 214, 778, 280, 186,
	345, 630, 177, 0, 698, 701, 711, 732, 133, 146,
	156, 162, 176, 181, 185, 674, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 754, 761,
	741, 323, 691, 764, 658, 677, 776, 680, 683, 724,
	641, 704, 254, 675, 642, 0, 662, 631, 669, 632,
	659, 693, 179, 657, 743, 707, 763, 212, 720, 0,
	169, 220, 218, 0, 0, 0, 261, 322, 762, 699,
	0, 770, 215, 0, 716, 771, 312, 238, 0, 0,
	695, 750, 702, 739, 690, 726, 650, 715, 765, 676,
	722, 766, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 0, 719, 760, 672,
	721, 723, 629, 718, 0, 636, 643, 775, 756, 665,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 694,
	703, 734, 687, 0, 0, 0, 0, 0, 0, 1903,
	0, 663, 0, 713, 0, 0, 0, 644, 637, 0,
	0, 692, 0, 0, 0, 649, 136, 664, 735, 0,
	627, 191, 239, 149, 740, 755, 689, 203, 352, 759,
	686, 685, 275, 0, 317, 193, 213, 153, 132, 147,
	163, 192, 250, 733, 295, 673, 628, 744, 660, 670,
	170, 668, 288, 258, 341, 0, 710, 265, 287, 216,
	330, 730, 339, 340, 678, 779, 349, 354, 0, 700,
	647, 309, 180, 0, 138, 0, 272, 175, 208, 688,
	725, 661, 167, 731, 714, 749, 308, 328, 155, 324,
	237, 243, 164, 166, 165, 148, 303, 327, 159, 168,
	313, 291, 318, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 684, 298, 297, 679, 199, 738,
	717, 633, 281, 728, 204, 137, 320, 357, 154, 210,
	325, 626, 187, 249, 172, 259, 260, 184, 134, 277,
	231, 232, 230, 233, 671, 729, 342, 737, 279, 139,
	321, 338, 160, 299, 301, 355, 286, 142, 336, 316,
	235, 205, 206, 140, 0, 141, 284, 178, 190, 173,
	253, 0, 189, 274, 333, 334, 171, 358, 150, 348,
	144, 151, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 143, 335, 234, 223, 211, 183, 195, 270,
	219, 271, 196, 241, 240, 242, 221, 225, 0, 634,
	0, 314, 344, 359, 157, 656, 302, 326, 0, 0,
	158, 188, 182, 269, 244, 152, 198, 311, 209, 217,
	283, 356, 257, 289, 161, 343, 310, 654, 655, 652,
	0, 653, 705, 706, 767, 768, 769, 736, 646, 0,
	751, 752, 0, 0, 0, 0, 0, 742, 757, 758,
	727, 777, 681, 682, 651, 300, 282, 635, 638, 639,
	640, 648, 696, 697, 709, 712, 747, 746, 745, 748,
	753, 773, 772, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 135, 145, 214, 778,
	280, 186, 345, 630, 177, 0, 698, 701, 711, 732,
	133, 146, 156, 162, 176, 181, 185, 674, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 251, 252, 255, 256, 262, 263, 264, 266, 267,
	268, 273, 276, 278, 285, 290, 292, 293, 294, 296,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	754, 761, 741, 323, 691, 764, 658, 677, 776, 680,
	683, 724, 641, 704, 254, 675, 642, 0, 662, 631,
	669, 632, 659, 693, 179, 657, 743, 707, 763, 212,
	720, 0, 169, 220, 218, 0, 0, 0, 261, 322,
	762, 699, 0, 770, 215, 0, 716, 771, 312, 238,
	0, 0, 695, 750, 702, 739, 690, 726, 650, 715,
	765, 676, 722, 766, 85, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 719,
	760, 672, 721, 723, 629, 718, 0, 636, 643, 775,
	756, 665, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 694, 703, 734, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 0, 713, 0, 0, 0, 644,
	637, 0, 0, 692, 0, 0, 0, 649, 136, 664,
	735, 0, 627, 191, 239, 149, 740, 755, 689, 203,
	352, 759, 686, 685, 275, 0, 317, 193, 213, 153,
	132, 147, 163, 192, 250, 733, 295, 673, 628, 744,
	660, 670, 170, 668, 288, 258, 341, 0, 710, 265,
	287, 216, 330, 730, 339, 340, 678, 779, 349, 354,
	0, 700, 647, 309, 180, 0, 138, 0, 272, 175,
	208, 688, 725, 661, 167, 731, 714, 749, 308, 328,
	155, 324, 237, 243, 164, 166, 165, 148, 303, 327,
	159, 168, 313, 291, 318, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 684, 298, 297, 679,
	199, 738, 717, 633, 281, 728, 204, 137, 320, 357,
	154, 210, 325, 626, 187, 249, 172, 259, 260, 184,
	134, 277, 231, 232, 230, 233, 671, 729, 342, 737,
	279, 139, 321, 338, 160, 299, 301, 355, 286, 142,
	336, 316, 235, 205, 206, 140, 0, 141, 284, 178,
	190, 173, 253, 0, 189, 274, 333, 334, 171, 358,
	150, 348, 144, 151, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 143, 335, 234, 223, 211, 183,
	195, 270, 219, 271, 196, 241, 240, 242, 221, 225,
	0, 634, 0, 314, 344, 359, 157, 656, 302, 326,
	0, 0, 158, 188, 182, 269, 244, 152, 198, 311,
	209, 217, 283, 356, 257, 289, 161, 343, 310, 654,
	655, 652, 0, 653, 705, 706, 767, 768, 769, 736,
	646, 0, 751, 752, 0, 0, 0, 0, 0, 742,
	757, 758, 727, 777, 681, 682, 651, 300, 282, 635,
	638, 639, 640, 648, 696, 697, 709, 712, 747, 746,
	745, 748, 753, 773, 772, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 135, 145,
	214, 778, 280, 186, 345, 630, 177, 0, 698, 701,
	711, 732, 133, 146, 156, 162, 176, 181, 185, 674,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 251, 252, 255, 256, 262, 263, 264,
	266, 267, 268, 273, 276, 278, 285, 290, 292, 293,
	294, 296, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 754, 761, 741, 323, 691, 764, 658, 677,
	776, 680, 683, 724, 641, 704, 254, 675, 642, 0,
	662, 631, 669, 632, 659, 693, 179, 657, 743, 707,
	763, 212, 720, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 762, 699, 0, 770, 215, 0, 716, 771,
	312, 238, 0, 0, 695, 750, 702, 739, 690, 726,
	650, 715, 765, 676, 722, 766, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 719, 760, 672, 721, 723, 629, 718, 0, 636,
	643, 775, 756, 665, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 694, 703, 734, 687, 0, 0, 0,
	0, 0, 0, 1441, 0, 663, 0, 713, 0, 0,
	0, 644, 637, 0, 0, 692, 0, 0, 0, 649,
	136, 664, 735, 0, 627, 191, 239, 149, 740, 755,
	689, 203, 352, 759, 686, 685, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 733, 295, 673,
	628, 744, 660, 670, 170, 668, 288, 258, 341, 0,
	710, 265, 287, 216, 330, 730, 339, 340, 678, 779,
	349, 354, 0, 700, 647, 309, 180, 0, 138, 0,
	272, 175, 208, 688, 725, 661, 167, 731, 714, 749,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 684, 298,
	297, 679, 199, 738, 717, 633, 281, 728, 204, 137,
	320, 357, 154, 210, 325, 626, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 671, 729,
	342, 737, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 634, 0, 314, 344, 359, 157, 656,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 654, 655, 652, 0, 653, 705, 706, 767, 768,
	769, 736, 646, 0, 751, 752, 0, 0, 0, 0,
	0, 742, 757, 758, 727, 777, 681, 682, 651, 300,
	282, 635, 638, 639, 640, 648, 696, 697, 709, 712,
	747, 746, 745, 748, 753, 773, 772, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 708,
	135, 145, 214, 778, 280, 186, 345, 630, 177, 0,
	698, 701, 711, 732, 133, 146, 156, 162, 176, 181,
	185, 674, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 754, 761, 741, 323, 691, 764,
	658, 677, 776, 680, 683, 724, 641, 704, 254, 675,
	642, 0, 662, 631, 669, 632, 659, 693, 179, 657,
	743, 707, 763, 212, 720, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 762, 699, 0, 770, 215, 0,
	716, 771, 312, 238, 0, 0, 695, 750, 702, 739,
	690, 726, 650, 715, 765, 676, 722, 766, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 719, 760, 672, 721, 723, 629, 718,
	0, 636, 643, 775, 756, 665, 666, 667, 0, 0,
	0, 0, 0, 0, 0, 694, 703, 734, 687, 0,
	0, 0, 0, 0, 0, 1301, 0, 663, 0, 713,
	0, 0, 0, 644, 637, 0, 0, 692, 0, 0,
	0, 649, 136, 664, 735, 0, 627, 191, 239, 149,
	740, 755, 689, 203, 352, 759, 686, 685, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 733,
	295, 673, 628, 744, 660, 670, 170, 668, 288, 258,
	341, 0, 710, 265, 287, 216, 330, 730, 339, 340,
	678, 779, 349, 354, 0, 700, 647, 309, 180, 0,
	138, 0, 272, 175, 208, 688, 725, 661, 167, 731,
	714, 749, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	684, 298, 297, 679, 199, 738, 717, 633, 281, 728,
	204, 137, 320, 357, 154, 210, 325, 626, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	671, 729, 342, 737, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 634, 0, 314, 344, 359,
	157, 656, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 654, 655, 652, 0, 653, 705, 706,
	767, 768, 769, 736, 646, 0, 751, 752, 0, 0,
	0, 0, 0, 742, 757, 758, 727, 777, 681, 682,
	651, 300, 282, 635, 638, 639, 640, 648, 696, 697,
	709, 712, 747, 746, 745, 748, 753, 773, 772, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 135, 145, 214, 778, 280, 186, 345, 630,
	177, 0, 698, 701, 711, 732, 133, 146, 156, 162,
	176, 181, 185, 674, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 754, 761, 741, 323,
	691, 764, 658, 677, 776, 680, 683, 724, 641, 704,
	254, 675, 642, 0, 662, 631, 669, 632, 659, 693,
	179, 657, 743, 707, 763, 212, 720, 0, 169, 220,
	218, 0, 0, 0, 261, 322, 762, 699, 0, 770,
	215, 0, 716, 771, 312, 238, 0, 0, 695, 750,
	702, 739, 690, 726, 650, 715, 765, 676, 722, 766,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 719, 760, 672, 721, 723,
	629, 718, 0, 636, 643, 775, 756, 665, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 694, 703, 734,
	687, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 713, 0, 0, 0, 644, 637, 0, 0, 692,
	0, 0, 0, 649, 136, 664, 735, 0, 627, 191,
	239, 149, 740, 755, 689, 203, 352, 759, 686, 685,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 733, 295, 673, 628, 744, 660, 670, 170, 668,
	288, 258, 341, 0, 710, 265, 287, 216, 330, 730,
	339, 340, 678, 779, 349, 354, 0, 700, 647, 309,
	180, 0, 138, 0, 272, 175, 208, 688, 725, 661,
	167, 731, 714, 749, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 684, 298, 297, 679, 199, 738, 717, 633,
	281, 728, 204, 137, 320, 357, 154, 210, 325, 626,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 671, 729, 342, 737, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 634, 0, 314,
	344, 359, 157, 656, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 654, 655, 652, 0, 653,
	705, 706, 767, 768, 769, 736, 646, 0, 751, 752,
	0, 0, 0, 0, 0, 742, 757, 758, 727, 777,
	681, 682, 651, 300, 282, 635, 638, 639, 640, 648,
	696, 697, 709, 712, 747, 746, 745, 748, 753, 773,
	772, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 135, 145, 214, 778, 280, 186,
	345, 630, 177, 0, 698, 701, 711, 732, 133, 146,
	156, 162, 176, 181, 185, 674, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 754, 761,
	741, 323, 691, 764, 658, 677, 776, 680, 683, 724,
	641, 704, 254, 675, 642, 0, 662, 631, 669, 632,
	659, 693, 179, 657, 743, 707, 763, 212, 720, 0,
	169, 220, 218, 0, 0, 0, 261, 322, 762, 699,
	0, 770, 215, 0, 716, 771, 312, 238, 0, 0,
	695, 750, 702, 739, 690, 726, 650, 715, 765, 676,
	722, 766, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 0, 719, 760, 672,
	721, 723, 629, 718, 0, 636, 643, 775, 756, 665,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 694,
	703, 734, 687, 0, 0, 0, 0, 0, 0, 0,
	0, 663, 0, 713, 0, 0, 0, 644, 637, 0,
	0, 692, 0, 0, 0, 649, 136, 664, 735, 0,
	627, 191, 239, 149, 740, 755, 689, 203, 352, 759,
	686, 685, 275, 0, 317, 193, 213, 153, 132, 147,
	163, 192, 250, 733, 295, 673, 628, 744, 660, 670,
	170, 668, 288, 258, 341, 0, 710, 265, 287, 216,
	330, 730, 339, 340, 678, 779, 349, 354, 0, 700,
	647, 309, 180, 0, 138, 0, 272, 175, 208, 688,
	725, 661, 167, 731, 714, 749, 308, 328, 155, 324,
	237, 243, 164, 166, 165, 148, 303, 327, 159, 168,
	313, 291, 318, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 684, 298, 297, 679, 199, 738,
	717, 633, 281, 728, 204, 137, 320, 357, 154, 210,
	325, 626, 187, 249, 172, 259, 260, 184, 134, 277,
	231, 232, 230, 233, 671, 729, 342, 737, 279, 139,
	321, 338, 160, 299, 301, 355, 286, 142, 336, 316,
	235, 205, 206, 140, 0, 141, 284, 178, 190, 173,
	253, 0, 189, 274, 333, 334, 171, 358, 150, 348,
	144, 151, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 143, 335, 234, 223, 211, 183, 195, 270,
	219, 271, 196, 241, 240, 242, 221, 225, 0, 634,
	0, 314, 344, 359, 157, 656, 302, 326, 0, 0,
	158, 188, 182, 269, 244, 152, 198, 311, 209, 217,
	283, 356, 257, 289, 161, 343, 310, 654, 655, 652,
	0, 653, 705, 706, 767, 768, 769, 736, 646, 0,
	751, 752, 0, 0, 0, 0, 0, 742, 757, 758,
	727, 777, 681, 682, 651, 300, 282, 635, 638, 639,
	640, 648, 696, 697, 709, 712, 747, 746, 745, 748,
	753, 773, 772, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 135, 145, 214, 778,
	280, 186, 345, 630, 177, 0, 698, 701, 711, 732,
	133, 146, 156, 162, 176, 181, 185, 674, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 251, 252, 255, 256, 262, 263, 264, 266, 267,
	268, 273, 276, 278, 285, 290, 292, 293, 294, 296,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	754, 761, 741, 323, 691, 764, 658, 677, 776, 680,
	683, 724, 641, 704, 254, 675, 642, 0, 662, 631,
	669, 632, 659, 693, 179, 657, 743, 707, 763, 212,
	720, 0, 169, 220, 218, 0, 0, 0, 261, 322,
	1473, 1477, 0, 770, 215, 0, 716, 771, 312, 238,
	0, 0, 695, 750, 702, 739, 690, 726, 650, 715,
	765, 676, 722, 766, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 719,
	760, 672, 721, 723, 629, 718, 0, 636, 643, 775,
	756, 665, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 694, 703, 734, 687, 0, 0, 0, 0, 0,
	0, 0, 0, 663, 0, 713, 0, 0, 0, 644,
	637, 0, 0, 692, 0, 0, 0, 649, 136, 664,
	735, 0, 627, 191, 239, 149, 740, 755, 1476, 203,
	352, 759, 686, 685, 1471, 0, 1472, 193, 213, 623,
	132, 147, 1469, 1475, 250, 733, 295, 673, 628, 744,
	660, 670, 170, 668, 288, 258, 341, 0, 710, 265,
	287, 216, 330, 730, 339, 340, 678, 779, 349, 354,
	0, 700, 647, 309, 180, 0, 138, 0, 272, 175,
	208, 688, 725, 661, 167, 731, 714, 749, 308, 328,
	155, 324, 237, 243, 164, 166, 165, 148, 303, 327,
	159, 168, 313, 291, 318, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 684, 298, 297, 679,
	199, 738, 717, 633, 281, 728, 204, 137, 320, 357,
	154, 210, 325, 626, 187, 249, 172, 259, 260, 184,
	134, 277, 231, 232, 230, 233, 671, 729, 342, 737,
	279, 139, 321, 338, 160, 299, 301, 355, 286, 142,
	336, 316, 235, 205, 206, 140, 0, 141, 284, 178,
	190, 173, 253, 0, 189, 274, 333, 334, 171, 358,
	150, 348, 144, 151, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 143, 335, 234, 223, 211, 183,
	195, 270, 219, 271, 196, 241, 240, 242, 221, 225,
	0, 634, 0, 314, 344, 359, 157, 656, 302, 326,
	0, 0, 158, 188, 182, 269, 244, 152, 198, 311,
	209, 217, 283, 356, 257, 289, 161, 343, 310, 654,
	655, 652, 0, 653, 705, 706, 767, 768, 769, 736,
	646, 0, 751, 752, 0, 0, 0, 0, 0, 742,
	757, 758, 727, 777, 681, 682, 651, 300, 282, 635,
	638, 639, 640, 648, 696, 697, 709, 712, 747, 746,
	745, 748, 753, 773, 772, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 135, 145,
	214, 778, 280, 186, 345, 630, 177, 0, 698, 701,
	711, 732, 133, 146, 156, 162, 176, 181, 185, 674,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 251, 252, 255, 256, 262, 263, 264,
	266, 267, 268, 273, 276, 278, 285, 290, 292, 293,
	294, 296, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 754, 761, 741, 323, 691, 764, 658, 677,
	776, 680, 683, 724, 641, 704, 254, 675, 642, 0,
	662, 631, 669, 632, 659, 693, 179, 657, 743, 707,
	763, 212, 720, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 762, 699, 0, 770, 215, 0, 716, 771,
	312, 238, 0, 0, 695, 750, 702, 739, 690, 726,
	650, 715, 765, 676, 722, 766, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 719, 760, 672, 721, 723, 629, 718, 0, 636,
	643, 775, 756, 665, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 694, 703, 734, 687, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 713, 0, 0,
	0, 644, 637, 0, 0, 692, 0, 0, 0, 649,
	136, 664, 735, 0, 627, 191, 239, 149, 740, 755,
	689, 203, 352, 759, 686, 685, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 733, 295, 673,
	628, 744, 660, 670, 170, 668, 288, 258, 341, 0,
	710, 265, 287, 216, 330, 730, 339, 340, 678, 779,
	349, 354, 0, 700, 647, 309, 180, 0, 138, 0,
	272, 175, 208, 688, 725, 661, 167, 731, 714, 749,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 684, 298,
	297, 679, 199, 738, 717, 633, 281, 728, 204, 137,
	320, 357, 154, 210, 325, 626, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 671, 729,
	342, 737, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 634, 0, 314, 344, 359, 157, 656,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 654, 655, 652, 0, 653, 705, 706, 767, 768,
	769, 736, 646, 0, 751, 752, 0, 0, 0, 0,
	0, 742, 757, 758, 727, 777, 681, 682, 651, 300,
	282, 635, 638, 639, 640, 648, 696, 697, 709, 712,
	747, 746, 745, 748, 753, 773, 772, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 708,
	135, 145, 214, 778, 280, 186, 345, 630, 177, 0,
	698, 701, 711, 732, 133, 146, 156, 162, 176, 181,
	185, 674, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 754, 761, 741, 323, 691, 764,
	658, 677, 776, 680, 683, 724, 641, 704, 254, 675,
	642, 0, 662, 631, 669, 632, 659, 693, 179, 657,
	743, 707, 763, 212, 720, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 762, 699, 0, 770, 215, 0,
	716, 771, 312, 238, 0, 0, 695, 750, 702, 739,
	690, 726, 650, 715, 765, 676, 722, 766, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 719, 760, 672, 721, 723, 629, 718,
	0, 636, 643, 775, 756, 665, 666, 667, 0, 0,
	0, 0, 0, 0, 0, 694, 703, 734, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 713,
	0, 0, 0, 644, 637, 0, 0, 692, 0, 0,
	0, 649, 136, 664, 735, 0, 627, 191, 239, 149,
	740, 755, 689, 203, 352, 759, 686, 685, 275, 0,
	317, 193, 213, 623, 132, 147, 619, 192, 250, 733,
	295, 673, 628, 744, 660, 670, 170, 668, 288, 258,
	341, 0, 710, 265, 287, 216, 330, 730, 339, 340,
	678, 779, 349, 354, 0, 700, 647, 309, 180, 0,
	138, 0, 272, 175, 208, 688, 725, 661, 167, 731,
	714, 749, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	684, 298, 297, 679, 199, 738, 717, 633, 281, 728,
	204, 137, 320, 357, 154, 210, 325, 626, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	671, 729, 342, 737, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 634, 0, 314, 344, 359,
	157, 656, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 654, 655, 652, 0, 653, 705, 706,
	767, 768, 769, 736, 646, 0, 751, 752, 0, 0,
	0, 0, 0, 742, 757, 758, 727, 777, 681, 682,
	651, 300, 282, 635, 638, 639, 640, 648, 696, 697,
	709, 712, 747, 746, 745, 748, 753, 773, 772, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 708, 135, 145, 214, 778, 280, 186, 345, 630,
	177, 0, 698, 701, 711, 732, 133, 146, 156, 162,
	176, 181, 185, 674, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 754, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 179, 491,
	0, 0, 0, 212, 0, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 569, 215, 0,
	0, 455, 312, 238, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 0, 0, 1451, 0, 85, 0,
	0, 0, 492, 516, 515, 518, 519, 520, 521, 0,
	0, 0, 517, 522, 551, 552, 1452, 0, 0, 489,
	507, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 505, 0, 0, 0, 0, 583,
	0, 506, 0, 0, 501, 502, 503, 508, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 239, 149,
	559, 0, 0, 203, 352, 0, 0, 581, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 0,
	295, 566, 0, 0, 0, 0, 170, 0, 288, 258,
	341, 558, 0, 265, 287, 216, 330, 0, 339, 340,
	0, 449, 349, 354, 0, 0, 0, 309, 180, 0,
	138, 0, 272, 175, 208, 0, 0, 0, 167, 0,
	0, 0, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 298, 297, 0, 199, 0, 0, 0, 281, 0,
	204, 137, 320, 357, 154, 210, 325, 0, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	0, 0, 342, 0, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	157, 0, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 570, 582, 576, 578, 577, 574, 575,
	573, 572, 571, 584, 560, 561, 562, 563, 564, 0,
	0, 0, 567, 0, 579, 580, 0, 0, 0, 0,
	0, 300, 282, 523, 524, 525, 526, 527, 531, 532,
	536, 537, 545, 544, 543, 546, 547, 549, 548, 550,
	528, 529, 530, 533, 534, 535, 538, 539, 542, 540,
	541, 565, 135, 145, 214, 0, 280, 186, 345, 0,
	177, 0, 0, 0, 0, 0, 133, 146, 156, 162,
	176, 181, 185, 0, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 37, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 179, 491,
	0, 0, 0, 212, 0, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 569, 215, 0,
	0, 455, 312, 238, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 492, 516, 515, 518, 519, 520, 521, 0,
	0, 0, 517, 522, 551, 552, 0, 0, 0, 489,
	507, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 505, 0, 0, 0, 0, 583,
	0, 506, 0, 0, 501, 502, 503, 508, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 239, 149,
	559, 0, 0, 203, 352, 0, 0, 581, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 0,
	295, 566, 0, 0, 0, 0, 170, 0, 288, 258,
	341, 558, 0, 265, 287, 216, 330, 0, 339, 340,
	0, 449, 349, 354, 0, 0, 0, 309, 180, 0,
	138, 0, 272, 175, 208, 0, 0, 0, 167, 0,
	0, 0, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 298, 297, 0, 199, 0, 0, 0, 281, 0,
	204, 137, 320, 357, 154, 210, 325, 0, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	0, 0, 342, 0, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	157, 0, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 570, 582, 576, 578, 577, 574, 575,
	573, 572, 571, 584, 560, 561, 562, 563, 564, 0,
	0, 0, 567, 0, 579, 580, 0, 0, 0, 0,
	0, 300, 282, 523, 524, 525, 526, 527, 531, 532,
	536, 537, 545, 544, 543, 546, 547, 549, 548, 550,
	528, 529, 530, 533, 534, 535, 538, 539, 542, 540,
	541, 565, 135, 145, 214, 83, 280, 186, 345, 0,
	177, 0, 0, 0, 0, 0, 133, 146, 156, 162,
	176, 181, 185, 0, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 179, 491, 0,
	0, 0, 212, 0, 0, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 569, 215, 0, 0,
	455, 312, 238, 0, 0, 0, 0, 556, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 492, 516, 515, 518, 519, 520, 521, 0, 0,
	0, 517, 522, 551, 552, 0, 0, 0, 489, 507,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 505, 485, 0, 0, 0, 583, 0,
	506, 0, 0, 501, 502, 503, 508, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 559,
	0, 0, 203, 352, 0, 0, 581, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 0, 295,
	566, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	558, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	449, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 0, 204,
	137, 320, 357, 154, 210, 325, 0, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 0,
	0, 342, 0, 279, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 570, 582, 576, 578, 577, 574, 575, 573,
	572, 571, 584, 560, 561, 562, 563, 564, 0, 0,
	0, 567, 0, 579, 580, 0, 0, 0, 0, 0,
	300, 282, 523, 524, 525, 526, 527, 531, 532, 536,
	537, 545, 544, 543, 546, 547, 549, 548, 550, 528,
	529, 530, 533, 534, 535, 538, 539, 542, 540, 541,
	565, 135, 145, 214, 0, 280, 186, 345, 0, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 179, 491, 0, 0,
	0, 212, 0, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 569, 215, 0, 0, 455,
	312, 238, 0, 0, 0, 0, 556, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 921, 0,
	492, 516, 515, 518, 519, 520, 521, 0, 0, 0,
	517, 522, 551, 552, 0, 0, 0, 489, 507, 0,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 505, 0, 0, 0, 0, 583, 0, 506,
	0, 0, 501, 502, 503, 508, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 239, 149, 559, 0,
	0, 203, 352, 0, 0, 581, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 0, 295, 566,
	0, 0, 0, 0, 170, 0, 288, 258, 341, 558,
	0, 265, 287, 216, 330, 0, 339, 340, 0, 449,
	349, 354, 0, 0, 0, 309, 180, 0, 138, 0,
	272, 175, 208, 0, 0, 0, 167, 0, 0, 0,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 298,
	297, 0, 199, 0, 0, 0, 281, 0, 204, 137,
	320, 357, 154, 210, 325, 0, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 0, 0,
	342, 0, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 157, 0,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 570, 582, 576, 578, 577, 574, 575, 573, 572,
	571, 584, 560, 561, 562, 563, 564, 0, 0, 0,
	567, 0, 579, 580, 0, 0, 0, 0, 0, 300,
	282, 523, 524, 525, 526, 527, 531, 532, 536, 537,
	545, 544, 543, 546, 547, 549, 548, 550, 528, 529,
	530, 533, 534, 535, 538, 539, 542, 540, 541, 565,
	135, 145, 214, 0, 280, 186, 345, 0, 177, 0,
	0, 0, 0, 0, 133, 146, 156, 162, 176, 181,
	185, 0, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 179, 491, 0, 0, 0,
	212, 0, 0, 169, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 569, 215, 0, 0, 455, 312,
	238, 0, 0, 0, 0, 556, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 492,
	516, 515, 518, 519, 520, 521, 0, 0, 0, 517,
	522, 551, 552, 0, 0, 0, 489, 507, 0, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 505, 1339, 0, 0, 0, 583, 0, 506, 0,
	0, 501, 502, 503, 508, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 191, 239, 149, 559, 0, 0,
	203, 352, 0, 0, 581, 275, 0, 317, 193, 213,
	153, 132, 147, 163, 192, 250, 0, 295, 566, 0,
	0, 0, 0, 170, 0, 288, 258, 341, 558, 0,
	265, 287, 216, 330, 0, 339, 340, 0, 449, 349,
	354, 0, 0, 0, 309, 180, 0, 138, 0, 272,
	175, 208, 0, 0, 0, 167, 0, 0, 0, 308,
	328, 155, 324, 237, 243, 164, 166, 165, 148, 303,
	327, 159, 168, 313, 291, 318, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 298, 297,
	0, 199, 0, 0, 0, 281, 0, 204, 137, 320,
	357, 154, 210, 325, 0, 187, 249, 172, 259, 260,
	184, 134, 277, 231, 232, 230, 233, 0, 0, 342,
	0, 279, 139, 321, 338, 160, 299, 301, 355, 286,
	142, 336, 316, 235, 205, 206, 140, 0, 141, 284,
	178, 190, 173, 253, 0, 189, 274, 333, 334, 171,
	358, 150, 348, 144, 151, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 143, 335, 234, 223, 211,
	183, 195, 270, 219, 271, 196, 241, 240, 242, 221,
	225, 0, 0, 0, 314, 344, 359, 157, 0, 302,
	326, 0, 0, 158, 188, 182, 269, 244, 152, 198,
	311, 209, 217, 283, 356, 257, 289, 161, 343, 310,
	570, 582, 576, 578, 577, 574, 575, 573, 572, 571,
	584, 560, 561, 562, 563, 564, 0, 0, 0, 567,
	0, 579, 580, 0, 0, 0, 0, 0, 300, 282,
	523, 524, 525, 526, 527, 531, 532, 536, 537, 545,
	544, 543, 546, 547, 549, 548, 550, 528, 529, 530,
	533, 534, 535, 538, 539, 542, 540, 541, 565, 135,
	145, 214, 0, 280, 186, 345, 0, 177, 0, 0,
	0, 0, 0, 133, 146, 156, 162, 176, 181, 185,
	0, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 251, 252, 255, 256, 262, 263,
	264, 266, 267, 268, 273, 276, 278, 285, 290, 292,
	293, 294, 296, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 179, 491, 0, 0, 0, 212,
	0, 0, 169, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 569, 215, 0, 0, 455, 312, 238,
	0, 0, 0, 0, 556, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 492, 516,
	1383, 518, 519, 520, 521, 0, 0, 0, 517, 522,
	551, 552, 0, 0, 0, 489, 507, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	505, 1339, 0, 0, 0, 583, 0, 506, 0, 0,
	501, 502, 503, 508, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 239, 149, 559, 0, 0, 203,
	352, 0, 0, 581, 275, 0, 317, 193, 213, 153,
	132, 147, 163, 192, 250, 0, 295, 566, 0, 0,
	0, 0, 170, 0, 288, 258, 341, 558, 0, 265,
	287, 216, 330, 0, 339, 340, 0, 449, 349, 354,
	0, 0, 0, 309, 180, 0, 138, 0, 272, 175,
	208, 0, 0, 0, 167, 0, 0, 0, 308, 328,
	155, 324, 237, 243, 164, 166, 165, 148, 303, 327,
	159, 168, 313, 291, 318, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 298, 297, 0,
	199, 0, 0, 0, 281, 0, 204, 137, 320, 357,
	154, 210, 325, 0, 187, 249, 172, 259, 260, 184,
	134, 277, 231, 232, 230, 233, 0, 0, 342, 0,
	279, 139, 321, 338, 160, 299, 301, 355, 286, 142,
	336, 316, 235, 205, 206, 140, 0, 141, 284, 178,
	190, 173, 253, 0, 189, 274, 333, 334, 171, 358,
	150, 348, 144, 151, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 143, 335, 234, 223, 211, 183,
	195, 270, 219, 271, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 157, 0, 302, 326,
	0, 0, 158, 188, 182, 269, 244, 152, 198, 311,
	209, 217, 283, 356, 257, 289, 161, 343, 310, 570,
	582, 576, 578, 577, 574, 575, 573, 572, 571, 584,
	560, 561, 562, 563, 564, 0, 0, 0, 567, 0,
	579, 580, 0, 0, 0, 0, 0, 300, 282, 523,
	524, 525, 526, 527, 531, 532, 536, 537, 545, 544,
	543, 546, 547, 549, 548, 550, 528, 529, 530, 533,
	534, 535, 538, 539, 542, 540, 541, 565, 135, 145,
	214, 0, 280, 186, 345, 0, 177, 0, 0, 0,
	0, 0, 133, 146, 156, 162, 176, 181, 185, 0,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 251, 252, 255, 256, 262, 263, 264,
	266, 267, 268, 273, 276, 278, 285, 290, 292, 293,
	294, 296, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 179, 491, 0, 0, 0, 212, 0,
	0, 169, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 569, 215, 0, 0, 455, 312, 238, 0,
	0, 0, 0, 556, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 492, 516, 1380,
	518, 519, 520, 521, 0, 0, 0, 517, 522, 551,
	552, 0, 0, 0, 489, 507, 0, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 505,
	1339, 0, 0, 0, 583, 0, 506, 0, 0, 501,
	502, 503, 508, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 239, 149, 559, 0, 0, 203, 352,
	0, 0, 581, 275, 0, 317, 193, 213, 153, 132,
	147, 163, 192, 250, 0, 295, 566, 0, 0, 0,
	0, 170, 0, 288, 258, 341, 558, 0, 265, 287,
	216, 330, 0, 339, 340, 0, 449, 349, 354, 0,
	0, 0, 309, 180, 0, 138, 0, 272, 175, 208,
	0, 0, 0, 167, 0, 0, 0, 308, 328, 155,
	324, 237, 243, 164, 166, 165, 148, 303, 327, 159,
	168, 313, 291, 318, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 298, 297, 0, 199,
	0, 0, 0, 281, 0, 204, 137, 320, 357, 154,
	210, 325, 0, 187, 249, 172, 259, 260, 184, 134,
	277, 231, 232, 230, 233, 0, 0, 342, 0, 279,
	139, 321, 338, 160, 299, 301, 355, 286, 142, 336,
	316, 235, 205, 206, 140, 0, 141, 284, 178, 190,
	173, 253, 0, 189, 274, 333, 334, 171, 358, 150,
	348, 144, 151, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 143, 335, 234, 223, 211, 183, 195,
	270, 219, 271, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 157, 0, 302, 326, 0,
	0, 158, 188, 182, 269, 244, 152, 198, 311, 209,
	217, 283, 356, 257, 289, 161, 343, 310, 570, 582,
	576, 578, 577, 574, 575, 573, 572, 571, 584, 560,
	561, 562, 563, 564, 0, 0, 0, 567, 0, 579,
	580, 0, 0, 0, 0, 0, 300, 282, 523, 524,
	525, 526, 527, 531, 532, 536, 537, 545, 544, 543,
	546, 547, 549, 548, 550, 528, 529, 530, 533, 534,
	535, 538, 539, 542, 540, 541, 565, 135, 145, 214,
	0, 280, 186, 345, 0, 177, 0, 0, 0, 0,
	0, 133, 146, 156, 162, 176, 181, 185, 0, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 251, 252, 255, 256, 262, 263, 264, 266,
	267, 268, 273, 276, 278, 285, 290, 292, 293, 294,
	296, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 494, 0,
	0, 0, 179, 491, 0, 0, 0, 212, 0, 0,
	169, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 569, 215, 0, 0, 455, 312, 238, 0, 0,
	0, 0, 556, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 1238, 0, 492, 516, 515, 518,
	519, 520, 521, 0, 0, 0, 517, 522, 551, 552,
	0, 0, 0, 489, 507, 0, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 505, 0,
	0, 0, 0, 583, 0, 506, 0, 0, 501, 502,
	503, 508, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 239, 149, 559, 0, 0, 203, 352, 0,
	0, 581, 275, 0, 317, 193, 213, 153, 132, 147,
	163, 192, 250, 0, 295, 566, 0, 0, 0, 0,
	170, 0, 288, 258, 341, 558, 0, 265, 287, 216,
	330, 0, 339, 340, 0, 449, 349, 354, 0, 0,
	0, 309, 180, 0, 138, 0, 272, 175, 208, 0,
	0, 0, 167, 0, 0, 0, 308, 328, 155, 324,
	237, 243, 164, 166, 165, 148, 303, 327, 159, 168,
	313, 291, 318, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 298, 297, 0, 199, 0,
	0, 0, 281, 0, 204, 137, 320, 357, 154, 210,
	325, 0, 187, 249, 172, 259, 260, 184, 134, 277,
	231, 232, 230, 233, 0, 0, 342, 0, 279, 139,
	321, 338, 160, 299, 301, 355, 286, 142, 336, 316,
	235, 205, 206, 140, 0, 141, 284, 178, 190, 173,
	253, 0, 189, 274, 333, 334, 171, 358, 150, 348,
	144, 151, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 143, 335, 234, 223, 211, 183, 195, 270,
	219, 271, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 157, 0, 302, 326, 0, 0,
	158, 188, 182, 269, 244, 152, 198, 311, 209, 217,
	283, 356, 257, 289, 161, 343, 310, 570, 582, 576,
	578, 577, 574, 575, 573, 572, 571, 584, 560, 561,
	562, 563, 564, 0, 0, 0, 567, 0, 579, 580,
	0, 0, 0, 0, 0, 300, 282, 523, 524, 525,
	526, 527, 531, 532, 536, 537, 545, 544, 543, 546,
	547, 549, 548, 550, 528, 529, 530, 533, 534, 535,
	538, 539, 542, 540, 541, 565, 135, 145, 214, 0,
	280, 186, 345, 0, 177, 0, 0, 0, 0, 0,
	133, 146, 156, 162, 176, 181, 185, 0, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 251, 252, 255, 256, 262, 263, 264, 266, 267,
	268, 273, 276, 278, 285, 290, 292, 293, 294, 296,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 179, 491, 0, 0, 0, 212, 0, 0, 169,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	569, 215, 0, 0, 455, 312, 238, 0, 0, 0,
	0, 556, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 492, 516, 515, 518, 519,
	520, 521, 0, 0, 0, 517, 522, 551, 552, 0,
	0, 0, 489, 507, 0, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 504, 505, 0, 0,
	0, 0, 583, 0, 506, 0, 0, 501, 502, 503,
	508, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	191, 239, 149, 559, 0, 0, 203, 352, 0, 0,
	581, 275, 0, 317, 193, 213, 153, 132, 147, 163,
	192, 250, 0, 295, 566, 0, 0, 0, 0, 170,
	0, 288, 258, 341, 558, 0, 265, 287, 216, 330,
	0, 339, 340, 0, 449, 349, 354, 0, 0, 0,
	309, 180, 0, 138, 0, 272, 175, 208, 0, 0,
	0, 167, 0, 0, 0, 308, 328, 155, 324, 237,
	243, 164, 166, 165, 148, 303, 327, 159, 168, 313,
	291, 318, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 298, 297, 0, 199, 0, 0,
	0, 281, 0, 204, 137, 320, 357, 154, 210, 325,
	0, 187, 249, 172, 259, 260, 184, 134, 277, 231,
	232, 230, 233, 0, 0, 342, 0, 279, 139, 321,
	338, 160, 299, 301, 355, 286, 142, 336, 316, 235,
	205, 206, 140, 0, 141, 284, 178, 190, 173, 253,
	0, 189, 274, 333, 334, 171, 358, 150, 348, 144,
	151, 347, 246, 0, 245, 350, 329, 337, 236, 224,
	0, 143, 335, 234, 223, 211, 183, 195, 270, 219,
	271, 196, 241, 240, 242, 221, 225, 0, 0, 0,
	314, 344, 359, 157, 0, 302, 326, 0, 0, 158,
	188, 182, 269, 244, 152, 198, 311, 209, 217, 283,
	356, 257, 289, 161, 343, 310, 570, 582, 576, 578,
	577, 574, 575, 573, 572, 571, 584, 560, 561, 562,
	563, 564, 0, 0, 0, 567, 0, 579, 580, 0,
	0, 0, 0, 0, 300, 282, 523, 524, 525, 526,
	527, 531, 532, 536, 537, 545, 544, 543, 546, 547,
	549, 548, 550, 528, 529, 530, 533, 534, 535, 538,
	539, 542, 540, 541, 565, 135, 145, 214, 0, 280,
	186, 345, 0, 177, 0, 0, 0, 0, 0, 133,
	146, 156, 162, 176, 181, 185, 0, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	251, 252, 255, 256, 262, 263, 264, 266, 267, 268,
	273, 276, 278, 285, 290, 292, 293, 294, 296, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 212, 0, 0, 169, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 569,
	215, 0, 0, 455, 312, 238, 0, 0, 0, 0,
	556, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 492, 516, 515, 518, 519, 520,
	521, 0, 0, 0, 517, 522, 551, 552, 0, 0,
	0, 0, 507, 0, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 505, 0, 0, 0,
	0, 583, 0, 506, 0, 0, 501, 502, 503, 508,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	239, 149, 559, 0, 0, 203, 352, 0, 0, 581,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 0, 295, 566, 0, 0, 0, 0, 170, 0,
	288, 258, 341, 558, 0, 265, 287, 216, 330, 0,
	339, 340, 0, 449, 349, 354, 0, 0, 0, 309,
	180, 0, 138, 0, 272, 175, 208, 0, 0, 0,
	167, 0, 0, 0, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 298, 297, 0, 199, 0, 0, 0,
	281, 0, 204, 137, 320, 357, 154, 210, 325, 0,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 0, 0, 342, 0, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 157, 0, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 570, 582, 576, 578, 577,
	574, 575, 573, 572, 571, 584, 560, 561, 562, 563,
	564, 1386, 1387, 1388, 567, 0, 579, 580, 0, 0,
	0, 0, 0, 300, 282, 523, 524, 525, 526, 527,
	531, 532, 536, 537, 545, 544, 543, 546, 547, 549,
	548, 550, 528, 529, 530, 533, 534, 535, 538, 539,
	542, 540, 541, 565, 135, 145, 214, 0, 280, 186,
	345, 0, 177, 0, 0, 0, 0, 0, 133, 146,
	156, 162, 176, 181, 185, 0, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 212, 0, 0, 169, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 569, 215,
	0, 0, 455, 312, 238, 0, 0, 0, 0, 556,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 492, 516, 515, 518, 519, 520, 521,
	0, 0, 0, 517, 522, 551, 552, 0, 0, 0,
	0, 507, 0, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 504, 505, 0, 0, 0, 0,
	583, 0, 506, 0, 0, 501, 502, 503, 508, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 191, 239,
	149, 559, 0, 0, 203, 352, 0, 0, 581, 275,
	0, 317, 193, 213, 153, 132, 147, 163, 192, 250,
	0, 295, 566, 0, 0, 0, 0, 170, 0, 288,
	258, 341, 558, 2682, 265, 287, 216, 330, 0, 339,
	340, 0, 449, 349, 354, 0, 0, 0, 309, 180,
	0, 138, 0, 272, 175, 208, 0, 0, 0, 167,
	0, 0, 0, 308, 328, 155, 324, 237, 243, 164,
	166, 165, 148, 303, 327, 159, 168, 313, 291, 318,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 298, 297, 0, 199, 0, 0, 0, 281,
	0, 204, 137, 320, 357, 154, 210, 325, 0, 187,
	249, 172, 259, 260, 184, 134, 277, 231, 232, 230,
	233, 0, 0, 342, 0, 279, 139, 321, 338, 160,
	299, 301, 355, 286, 142, 336, 316, 235, 205, 206,
	140, 0, 141, 284, 178, 190, 173, 253, 0, 189,
	274, 333, 334, 171, 358, 150, 348, 144, 151, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 143,
	335, 234, 223, 211, 183, 195, 270, 219, 271, 196,
	241, 240, 242, 221, 225, 0, 0, 0, 314, 344,
	359, 157, 0, 302, 326, 0, 0, 158, 188, 182,
	269, 244, 152, 198, 311, 209, 217, 283, 356, 257,
	289, 161, 343, 310, 570, 582, 576, 578, 577, 574,
	575, 573, 572, 571, 584, 560, 561, 562, 563, 564,
	0, 0, 0, 567, 0, 579, 580, 0, 0, 0,
	0, 0, 300, 282, 523, 524, 525, 526, 527, 531,
	532, 536, 537, 545, 544, 543, 546, 547, 549, 548,
	550, 528, 529, 530, 533, 534, 535, 538, 539, 542,
	540, 541, 565, 135, 145, 214, 0, 280, 186, 345,
	0, 177, 0, 0, 0, 0, 0, 133, 146, 156,
	162, 176, 181, 185, 0, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 251, 252,
	255, 256, 262, 263, 264, 266, 267, 268, 273, 276,
	278, 285, 290, 292, 293, 294, 296, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 212, 0, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 569, 215, 0,
	0, 455, 312, 238, 0, 0, 0, 0, 556, 557,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	921, 0, 492, 516, 515, 518, 519, 520, 521, 0,
	0, 0, 517, 522, 551, 552, 0, 0, 0, 0,
	507, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 505, 0, 0, 0, 0, 583,
	0, 506, 0, 0, 501, 502, 503, 508, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 239, 149,
	559, 0, 0, 203, 352, 0, 0, 581, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 0,
	295, 566, 0, 0, 0, 0, 170, 0, 288, 258,
	341, 558, 0, 265, 287, 216, 330, 0, 339, 340,
	0, 449, 349, 354, 0, 0, 0, 309, 180, 0,
	138, 0, 272, 175, 208, 0, 0, 0, 167, 0,
	0, 0, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 298, 297, 0, 199, 0, 0, 0, 281, 0,
	204, 137, 320, 357, 154, 210, 325, 0, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	0, 0, 342, 0, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	157, 0, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 570, 582, 576, 578, 577, 574, 575,
	573, 572, 571, 584, 560, 561, 562, 563, 564, 0,
	0, 0, 567, 0, 579, 580, 0, 0, 0, 0,
	0, 300, 282, 523, 524, 525, 526, 527, 531, 532,
	536, 537, 545, 544, 543, 546, 547, 549, 548, 550,
	528, 529, 530, 533, 534, 535, 538, 539, 542, 540,
	541, 565, 135, 145, 214, 0, 280, 186, 345, 0,
	177, 0, 0, 0, 0, 0, 133, 146, 156, 162,
	176, 181, 185, 0, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 212, 0, 0, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 569, 215, 0, 0,
	455, 312, 238, 0, 0, 0, 0, 556, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 492, 516, 515, 518, 519, 520, 521, 0, 0,
	0, 517, 522, 551, 552, 0, 0, 0, 0, 507,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 505, 0, 0, 0, 0, 583, 0,
	506, 0, 0, 501, 502, 503, 508, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 559,
	0, 0, 203, 352, 0, 0, 581, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 0, 295,
	566, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	558, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	449, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 455, 204,
	137, 320, 357, 154, 210, 325, 0, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 2107,
	0, 342, 0, 279, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 570, 582, 576, 578, 577, 574, 575, 573,
	572, 571, 584, 560, 561, 562, 563, 564, 449, 0,
	0, 567, 0, 579, 580, 0, 0, 0, 0, 0,
	300, 282, 523, 524, 525, 526, 527, 531, 532, 536,
	537, 545, 544, 543, 546, 547, 549, 548, 550, 528,
	529, 530, 533, 534, 535, 538, 539, 542, 540, 541,
	565, 135, 145, 214, 0, 280, 186, 345, 0, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 422, 323, 420, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 212, 0, 0, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	455, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	429, 430, 431, 432, 433, 437, 438, 442, 443, 452,
	451, 450, 453, 454, 457, 456, 458, 434, 435, 436,
	439, 440, 441, 444, 445, 448, 446, 447, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 0,
	0, 0, 203, 352, 0, 0, 0, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 421, 295,
	0, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	0, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	449, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 455, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 0, 204,
	137, 320, 357, 154, 210, 325, 2105, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 0,
	0, 342, 0, 462, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 0, 0, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 282, 429, 430, 431, 432, 433, 437, 438, 442,
	443, 452, 451, 450, 453, 454, 457, 456, 458, 434,
	435, 436, 439, 440, 441, 444, 445, 448, 446, 447,
	0, 135, 145, 214, 0, 280, 186, 345, 0, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 422, 323, 420, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 212, 0, 0, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	455, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 429, 430, 431,
	432, 433, 437, 438, 442, 443, 452, 451, 450, 453,
	454, 457, 456, 458, 434, 435, 436, 439, 440, 441,
	444, 445, 448, 446, 447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 0,
	0, 0, 203, 352, 0, 0, 0, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 421, 295,
	0, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	0, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	449, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 0, 204,
	137, 320, 357, 154, 210, 325, 0, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 0,
	0, 342, 0, 417, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 282, 429, 430, 431, 432, 433, 437, 438, 442,
	443, 452, 451, 450, 453, 454, 457, 456, 458, 434,
	435, 436, 439, 440, 441, 444, 445, 448, 446, 447,
	0, 135, 145, 214, 0, 280, 186, 345, 0, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 1429, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 212, 0, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 455,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1431, 1433, 0, 0, 0, 0, 0, 0,
	130, 0, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 239, 149, 0, 0,
	0, 203, 352, 0, 1432, 0, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 258, 341, 0,
	0, 265, 287, 216, 330, 0, 339, 340, 0, 449,
	349, 354, 0, 0, 0, 309, 180, 0, 138, 0,
	272, 175, 208, 0, 0, 0, 167, 0, 0, 0,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 298,
	297, 0, 199, 0, 0, 0, 281, 0, 204, 137,
	320, 357, 154, 210, 325, 0, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 0, 0,
	342, 0, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 157, 0,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	282, 429, 430, 431, 432, 433, 437, 438, 442, 443,
	452, 451, 450, 453, 454, 457, 456, 458, 434, 435,
	436, 439, 440, 441, 444, 445, 448, 446, 447, 0,
	135, 145, 214, 0, 280, 186, 345, 0, 177, 0,
	0, 0, 0, 0, 133, 146, 156, 162, 176, 181,
	185, 0, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	1429, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	212, 0, 0, 169, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 0, 215, 0, 0, 455, 312,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1431, 1433, 0, 0, 0, 0, 0, 0, 130,
	0, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 191, 239, 149, 0, 0, 0,
	203, 352, 0, 1432, 0, 275, 0, 317, 193, 213,
	153, 132, 147, 163, 192, 250, 0, 295, 0, 0,
	0, 0, 0, 170, 0, 288, 258, 341, 0, 0,
	1427, 287, 216, 330, 0, 339, 340, 0, 449, 349,
	354, 0, 0, 0, 309, 180, 0, 138, 0, 272,
	175, 208, 0, 0, 0, 167, 0, 0, 0, 308,
	328, 155, 324, 237, 243, 164, 166, 165, 148, 303,
	327, 159, 168, 313, 291, 318, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 298, 297,
	0, 199, 0, 0, 0, 281, 0, 204, 137, 320,
	357, 154, 210, 325, 0, 187, 249, 172, 259, 260,
	184, 134, 277, 231, 232, 230, 233, 0, 0, 342,
	0, 279, 139, 321, 338, 160, 299, 301, 355, 286,
	142, 336, 316, 235, 205, 206, 140, 0, 141, 284,
	178, 190, 173, 253, 0, 189, 274, 333, 334, 171,
	358, 150, 348, 144, 151, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 143, 335, 234, 223, 211,
	183, 195, 270, 219, 271, 196, 241, 240, 242, 221,
	225, 0, 0, 0, 314, 344, 359, 157, 0, 302,
	326, 0, 0, 158, 188, 182, 269, 244, 152, 198,
	311, 209, 217, 283, 356, 257, 289, 161, 343, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 282,
	429, 430, 431, 432, 433, 437, 438, 442, 443, 452,
	451, 450, 453, 454, 457, 456, 458, 434, 435, 436,
	439, 440, 441, 444, 445, 448, 446, 447, 0, 135,
	145, 214, 0, 280, 186, 345, 0, 177, 0, 0,
	0, 0, 0, 133, 146, 156, 162, 176, 181, 185,
	0, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 251, 252, 255, 256, 262, 263,
	264, 266, 267, 268, 273, 276, 278, 285, 290, 292,
	293, 294, 296, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 212,
	0, 0, 169, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 0, 215, 0, 0, 455, 312, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 944, 0,
	947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 940, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 239, 149, 0, 0, 0, 203,
	352, 0, 0, 0, 275, 0, 317, 193, 213, 153,
	132, 147, 163, 192, 250, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 258, 341, 0, 0, 265,
	287, 216, 330, 0, 339, 340, 0, 449, 349, 354,
	0, 0, 0, 309, 180, 0, 138, 0, 272, 175,
	208, 0, 0, 0, 167, 0, 0, 0, 308, 328,
	155, 324, 237, 243, 164, 166, 165, 148, 303, 327,
	159, 168, 313, 291, 318, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 298, 297, 0,
	199, 0, 0, 0, 281, 0, 204, 137, 320, 357,
	154, 210, 325, 0, 187, 249, 172, 259, 260, 184,
	134, 277, 231, 232, 230, 233, 0, 0, 342, 0,
	279, 139, 321, 338, 160, 299, 301, 355, 286, 142,
	336, 316, 235, 205, 206, 140, 0, 141, 284, 178,
	190, 173, 253, 0, 189, 274, 333, 334, 171, 358,
	150, 348, 144, 151, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 143, 335, 234, 223, 211, 183,
	195, 270, 219, 271, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 157, 0, 302, 326,
	0, 0, 158, 188, 182, 269, 244, 152, 198, 311,
	209, 217, 283, 356, 257, 289, 161, 343, 310, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 282, 429,
	430, 431, 432, 433, 437, 438, 442, 443, 452, 451,
	450, 453, 454, 457, 456, 458, 434, 435, 436, 439,
	440, 441, 444, 445, 448, 446, 447, 0, 135, 145,
	214, 0, 280, 186, 345, 0, 177, 0, 0, 0,
	0, 0, 133, 146, 156, 162, 176, 181, 185, 0,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 251, 252, 255, 256, 262, 263, 264,
	266, 267, 268, 273, 276, 278, 285, 290, 292, 293,
	294, 296, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 2603, 0, 0, 0,
	0, 0, 0, 179, 2601, 0, 0, 0, 212, 0,
	0, 169, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 0, 215, 0, 0, 455, 312, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 426, 0, 425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 239, 149, 0, 0, 0, 203, 352,
	0, 0, 0, 275, 0, 317, 193, 213, 153, 132,
	147, 163, 192, 250, 0, 295, 0, 0, 0, 0,
	0, 170, 0, 288, 258, 341, 0, 0, 265, 287,
	216, 330, 0, 339, 340, 0, 449, 349, 354, 0,
	0, 0, 309, 180, 0, 138, 0, 272, 175, 208,
	0, 0, 0, 167, 0, 0, 0, 308, 328, 155,
	324, 237, 243, 164, 166, 165, 148, 303, 327, 159,
	168, 313, 291, 318, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 298, 297, 0, 199,
	0, 2602, 0, 281, 0, 204, 137, 320, 357, 154,
	210, 325, 0, 187, 249, 172, 259, 260, 184, 134,
	277, 231, 232, 230, 233, 0, 0, 342, 0, 279,
	139, 321, 338, 160, 299, 301, 355, 286, 142, 336,
	316, 235, 205, 206, 140, 0, 141, 284, 178, 190,
	173, 253, 0, 189, 274, 333, 334, 171, 358, 150,
	348, 144, 151, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 143, 335, 234, 223, 211, 183, 195,
	270, 219, 271, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 157, 0, 302, 326, 0,
	0, 158, 188, 182, 269, 244, 152, 198, 311, 209,
	217, 283, 356, 257, 289, 161, 343, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 282, 429, 430,
	431, 432, 433, 437, 438, 442, 443, 452, 451, 450,
	453, 454, 457, 456, 458, 434, 435, 436, 439, 440,
	441, 444, 445, 448, 446, 447, 0, 135, 145, 214,
	0, 280, 186, 345, 0, 177, 0, 0, 0, 0,
	0, 133, 146, 156, 162, 176, 181, 185, 0, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 251, 252, 255, 256, 262, 263, 264, 266,
	267, 268, 273, 276, 278, 285, 290, 292, 293, 294,
	296, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 212, 1732, 0,
	169, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 0, 215, 0, 0, 455, 312, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 239, 149, 0, 0, 0, 203, 352, 0,
	0, 0, 275, 0, 317, 193, 213, 153, 132, 147,
	163, 192, 250, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 258, 341, 0, 0, 265, 287, 216,
	330, 0, 339, 340, 0, 449, 349, 354, 0, 0,
	0, 309, 180, 0, 138, 0, 272, 175, 208, 0,
	0, 0, 167, 0, 0, 0, 308, 328, 155, 324,
	237, 243, 164, 166, 165, 148, 303, 327, 159, 168,
	313, 291, 318, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 298, 297, 0, 199, 0,
	0, 0, 281, 0, 204, 137, 320, 357, 154, 210,
	325, 0, 187, 249, 172, 259, 260, 184, 134, 277,
	231, 232, 230, 233, 0, 0, 342, 0, 279, 139,
	321, 338, 160, 299, 301, 355, 286, 142, 336, 316,
	235, 205, 206, 140, 0, 141, 284, 178, 190, 173,
	253, 0, 189, 274, 333, 334, 171, 358, 150, 348,
	144, 151, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 143, 335, 234, 223, 211, 183, 195, 270,
	219, 271, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 157, 0, 302, 326, 0, 0,
	158, 188, 182, 269, 244, 152, 198, 311, 209, 217,
	283, 356, 257, 289, 161, 343, 310, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 282, 429, 430, 431,
	432, 433, 437, 438, 442, 443, 452, 451, 450, 453,
	454, 457, 456, 458, 434, 435, 436, 439, 440, 441,
	444, 445, 448, 446, 447, 0, 135, 145, 214, 0,
	280, 186, 345, 0, 177, 0, 0, 0, 0, 0,
	133, 146, 156, 162, 176, 181, 185, 0, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 251, 252, 255, 256, 262, 263, 264, 266, 267,
	268, 273, 276, 278, 285, 290, 292, 293, 294, 296,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 212, 0, 0, 169,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	0, 215, 0, 0, 455, 312, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 426, 0, 425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	191, 239, 149, 0, 0, 0, 203, 352, 0, 0,
	0, 275, 0, 317, 193, 213, 153, 132, 147, 163,
	192, 250, 0, 295, 0, 0, 0, 0, 0, 170,
	0, 288, 258, 341, 0, 0, 265, 287, 216, 330,
	0, 339, 340, 0, 449, 349, 354, 0, 0, 0,
	309, 180, 0, 138, 0, 272, 175, 208, 0, 0,
	0, 167, 0, 0, 0, 308, 328, 155, 324, 237,
	243, 164, 166, 165, 148, 303, 327, 159, 168, 313,
	291, 318, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 298, 297, 0, 199, 0, 0,
	0, 281, 0, 204, 137, 320, 357, 154, 210, 325,
	0, 187, 249, 172, 259, 260, 184, 134, 277, 231,
	232, 230, 233, 0, 0, 342, 0, 279, 139, 321,
	338, 160, 299, 301, 355, 286, 142, 336, 316, 235,
	205, 206, 140, 0, 141, 284, 178, 190, 173, 253,
	0, 189, 274, 333, 334, 171, 358, 150, 348, 144,
	151, 347, 246, 0, 245, 350, 329, 337, 236, 224,
	0, 143, 335, 234, 223, 211, 183, 195, 270, 219,
	271, 196, 241, 240, 242, 221, 225, 0, 0, 0,
	314, 344, 359, 157, 0, 302, 326, 0, 0, 158,
	188, 182, 269, 244, 152, 198, 311, 209, 217, 283,
	356, 257, 289, 161, 343, 310, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 282, 429, 430, 431, 432,
	433, 437, 438, 442, 443, 452, 451, 450, 453, 454,
	457, 456, 458, 434, 435, 436, 439, 440, 441, 444,
	445, 448, 446, 447, 0, 135, 145, 214, 0, 280,
	186, 345, 0, 177, 0, 0, 0, 0, 0, 133,
	146, 156, 162, 176, 181, 185, 0, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	251, 252, 255, 256, 262, 263, 264, 266, 267, 268,
	273, 276, 278, 285, 290, 292, 293, 294, 296, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 212, 0, 0, 169, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 0,
	215, 0, 0, 455, 312, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 0, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	239, 149, 0, 0, 0, 203, 352, 0, 0, 0,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 258, 341, 0, 0, 265, 287, 216, 330, 0,
	339, 340, 0, 449, 349, 354, 0, 0, 0, 309,
	180, 0, 138, 0, 272, 175, 208, 0, 0, 0,
	167, 0, 0, 0, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 298, 297, 0, 199, 0, 0, 0,
	281, 0, 204, 137, 320, 357, 154, 210, 325, 0,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 0, 0, 342, 0, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 157, 0, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 282, 429, 430, 431, 432, 433,
	437, 438, 442, 443, 452, 451, 450, 453, 454, 457,
	456, 458, 434, 435, 436, 439, 440, 441, 444, 445,
	448, 446, 447, 0, 135, 145, 214, 0, 280, 186,
	345, 0, 177, 0, 0, 0, 0, 0, 133, 146,
	156, 162, 176, 181, 185, 0, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 212, 0, 0, 169, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 0, 215,
	0, 0, 455, 312, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 191, 239,
	149, 0, 0, 0, 203, 352, 0, 0, 0, 275,
	0, 317, 193, 213, 153, 132, 147, 163, 192, 250,
	0, 295, 0, 0, 0, 0, 0, 170, 0, 288,
	258, 341, 0, 0, 265, 287, 216, 330, 0, 339,
	340, 0, 449, 349, 354, 0, 0, 0, 309, 180,
	0, 138, 0, 272, 175, 208, 0, 0, 0, 167,
	0, 0, 0, 308, 328, 155, 324, 237, 243, 164,
	166, 165, 148, 303, 327, 159, 168, 313, 291, 318,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 298, 297, 0, 199, 0, 0, 0, 281,
	0, 204, 137, 320, 357, 154, 210, 325, 0, 187,
	249, 172, 259, 260, 184, 134, 277, 231, 232, 230,
	233, 0, 0, 342, 0, 279, 139, 321, 338, 160,
	299, 301, 355, 286, 142, 336, 316, 235, 205, 206,
	140, 0, 141, 284, 178, 190, 173, 253, 0, 189,
	274, 333, 334, 171, 358, 150, 348, 144, 151, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 143,
	335, 234, 223, 211, 183, 195, 270, 219, 271, 196,
	241, 240, 242, 221, 225, 0, 0, 0, 314, 344,
	359, 157, 0, 302, 326, 0, 0, 158, 188, 182,
	269, 244, 152, 198, 311, 209, 217, 283, 356, 257,
	289, 161, 343, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 282, 429, 430, 431, 432, 433, 437,
	438, 442, 443, 452, 451, 450, 453, 454, 457, 456,
	458, 434, 435, 436, 439, 440, 441, 444, 445, 448,
	446, 447, 0, 135, 145, 214, 0, 280, 186, 345,
	0, 177, 0, 0, 0, 0, 0, 133, 146, 156,
	162, 176, 181, 185, 0, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 251, 252,
	255, 256, 262, 263, 264, 266, 267, 268, 273, 276,
	278, 285, 290, 292, 293, 294, 296, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 212, 0, 0, 169, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 0, 215, 0,
	0, 455, 312, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 239, 149,
	0, 0, 0, 203, 352, 0, 0, 0, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 0,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 258,
	341, 0, 0, 265, 287, 216, 330, 0, 339, 340,
	0, 449, 349, 354, 0, 0, 0, 309, 180, 0,
	138, 0, 272, 175, 208, 0, 0, 0, 167, 0,
	0, 0, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 298, 297, 0, 199, 0, 0, 0, 281, 0,
	204, 137, 320, 357, 154, 210, 325, 0, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	0, 0, 342, 0, 279, 139, 321, 338, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	157, 0, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 282, 429, 430, 431, 432, 433, 437, 438,
	442, 443, 452, 451, 450, 453, 454, 457, 456, 458,
	434, 435, 436, 439, 440, 441, 444, 445, 448, 446,
	447, 0, 135, 145, 214, 0, 280, 186, 345, 0,
	177, 0, 0, 0, 0, 0, 133, 146, 156, 162,
	176, 181, 185, 0, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 212, 0, 0, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	455, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 0,
	0, 0, 203, 352, 0, 0, 0, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 0, 295,
	0, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	0, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	449, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 0, 204,
	137, 320, 357, 154, 210, 325, 0, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 0,
	0, 342, 0, 279, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 282, 429, 430, 431, 432, 433, 437, 438, 442,
	443, 452, 451, 450, 453, 454, 457, 456, 458, 434,
	435, 436, 439, 440, 441, 444, 445, 448, 446, 447,
	0, 135, 145, 214, 0, 280, 186, 345, 0, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 212, 0, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 0,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 956, 966,
	967, 959, 960, 961, 962, 963, 964, 965, 958, 0,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 239, 149, 0, 0,
	0, 203, 352, 0, 0, 0, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 258, 341, 0,
	0, 265, 287, 216, 330, 0, 339, 340, 0, 0,
	349, 354, 0, 0, 0, 309, 180, 0, 138, 0,
	272, 175, 208, 0, 0, 0, 167, 0, 0, 0,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 298,
	297, 0, 199, 0, 0, 0, 281, 0, 204, 137,
	320, 357, 154, 210, 325, 0, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 0, 0,
	342, 0, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 157, 0,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 37, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 212, 300,
	282, 169, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 1424, 215, 0, 0, 0, 312, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 145, 214, 85, 280, 186, 345, 130, 177, 0,
	0, 0, 0, 0, 133, 146, 156, 162, 176, 181,
	185, 0, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 239, 149, 0, 0, 0, 203, 352,
	0, 0, 0, 275, 0, 317, 193, 213, 153, 132,
	147, 163, 192, 250, 0, 295, 0, 0, 0, 0,
	0, 170, 0, 288, 258, 341, 0, 0, 265, 287,
	216, 330, 0, 339, 340, 0, 0, 349, 354, 0,
	0, 0, 309, 180, 0, 138, 0, 272, 175, 208,
	0, 0, 0, 167, 0, 0, 0, 308, 328, 155,
	324, 237, 243, 164, 166, 165, 148, 303, 327, 159,
	168, 313, 291, 318, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 298, 297, 0, 199,
	0, 0, 0, 281, 0, 204, 137, 320, 357, 154,
	210, 325, 0, 187, 249, 172, 259, 260, 184, 134,
	277, 231, 232, 230, 233, 0, 0, 342, 0, 279,
	139, 321, 338, 160, 299, 301, 355, 286, 142, 336,
	316, 235, 205, 206, 140, 0, 141, 284, 178, 190,
	173, 253, 0, 189, 274, 333, 334, 171, 358, 150,
	348, 144, 151, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 143, 335, 234, 223, 211, 183, 195,
	270, 219, 271, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 157, 0, 302, 326, 0,
	0, 158, 188, 182, 269, 244, 152, 198, 311, 209,
	217, 283, 356, 257, 289, 161, 343, 310, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 1093, 0, 0, 0, 212, 300, 282, 169, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 0,
	215, 0, 0, 0, 312, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 145, 214,
	83, 280, 186, 345, 624, 177, 1092, 0, 0, 0,
	0, 133, 146, 156, 162, 176, 181, 185, 0, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 251, 252, 255, 256, 262, 263, 264, 266,
	267, 268, 273, 276, 278, 285, 290, 292, 293, 294,
	296, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	239, 149, 0, 0, 0, 203, 352, 0, 0, 0,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 258, 341, 0, 0, 265, 287, 216, 330, 0,
	339, 340, 0, 0, 349, 354, 0, 0, 0, 309,
	180, 0, 138, 0, 272, 175, 208, 0, 0, 0,
	167, 0, 0, 0, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 298, 297, 0, 199, 0, 0, 0,
	281, 0, 204, 137, 320, 357, 154, 210, 325, 0,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 0, 0, 342, 0, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 157, 0, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 212, 300, 282, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	0, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 145, 214, 85, 280, 186,
	345, 130, 177, 0, 0, 0, 0, 0, 133, 146,
	156, 162, 176, 181, 185, 0, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 0,
	0, 0, 203, 352, 0, 0, 0, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 0, 295,
	0, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	0, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	0, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 0, 204,
	137, 320, 357, 154, 210, 325, 0, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 0,
	0, 342, 0, 279, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 145, 214, 0, 280, 186, 345, 0, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 212, 0, 0, 169, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 0,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 239, 149, 0, 0,
	0, 203, 352, 0, 0, 0, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 258, 341, 0,
	0, 265, 287, 216, 330, 0, 339, 340, 0, 0,
	349, 354, 0, 0, 0, 309, 180, 0, 138, 0,
	272, 175, 208, 0, 0, 0, 167, 0, 0, 0,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 298,
	297, 0, 199, 0, 0, 0, 281, 0, 204, 137,
	320, 357, 154, 210, 325, 0, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 0, 0,
	342, 0, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 157, 0,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 212, 300,
	282, 169, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 0, 215, 0, 0, 0, 312, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 145, 214, 85, 280, 186, 345, 624, 177, 0,
	0, 0, 0, 0, 133, 146, 156, 162, 176, 181,
	185, 0, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 239, 149, 0, 0, 0, 203, 352,
	0, 0, 0, 275, 0, 317, 193, 213, 153, 132,
	147, 163, 192, 250, 0, 295, 0, 0, 0, 0,
	0, 170, 0, 288, 258, 341, 0, 0, 265, 287,
	216, 330, 0, 339, 340, 0, 0, 349, 354, 0,
	0, 0, 309, 180, 0, 138, 0, 272, 175, 208,
	0, 0, 0, 167, 0, 0, 0, 308, 328, 155,
	324, 237, 243, 164, 166, 165, 148, 303, 327, 159,
	168, 313, 291, 318, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 298, 297, 0, 199,
	0, 0, 0, 281, 0, 204, 137, 320, 357, 154,
	210, 325, 0, 187, 249, 172, 259, 260, 184, 134,
	277, 231, 232, 230, 233, 0, 0, 342, 0, 279,
	139, 321, 338, 160, 299, 301, 355, 286, 142, 336,
	316, 235, 205, 206, 140, 0, 141, 284, 178, 190,
	173, 253, 0, 189, 274, 333, 334, 171, 358, 150,
	348, 144, 151, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 143, 335, 234, 223, 211, 183, 195,
	270, 219, 271, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 157, 0, 302, 326, 0,
	0, 158, 188, 182, 269, 244, 152, 198, 311, 209,
	217, 283, 356, 257, 289, 161, 343, 310, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 145, 214,
	0, 280, 186, 345, 0, 177, 0, 0, 0, 0,
	0, 133, 146, 156, 162, 176, 181, 185, 0, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 251, 252, 255, 256, 262, 263, 264, 266,
	267, 268, 273, 276, 278, 285, 290, 292, 293, 294,
	296, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 212, 0, 0,
	169, 220, 218, 0, 0, 0, 261, 322, 0, 0,
	0, 0, 215, 0, 0, 0, 312, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 191, 239, 149, 0, 0, 0, 203, 352, 0,
	0, 0, 275, 0, 317, 193, 213, 153, 132, 147,
	163, 192, 250, 0, 295, 0, 0, 0, 0, 0,
	170, 0, 288, 258, 341, 0, 0, 265, 287, 216,
	330, 0, 339, 340, 0, 0, 349, 354, 0, 0,
	0, 309, 180, 0, 138, 0, 272, 175, 208, 0,
	0, 0, 167, 0, 0, 0, 308, 328, 155, 324,
	237, 243, 164, 166, 165, 148, 303, 327, 159, 168,
	313, 291, 318, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 298, 297, 0, 199, 0,
	0, 0, 281, 0, 204, 137, 320, 357, 154, 210,
	325, 0, 187, 249, 172, 259, 260, 184, 134, 277,
	231, 232, 230, 233, 0, 0, 342, 0, 279, 139,
	321, 338, 160, 299, 301, 355, 286, 142, 336, 316,
	235, 205, 206, 140, 0, 141, 284, 178, 190, 173,
	253, 0, 189, 274, 333, 334, 171, 358, 150, 348,
	144, 151, 347, 246, 0, 245, 350, 329, 337, 236,
	224, 0, 143, 335, 234, 223, 211, 183, 195, 270,
	219, 271, 196, 241, 240, 242, 221, 225, 0, 0,
	0, 314, 344, 359, 157, 0, 302, 326, 0, 0,
	158, 188, 182, 269, 244, 152, 198, 311, 209, 217,
	283, 356, 257, 289, 161, 343, 310, 0, 323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 1062, 179,
	0, 0, 0, 0, 212, 300, 282, 169, 220, 218,
	0, 0, 0, 261, 322, 0, 0, 0, 0, 215,
	0, 0, 0, 312, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 145, 214, 0,
	280, 186, 345, 130, 177, 0, 0, 0, 0, 0,
	133, 146, 156, 162, 176, 181, 185, 0, 194, 197,
	200, 201, 202, 207, 222, 226, 227, 228, 229, 247,
	248, 251, 252, 255, 256, 262, 263, 264, 266, 267,
	268, 273, 276, 278, 285, 290, 292, 293, 294, 296,
	304, 305, 306, 307, 315, 319, 331, 332, 351, 353,
	0, 0, 0, 136, 0, 0, 0, 0, 191, 239,
	149, 0, 0, 0, 203, 352, 0, 0, 0, 275,
	0, 317, 193, 213, 153, 132, 147, 163, 192, 250,
	0, 295, 0, 0, 0, 0, 0, 170, 0, 288,
	258, 341, 0, 0, 265, 287, 216, 330, 0, 339,
	340, 0, 0, 349, 354, 0, 0, 0, 309, 180,
	0, 138, 0, 272, 175, 208, 0, 0, 0, 167,
	0, 0, 0, 308, 328, 155, 324, 237, 243, 164,
	166, 165, 148, 303, 327, 159, 168, 313, 291, 318,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 298, 297, 0, 199, 0, 0, 0, 281,
	0, 204, 137, 320, 357, 154, 210, 325, 0, 187,
	249, 172, 259, 260, 184, 134, 277, 231, 232, 230,
	233, 0, 0, 342, 0, 279, 139, 321, 338, 160,
	299, 301, 355, 286, 142, 336, 316, 235, 205, 206,
	140, 0, 141, 284, 178, 190, 173, 253, 0, 189,
	274, 333, 334, 171, 358, 150, 348, 144, 151, 347,
	246, 0, 245, 350, 329, 337, 236, 224, 0, 143,
	335, 234, 223, 211, 183, 195, 270, 219, 271, 196,
	241, 240, 242, 221, 225, 0, 0, 0, 314, 344,
	359, 157, 0, 302, 326, 0, 0, 158, 188, 182,
	269, 244, 152, 198, 311, 209, 217, 283, 356, 257,
	289, 161, 343, 310, 0, 323, 0, 0, 0, 587,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 212, 300, 282, 169, 220, 218, 0, 0, 0,
	261, 322, 0, 0, 0, 0, 215, 0, 0, 0,
	312, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 145, 214, 0, 280, 186, 345,
	130, 177, 0, 0, 0, 0, 0, 133, 146, 156,
	162, 176, 181, 185, 0, 194, 197, 200, 201, 202,
	207, 222, 226, 227, 228, 229, 247, 248, 251, 252,
	255, 256, 262, 263, 264, 266, 267, 268, 273, 276,
	278, 285, 290, 292, 293, 294, 296, 304, 305, 306,
	307, 315, 319, 331, 332, 351, 353, 0, 0, 0,
	136, 0, 0, 0, 0, 191, 239, 149, 0, 0,
	0, 203, 352, 0, 0, 0, 275, 0, 317, 193,
	213, 153, 132, 147, 163, 192, 250, 0, 295, 0,
	0, 0, 0, 0, 170, 0, 288, 258, 341, 0,
	0, 265, 287, 216, 330, 0, 339, 340, 0, 0,
	349, 354, 0, 0, 0, 309, 180, 0, 138, 0,
	272, 175, 208, 0, 0, 0, 167, 0, 0, 0,
	308, 328, 155, 324, 237, 243, 164, 166, 165, 148,
	303, 327, 159, 168, 313, 291, 318, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 298,
	297, 0, 199, 0, 0, 0, 281, 0, 204, 137,
	320, 357, 154, 210, 325, 0, 187, 249, 172, 259,
	260, 184, 134, 277, 231, 232, 230, 233, 0, 0,
	342, 0, 279, 139, 321, 338, 160, 299, 301, 355,
	286, 142, 336, 316, 235, 205, 206, 140, 0, 141,
	284, 178, 190, 173, 253, 0, 189, 274, 333, 334,
	171, 358, 150, 348, 144, 151, 347, 246, 0, 245,
	350, 329, 337, 236, 224, 0, 143, 335, 234, 223,
	211, 183, 195, 270, 219, 271, 196, 241, 240, 242,
	221, 225, 0, 0, 0, 314, 344, 359, 157, 0,
	302, 326, 0, 0, 158, 188, 182, 269, 244, 152,
	198, 311, 209, 217, 283, 356, 257, 289, 161, 343,
	310, 0, 323, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 212, 300,
	282, 169, 220, 218, 0, 0, 0, 261, 322, 0,
	0, 0, 0, 215, 0, 0, 0, 312, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 145, 214, 0, 280, 186, 345, 130, 177, 0,
	0, 0, 0, 0, 133, 146, 156, 162, 176, 181,
	185, 0, 194, 197, 200, 201, 202, 207, 222, 226,
	227, 228, 229, 247, 248, 251, 252, 255, 256, 262,
	263, 264, 266, 267, 268, 273, 276, 278, 285, 290,
	292, 293, 294, 296, 304, 305, 306, 307, 315, 319,
	331, 332, 351, 353, 0, 0, 0, 136, 0, 0,
	0, 0, 191, 239, 149, 0, 127, 0, 203, 352,
	0, 0, 0, 275, 0, 317, 193, 213, 153, 132,
	147, 163, 192, 250, 0, 295, 0, 0, 0, 0,
	0, 170, 0, 288, 258, 341, 0, 0, 265, 287,
	216, 330, 0, 339, 340, 0, 0, 349, 354, 0,
	0, 0, 309, 180, 0, 138, 0, 272, 175, 208,
	0, 0, 0, 167, 0, 0, 0, 308, 328, 155,
	324, 237, 243, 164, 166, 165, 148, 303, 327, 159,
	168, 313, 291, 318, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 298, 297, 0, 199,
	0, 0, 0, 281, 0, 204, 137, 320, 357, 154,
	210, 325, 0, 187, 249, 172, 259, 260, 184, 134,
	277, 231, 232, 230, 233, 0, 0, 342, 0, 279,
	139, 321, 338, 160, 299, 301, 355, 286, 142, 336,
	316, 235, 205, 206, 140, 0, 141, 284, 178, 190,
	173, 253, 0, 189, 274, 333, 334, 171, 358, 150,
	348, 144, 151, 347, 246, 0, 245, 350, 329, 337,
	236, 224, 0, 143, 335, 234, 223, 211, 183, 195,
	270, 219, 271, 196, 241, 240, 242, 221, 225, 0,
	0, 0, 314, 344, 359, 157, 0, 302, 326, 0,
	0, 158, 188, 182, 269, 244, 152, 198, 311, 209,
	217, 283, 356, 257, 289, 161, 343, 310, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 212, 300, 282, 169, 220,
	218, 0, 0, 0, 261, 322, 0, 0, 0, 0,
	215, 0, 0, 0, 312, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 145, 214,
	0, 280, 186, 345, 624, 177, 0, 0, 0, 0,
	0, 133, 146, 156, 162, 176, 181, 185, 0, 194,
	197, 200, 201, 202, 207, 222, 226, 227, 228, 229,
	247, 248, 251, 252, 255, 256, 262, 263, 264, 266,
	267, 268, 273, 276, 278, 285, 290, 292, 293, 294,
	296, 304, 305, 306, 307, 315, 319, 331, 332, 351,
	353, 0, 0, 0, 136, 0, 0, 0, 0, 191,
	239, 149, 0, 0, 0, 203, 352, 0, 0, 0,
	275, 0, 317, 193, 213, 153, 132, 147, 163, 192,
	250, 0, 295, 0, 0, 0, 0, 0, 170, 0,
	288, 258, 341, 0, 0, 265, 287, 216, 330, 0,
	339, 340, 0, 0, 349, 354, 0, 0, 0, 309,
	180, 0, 138, 0, 272, 175, 208, 0, 0, 0,
	167, 0, 0, 0, 308, 328, 155, 324, 237, 243,
	164, 166, 165, 148, 303, 327, 159, 168, 313, 291,
	318, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 298, 297, 0, 199, 0, 0, 0,
	281, 0, 204, 137, 320, 357, 154, 210, 325, 0,
	187, 249, 172, 259, 260, 184, 134, 277, 231, 232,
	230, 233, 0, 0, 342, 0, 279, 139, 321, 338,
	160, 299, 301, 355, 286, 142, 336, 316, 235, 205,
	206, 140, 0, 141, 284, 178, 190, 173, 253, 0,
	189, 274, 333, 334, 171, 358, 150, 348, 144, 151,
	347, 246, 0, 245, 350, 329, 337, 236, 224, 0,
	143, 335, 234, 223, 211, 183, 195, 270, 219, 271,
	196, 241, 240, 242, 221, 225, 0, 0, 0, 314,
	344, 359, 157, 0, 302, 326, 0, 0, 158, 188,
	182, 269, 244, 152, 198, 311, 209, 217, 283, 356,
	257, 289, 161, 343, 310, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 212, 300, 282, 169, 220, 218, 0, 0,
	0, 261, 322, 0, 0, 0, 0, 215, 0, 0,
	0, 312, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 145, 214, 0, 280, 186,
	345, 130, 177, 0, 0, 0, 0, 0, 133, 146,
	156, 162, 176, 181, 185, 0, 194, 197, 200, 201,
	202, 207, 222, 226, 227, 228, 229, 247, 248, 251,
	252, 255, 256, 262, 263, 264, 266, 267, 268, 273,
	276, 278, 285, 290, 292, 293, 294, 296, 304, 305,
	306, 307, 315, 319, 331, 332, 351, 353, 0, 0,
	0, 136, 0, 0, 0, 0, 191, 239, 149, 0,
	0, 0, 203, 352, 0, 0, 0, 275, 0, 317,
	193, 213, 153, 132, 147, 163, 192, 250, 0, 295,
	0, 0, 0, 0, 0, 170, 0, 288, 258, 341,
	0, 0, 265, 287, 216, 330, 0, 339, 340, 0,
	0, 349, 354, 0, 0, 0, 309, 180, 0, 138,
	0, 272, 175, 208, 0, 0, 0, 167, 0, 0,
	0, 308, 328, 155, 324, 237, 243, 164, 166, 165,
	148, 303, 327, 159, 168, 313, 291, 318, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	298, 297, 0, 199, 0, 0, 0, 281, 0, 204,
	137, 320, 357, 154, 210, 325, 0, 187, 249, 172,
	259, 260, 184, 134, 277, 231, 232, 230, 233, 0,
	0, 342, 0, 279, 139, 321, 338, 160, 299, 301,
	355, 286, 142, 336, 316, 235, 205, 206, 140, 0,
	141, 284, 178, 190, 173, 253, 0, 189, 274, 333,
	334, 171, 358, 150, 348, 144, 151, 347, 246, 0,
	245, 350, 329, 337, 236, 224, 0, 143, 335, 234,
	223, 211, 183, 195, 270, 219, 271, 196, 241, 240,
	242, 221, 225, 0, 0, 0, 314, 344, 359, 157,
	0, 302, 326, 0, 0, 158, 188, 182, 269, 244,
	152, 198, 311, 209, 217, 283, 356, 257, 289, 161,
	343, 310, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 212,
	300, 282, 169, 220, 218, 0, 0, 0, 261, 322,
	0, 0, 0, 0, 215, 0, 0, 0, 312, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 145, 214, 0, 280, 186, 345, 492, 177,
	0, 0, 0, 0, 0, 133, 146, 156, 162, 176,
	181, 185, 0, 194, 197, 200, 201, 202, 207, 222,
	226, 227, 228, 229, 247, 248, 251, 252, 255, 256,
	262, 263, 264, 266, 267, 268, 273, 276, 278, 285,
	290, 292, 293, 294, 296, 304, 305, 306, 307, 315,
	319, 331, 332, 351, 353, 0, 0, 0, 136, 0,
	0, 0, 0, 191, 239, 149, 0, 0, 0, 203,
	352, 0, 0, 0, 275, 0, 317, 193, 213, 153,
	132, 147, 163, 192, 250, 0, 295, 0, 0, 0,
	0, 0, 170, 0, 288, 258, 341, 0, 0, 265,
	287, 216, 330, 0, 339, 340, 0, 0, 349, 354,
	0, 0, 0, 309, 180, 0, 138, 0, 272, 175,
	208, 0, 0, 0, 167, 0, 0, 0, 308, 328,
	155, 324, 237, 243, 164, 166, 165, 148, 303, 327,
	159, 168, 313, 291, 318, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 298, 297, 0,
	199, 0, 0, 0, 281, 0, 204, 137, 320, 357,
	154, 210, 325, 0, 187, 249, 172, 259, 260, 184,
	134, 277, 231, 232, 230, 233, 0, 0, 342, 0,
	279, 139, 321, 338, 160, 299, 301, 355, 286, 142,
	336, 316, 235, 205, 206, 140, 0, 141, 284, 178,
	190, 173, 253, 0, 189, 274, 333, 334, 171, 358,
	150, 348, 144, 151, 347, 246, 0, 245, 350, 329,
	337, 236, 224, 0, 143, 335, 234, 223, 211, 183,
	195, 270, 219, 271, 196, 241, 240, 242, 221, 225,
	0, 0, 0, 314, 344, 359, 157, 0, 302, 326,
	0, 0, 158, 188, 182, 269, 244, 152, 198, 311,
	209, 217, 283, 356, 257, 289, 161, 343, 310, 0,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 212, 300, 282, 169,
	220, 218, 0, 0, 0, 261, 322, 0, 0, 0,
	0, 215, 0, 0, 0, 312, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 145,
	214, 0, 280, 186, 345, 492, 177, 0, 0, 0,
	0, 0, 133, 146, 156, 162, 176, 181, 185, 0,
	194, 197, 200, 201, 202, 207, 222, 226, 227, 228,
	229, 247, 248, 251, 252, 255, 256, 262, 263, 264,
	266, 267, 268, 273, 276, 278, 285, 290, 292, 293,
	294, 296, 304, 305, 306, 307, 315, 319, 331, 332,
	351, 353, 0, 0, 0, 136, 0, 0, 0, 0,
	191, 239, 149, 0, 0, 0, 203, 352, 0, 0,
	0, 275, 0, 317, 193, 213, 153, 132, 147, 163,
	192, 250, 0, 295, 0, 0, 0, 0, 0, 170,
	0, 288, 258, 341, 0, 0, 265, 287, 216, 330,
	0, 339, 340, 0, 0, 349, 354, 0, 0, 0,
	309, 180, 0, 138, 0, 272, 175, 208, 0, 0,
	0, 167, 0, 0, 0, 308, 328, 155, 324, 237,
	243, 164, 166, 165, 148, 303, 327, 159, 168, 313,
	291, 318, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 298, 297, 0, 199, 0, 0,
	0, 281, 0, 204, 137, 320, 357, 154, 210, 325,
	0, 187, 249, 172, 259, 260, 184, 134, 277, 231,
	232, 230, 233, 0, 0, 342, 0, 279, 139, 321,
	338, 160, 299, 301, 355, 286, 142, 336, 316, 235,
	205, 206, 140, 0, 141, 284, 178, 190, 173, 253,
	0, 189, 274, 333, 334, 171, 358, 150, 348, 144,
	607, 347, 246, 0, 245, 350, 329, 337, 236, 224,
	0, 143, 335, 234, 223, 211, 183, 195, 270, 219,
	271, 196, 241, 240, 242, 603, 225, 0, 0, 0,
	314, 344, 359, 157, 0, 302, 326, 0, 0, 158,
	188, 182, 269, 608, 606, 597, 598, 209, 217, 283,
	356, 257, 289, 161, 343, 310, 0, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 212, 300, 282, 169, 220, 218, 0,
	0, 0, 261, 322, 0, 0, 0, 0, 215, 0,
	0, 0, 312, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 145, 214, 0, 280,
	186, 345, 492, 177, 0, 0, 0, 0, 0, 133,
	146, 156, 162, 176, 181, 185, 0, 194, 197, 200,
	201, 202, 207, 222, 226, 227, 228, 229, 247, 248,
	251, 252, 255, 256, 262, 263, 264, 266, 604, 605,
	273, 276, 278, 285, 290, 292, 293, 294, 296, 304,
	305, 306, 307, 315, 319, 331, 332, 351, 353, 0,
	0, 0, 136, 0, 0, 0, 0, 191, 239, 149,
	0, 0, 0, 203, 352, 0, 0, 0, 275, 0,
	317, 193, 213, 153, 132, 147, 163, 192, 250, 0,
	295, 0, 0, 0, 0, 0, 170, 0, 288, 258,
	341, 0, 0, 265, 287, 216, 330, 0, 339, 340,
	0, 0, 349, 354, 0, 0, 0, 309, 180, 0,
	138, 0, 272, 175, 208, 0, 0, 0, 167, 0,
	0, 0, 308, 328, 155, 324, 237, 243, 164, 166,
	165, 148, 303, 327, 159, 168, 313, 291, 318, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 298, 297, 0, 199, 0, 0, 0, 281, 0,
	204, 137, 320, 357, 154, 210, 325, 0, 187, 249,
	172, 259, 260, 184, 134, 277, 231, 232, 230, 233,
	0, 0, 342, 0, 279, 139, 321, 1087, 160, 299,
	301, 355, 286, 142, 336, 316, 235, 205, 206, 140,
	0, 141, 284, 178, 190, 173, 253, 0, 189, 274,
	333, 334, 171, 358, 150, 348, 144, 151, 347, 246,
	0, 245, 350, 329, 337, 236, 224, 0, 143, 335,
	234, 223, 211, 183, 195, 270, 219, 271, 196, 241,
	240, 242, 221, 225, 0, 0, 0, 314, 344, 359,
	157, 0, 302, 326, 0, 0, 158, 188, 182, 269,
	244, 152, 198, 311, 209, 217, 283, 356, 257, 289,
	161, 343, 310, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	212, 300, 282, 169, 220, 218, 0, 0, 0, 261,
	322, 0, 0, 0, 0, 215, 0, 0, 0, 312,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 145, 214, 0, 280, 186, 345, 492,
	177, 0, 0, 0, 0, 0, 133, 146, 156, 162,
	176, 181, 185, 0, 194, 197, 200, 201, 202, 207,
	222, 226, 227, 228, 229, 247, 248, 251, 252, 255,
	256, 262, 263, 264, 266, 267, 268, 273, 276, 278,
	285, 290, 292, 293, 294, 296, 304, 305, 306, 307,
	315, 319, 331, 332, 351, 353, 0, 0, 0, 136,
	0, 0, 0, 0, 191, 239, 149, 0, 0, 0,
	203, 352, 0, 0, 0, 275, 0, 317, 193, 213,
	153, 132, 147, 163, 192, 250, 0, 295, 0, 0,
	0, 0, 0, 170, 0, 288, 258, 341, 0, 0,
	265, 287, 216, 330, 0, 339, 340, 0, 0, 349,
	354, 0, 0, 0, 309, 180, 0, 138, 0, 272,
	175, 208, 0, 0, 0, 167, 0, 0, 0, 308,
	328, 155, 324, 237, 243, 164, 166, 165, 148, 303,
	327, 159, 168, 313, 291, 318, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 298, 297,
	0, 199, 0, 0, 0, 281, 0, 204, 137, 320,
	357, 154, 210, 325, 0, 187, 249, 172, 259, 260,
	184, 134, 277, 231, 232, 230, 233, 0, 0, 342,
	0, 279, 139, 321, 594, 160, 299, 301, 355, 286,
	142, 336, 316, 235, 205, 206, 140, 0, 141, 284,
	178, 190, 173, 253, 0, 189, 274, 333, 334, 171,
	358, 150, 348, 144, 607, 347, 246, 0, 245, 350,
	329, 337, 236, 224, 0, 143, 335, 234, 223, 211,
	183, 195, 270, 219, 271, 196, 241, 240, 242, 603,
	225, 0, 0, 0, 314, 344, 359, 157, 0, 302,
	326, 0, 0, 158, 188, 182, 269, 608, 606, 597,
	598, 209, 217, 283, 356, 257, 289, 161, 343, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	145, 214, 0, 280, 186, 345, 0, 177, 0, 0,
	0, 0, 0, 133, 146, 156, 162, 176, 181, 185,
	0, 194, 197, 200, 201, 202, 207, 222, 226, 227,
	228, 229, 247, 248, 251, 252, 255, 256, 262, 263,
	264, 266, 604, 605, 273, 276, 278, 285, 290, 292,
	293, 294, 296, 304, 305, 306, 307, 315, 319, 331,
	332, 351, 353,
}
var yyPact = [...]int{

	3312, -1000, -314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1855, -1000, -1000, -1000,
	-1000, -1000, -1000, 847, 609, -1000, -1000, 230, 166, 27625,
	607, 2967, 28319, -1000, -1000, -1000, 168, 339, 28319, -1000,
	-1000, -1000, 396, 405, 1200, 1693, 1199, 44, -75, -80,
	107, 19099, 18629, -1000, 1903, 1905, -1000, -1000, 511, 48,
	-1000, -1000, -1000, 22851, 182, -1000, -1000, 1839, 1853, 1604,
	-1000, 13469, 497, 497, 27278, 29707, -1000, 1902, 28319, 12060,
	-1000, 594, 28319, -145, 491, 491, 289, 491, 491, 596,
	-1000, 837, -1000, -1000, -1000, -1000, 28319, 22382, 493, 27972,
	493, 493, 493, 493, 493, 493, 493, 28319, -1000, 661,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28319, 1193, 1733, 818, 245, 8756, 8756, -1000, 814, -1000,
	246, 238, 276, 228, 93, 819, 1836, -1000, 1496, 1839,
	1839, 8756, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 251,
	555, 206, 182, 835, -1000, -1000, -1000, -1000, -1000, 1730,
	1726, 1073, 1725, 638, 1723, 1548, -49, -1000, 1192, 28319,
	-1000, -1000, 1043, 1042, 1573, 1400, 589, 1571, -1000, -1000,
	1546, 1546, 1546, 1546, 1224, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 374,
	1302, 1438, 1567, -1000, 1550, 1824, 590, 28319, -1000, -101,
	1478, -1000, 1523, -1000, -1000, -1000, 1069, 1728, 985, 16283,
	1665, -1000, -1000, 901, 1890, -1000, 20506, 660, -1000, 16283,
	3622, 1496, -1000, -1000, 1496, -1000, -1000, -1000, 633, -1000,
	-1000, 18159, 18159, 18159, 18159, 18159, 18159, 18159, 18159, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, -1000, -1000, 1496, -1000, 13000, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 16283, 1496,
	1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496, 1496,
	1496, 1496, 1496, 1496, 1496, 26931, 25299, 28319, 1416, 1267,
	-1000, -1000, 659, 1474, -100, 29360, -1000, -1000, -1000, -1000,
	28666, 24952, 816, -1000, -1000, -1000, -1000, 1719, -1000, -1000,
	658, -1000, 1855, -1000, -1000, 1390, 327, -1000, 3993, 4914,
	-1000, -1000, -1000, 1545, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27972, 1801, 567, 1191, 860, 1190, 1184, 1182, 22382, 22382,
	491, 1181, 1465, 554, 1464, 553, 1217, 28319, 1769, 1566,
	28319, 1180, 1179, 1178, 1177, 22382, 22382, -1000, 11588, -1000,
	8756, 818, -1000, 1104, 16283, 491, 491, 8756, 8756, 8756,
	28319, 28319, 28319, -1000, -1000, -1000, -1000, 28319, -1000, -1000,
	818, 818, 8756, 818, 796, 1885, 796, -1000, 796, -1000,
	-1000, 16283, -1000, 18159, 21913, 683, -1000, -1000, -1000, -1000,
	1176, 244, -1000, -1000, -1000, -1000, -1000, -1000, 1174, 638,
	638, -1000, 1103, 638, 1450, -1000, 807, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 638,
	-1000, 15814, -311, -1000, -1000, 1462, -1000, 278, -1000, -1000,
	319, 319, 495, 22382, 22382, 22382, -1000, 27972, -1000, -1000,
	-1000, 22382, 319, 131, 1454, 319, 22382, 22382, 1604, -1000,
	-1000, 182, -1000, -1000, 28319, 8756, -119, 22851, 1496, 10172,
	-1000, -1000, -1000, 1897, 720, 1446, -1000, -1000, 1452, -1000,
	964, 656, 1065, 1633, -1000, -1000, -1000, 28319, -1000, 16283,
	16283, 922, -1000, 23320, -1000, -1000, -1000, -1000, 9700, 724,
	18159, 904, 709, 18159, 18159, 18159, 18159, 18159, 18159, 18159,
	18159, 18159, 18159, 18159, 18159, 18159, 18159, 18159, 1018, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1168, -1000, 182,
	1011, 1011, 671, 671, 671, 671, 671, 671, 671, 24258,
	1809, 14407, 14407, 14407, 1809, 1069, 1069, 14407, 14407, 14407,
	14407, 14407, 14407, 1809, 1809, 14407, 1069, 1069, 1069, 1069,
	14407, 14407, 14407, 14407, 1809, 14407, 14407, 14407, 1809, 1069,
	1388, 954, 13000, 14407, 14407, 14407, 1069, 16283, 16283, 15345,
	14876, 16752, 14407, 14407, 1809, 846, 954, 28666, -1000, -1000,
	17690, -1000, -1000, -1000, -1000, -1000, 1069, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 27972, 27972, 14407, 14407, 14407,
	14407, 299, 28319, -1000, 1413, 1495, -1000, -1000, -1000, 1796,
	24605, 20037, -1000, 299, 1386, 25299, 28319, -1000, -1000, 25299,
	28319, 9228, 29013, 1441, -1000, -96, -124, -100, -1000, -1000,
	670, -1000, -1000, -1000, 12530, -1000, 10644, 1839, 1604, 6396,
	11116, -1000, 4914, 1545, -1000, -57, -1000, -1000, -1000, 1518,
	-1000, 1518, 305, 8, 1518, 1518, 1518, 1518, 1518, -19,
	-19, -19, -19, 14, -1000, -1000, -1000, -1000, -1000, 1544,
	1540, -1000, 1518, 1518, 1518, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1533, 313, 1525, 1525, 1525, 1525,
	1525, 335, 335, -1000, 16283, 1553, -1000, 28319, 8756, 1760,
	8756, 241, 1539, 1417, -1000, 139, 1283, 28319, -1000, 28319,
	28319, 22382, 22382, 22382, 557, -1000, 28319, 1451, -1000, -1000,
	-1000, -1000, -1000, 1415, -1000, 1283, -1000, -1000, -1000, -1000,
	-1000, -1000, 954, 1167, 1166, -1000, -1000, -1000, -1000, -1000,
	-1000, 810, -1000, -1000, -1000, -1000, 818, 28319, 28319, 28319,
	1793, 818, 954, 775, 1557, 1496, 1069, -1000, -1000, 1165,
	-1000, 1450, 1450, -1000, 1450, 638, 1011, 1450, -1000, 1372,
	1755, 1102, 28319, -1000, 22851, -54, -1000, -107, 26584, -1000,
	-1000, -1000, 26584, -1000, 140, -1000, 552, 1360, -1000, -1000,
	26584, 86, 130, 26584, 1415, 1884, 1809, 1069, 188, -1000,
	-1000, -1000, -1000, -1000, 179, 1276, 655, -1000, 1629, 985,
	985, 16283, -1000, -1000, -1000, 10644, 1841, -1000, 1650, 1644,
	1562, -1000, -1000, 724, 794, -1000, -1000, 891, -1000, -1000,
	-1000, -1000, 654, 1496, -1000, 1552, -1000, -1000, -1000, -1000,
	904, 18159, 18159, 18159, 775, 1552, 3972, 749, 3124, 671,
	842, 842, 672, 672, 672, 672, 672, 902, 902, -1000,
	-1000, -1000, 1069, -1000, -1000, -1000, 14407, 1318, -1000, -1000,
	954, 650, 1318, 1318, 14407, -166, -166, 1069, 1318, 1318,
	1318, 1069, 1318, 14407, 14407, 1318, -166, -166, -166, -166,
	1318, 1318, 1318, 1318, 14407, 1318, 1318, 1318, 14407, -1000,
	16283, -1000, 1069, 1318, 1318, 1318, -1000, 770, 1032, 779,
	1881, 1318, 750, 1880, 1318, 1244, 18159, 18159, 18159, 1318,
	1318, 14407, 845, -1000, 16283, 1069, -1000, 2360, 1449, 1448,
	1318, 1069, 1447, 1318, 1318, 174, 1496, -1000, 10644, 25299,
	25299, 25299, 25299, 25299, -1000, 1597, 1593, -1000, 1589, 1587,
	1598, 22851, 1353, 1069, 231, 24605, -1000, 1496, -1000, 21444,
	630, 591, 579, 574, 1862, 25299, 1296, -1000, 1296, -1000,
	647, -1000, -1000, 28666, -100, -82, -1000, -1000, 1441, -1000,
	1049, -1000, -1000, 954, -1000, 646, 1728, 1809, 1439, 5924,
	-1000, -1000, -1000, -1000, 327, -1000, -1000, -1000, 1538, 3211,
	-1000, 1668, 681, 684, 1131, 1658, -1000, -1000, 725, -64,
	-1000, -1000, 1038, -19, -19, 1518, 1518, 302, 1518, -1000,
	-19, -1000, -1000, -1000, 670, 1712, 670, 670, 670, 670,
	-19, 1101, 1101, -1000, -1000, -1000, -1000, 1036, -1000, 1533,
	-1000, 1035, -1000, -1000, -1000, -1000, -1000, -1000, 1009, 1565,
	27972, 182, 1789, -1000, -1000, -1000, 1867, -1000, -1000, 584,
	56, 22382, 141, 258, 181, -1000, 517, -1000, 516, -1000,
	-1000, -1000, -1000, -1000, 8756, 28319, 22382, 8756, 8756, 1862,
	1163, 1162, -1000, -1000, -1000, 796, 818, 1696, -1000, -1000,
	18159, 22382, -1000, 249, -1000, -1000, -1000, -1000, 299, 573,
	-1000, -1000, -92, -1000, -1000, 515, 644, 643, 506, -1000,
	75, 22382, -1000, 27972, 1879, 1877, 83, 1875, 22382, 1633,
	-1000, 1436, -1000, -1000, 764, 754, 732, 340, 340, -1000,
	734, 340, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	298, 1785, 10172, 10172, 1626, -1000, -1000, -1000, 28319, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8284, 14407,
	-1000, 775, 1552, 3756, -1000, 18159, -1000, 1318, 14407, -166,
	7812, -166, -166, 1318, -1000, 26115, -1000, -166, -166, -166,
	-166, -166, -166, 1318, 1318, -166, -1000, -1000, -1000, -1000,
	-166, -166, -166, -166, 1318, -166, -166, -166, 1069, 954,
	-1000, -1000, -1000, -1000, 318, 1018, 318, 18159, 18159, -1000,
	18159, 18159, -1000, -1000, 18159, 3781, 3657, 1285, -210, -1000,
	1420, 834, -1000, 16283, 970, -1000, -1000, 18159, 18159, -1000,
	-1000, -1000, -1000, 1564, 10644, 1496, 6868, -1000, 27972, 1407,
	-1000, 802, 799, 1495, 1532, 1563, 1437, -1000, -1000, -1000,
	-1000, 1591, -1000, 1585, -1000, -1000, 1513, -1000, -1000, 1433,
	1496, 27972, 18159, 630, -1000, 1496, 1496, 1496, 1855, 16283,
	1296, -1000, -1000, 682, -1000, -1000, -105, -131, -1000, -1000,
	-1000, 10172, -1000, 6396, -1000, 6396, -1000, 23789, 562, 1670,
	349, -1000, 1131, -1000, -1000, 1131, -1000, -1000, -1000, 1529,
	-1000, 888, -1000, -1000, -1000, -1000, -1000, 18159, 1896, -1000,
	1667, -1000, 1666, 1099, -1000, -1000, 1262, 670, 670, -19,
	-1000, -1000, 1518, -1000, 670, -1000, 731, -1000, -1000, -1000,
	-1000, 670, 1310, -1000, 1280, 1432, -1000, 1278, 84, 28319,
	-1000, -1000, -1000, 1561, -1000, -1000, -1000, 1250, 1419, -1000,
	3993, 1159, 1157, 1151, -217, 172, -1000, 22382, 101, 139,
	382, 1143, 28319, 22382, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 818, -1000, 18159, 1552, 1283, -1000, -1000, -19,
	28319, -1000, 22382, 651, 25768, 22382, 82, 138, -1000, 22382,
	22382, 1869, 22382, 1415, 1562, 188, -1000, 2670, -1000, 1131,
	572, -1000, -1000, 352, -1000, 1658, -1000, 281, 1136, -1000,
	18804, 18347, 27972, 1664, 1663, 1135, 28319, 27972, -1000, -1000,
	4990, 1134, 16283, -1000, 27972, 27972, 1496, 640, -1000, -1000,
	-1000, 1371, 13469, -1000, -1000, 1069, -1000, 18159, 1552, -166,
	-1000, -1000, -1000, -1000, 639, -1000, -1000, -166, -1000, 454,
	-1000, -1000, -1000, -1000, -1000, -1000, -166, -166, -1000, -1000,
	-1000, -1000, -1000, -166, -1000, -1000, -1000, -1000, 1069, 1518,
	1518, -1000, 1518, 1525, -1000, 1518, 34, 1518, 26, 1069,
	1069, 3570, 3547, 3397, 3071, 2360, 18159, 18159, 18159, 1496,
	-160, -1000, 954, 16283, 3056, 2765, -1000, 1738, 1272, 1412,
	-1000, -1000, 13938, 1069, 1642, 1276, -1000, 22851, 1274, -1000,
	1855, 10644, 16283, 16283, -1000, -1000, 16283, 1524, -1000, 16283,
	-1000, -1000, -1000, -1000, 27972, 224, -1000, 16283, 1274, 989,
	-1000, 27972, 27972, 27972, 1839, 954, -1000, -1000, -1000, -1000,
	5924, -1000, 1261, -1000, 1518, 1518, 1660, -1000, 1658, 681,
	-1000, -1000, -1000, 27972, -1000, 1552, -123, -1000, -1000, -1000,
	-1000, -1000, -1000, 670, -1000, -1000, -1000, -1000, -1000, -19,
	1079, -19, 1007, -1000, 995, -1000, -1000, -257, 1516, -1000,
	182, 28319, 98, 584, -1000, 3993, 3993, 3993, 89, 99,
	-1000, 876, -1000, -1000, -1000, 1078, 1075, 1072, 1283, 144,
	867, 109, -1000, 1795, -1000, -1000, -1000, 1552, -60, -1000,
	138, -1000, -1000, -1000, 138, -1000, -1000, 126, 1415, 1415,
	22382, 1415, -1000, -1000, 4990, 320, 3993, 3993, -1000, 1553,
	681, 1657, 349, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1133, -1000, 636, -1000, 503, 320, 4990, 954, 721, 1743,
	-1000, 10172, 1860, 25299, -1000, -1000, -1000, 1552, -1000, 7340,
	-1000, 1069, 1851, -1000, -1000, -1000, -1000, -1000, 220, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18159, 18159, 18159,
	18159, -1000, 2360, 2360, 2360, 18159, 1069, 1068, 954, 18159,
	18159, 1653, -1000, 1496, -1000, -1000, 1496, 175, -1000, 27972,
	1839, -1000, 954, 954, 954, 27972, 954, 1254, -1000, 1496,
	19568, -1000, 22851, 1248, 1248, 1248, -1000, 568, 23789, 1753,
	1753, -1000, 1131, -1000, 1246, -1000, -1000, 670, -1000, 670,
	1235, 1227, -1000, 23789, -1000, 1834, -1000, 98, -1000, 1067,
	199, 183, -1000, 195, 193, 189, 186, 176, -1000, -1000,
	-1000, -1000, 270, 89, -1000, -62, 993, 243, 1702, 99,
	-1000, 990, 968, 939, 929, 203, -1000, -1000, -1000, -1000,
	173, 139, -1000, 380, 1064, 1687, 1684, 1773, 1773, 80,
	1415, 1406, 1213, -1000, -1000, 1132, -1000, -1000, 1515, 1131,
	1514, -1000, 1127, -1000, -1000, 27972, -1000, 320, 1736, 1735,
	1496, -1000, 1857, 1848, 1296, 13469, -1000, -1000, -1000, 16283,
	-1000, -1000, 2360, 2360, 2360, 2360, -1000, -1000, -1000, 171,
	-1000, -1000, 2360, 2360, 1895, -1000, 1412, 1496, -1000, 182,
	-1000, -1000, 1243, -1000, 27972, -1000, -1000, 630, -1000, -1000,
	-1000, 568, -1000, 1124, 734, 1062, -1000, -1000, -1000, -1000,
	292, -1000, -1000, -1000, -1000, 1233, -1000, 233, 5002, -1000,
	-1000, -1000, -1000, -1000, -1000, 1692, 1691, 208, -1000, 1059,
	1058, -1000, 370, 997, 637, -172, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 280, 1121, -1000,
	108, -1000, -1000, 496, 1676, 1678, 1847, -1000, 22382, -1000,
	-1000, 25299, -1000, -1000, 725, 725, 23789, 1553, 23789, -1000,
	-1000, -1000, 18159, -1000, 282, -1000, 16283, 16283, 1860, -1000,
	1409, -1000, -1000, -1000, -1000, 1069, 185, -238, -1000, -1000,
	10644, 1412, 1069, -1000, -1000, -1000, -1000, -1000, 919, -1000,
	28319, 568, 222, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16283, 16283, 5452, 5002, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 913, -1000, -1000, 957, 359,
	106, -1000, 1771, -1000, 1513, 907, 1684, 1845, 1682, 1680,
	-1000, 1057, -231, 1296, 1231, 1499, 1222, 1552, 1212, -1000,
	27972, -1000, 954, 1405, -1000, 954, 1857, -1000, -176, -1000,
	1623, -215, -241, 1392, -1000, -1000, 1497, -1000, 568, 214,
	-1000, 717, 943, 163, 152, 3721, -1000, -1000, -1000, -1000,
	-315, -1000, 91, -1000, 85, -1000, -1000, -1000, 1054, -1000,
	1686, -1000, 1053, -1000, 1843, 1842, -1000, 134, 1860, 568,
	23789, 568, -1000, 282, 1637, 16283, -1000, 1069, 136, 136,
	-1000, 1621, -1000, 27972, -1000, 1119, 1110, 833, -1000, 16283,
	5002, 1830, 1816, 1814, 1729, 10172, 4926, -1000, -1000, -1000,
	-1000, -1000, 1051, 1048, 20975, 1857, -1000, 1207, -1000, -1000,
	286, -1000, -1000, -1000, 225, -1000, -261, 221, -262, -1000,
	1011, -1000, -232, 1204, 330, -1000, -1000, 855, 5002, -1000,
	940, -316, 395, 182, 404, 18159, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 77, 1283, -1000, 568, 262, 862, -1000,
	-1000, -1000, -1000, -1000, 27972, -239, 1560, -1000, -1000, -1000,
	-1000, -1000, -1000, 5002, -1000, -317, 5002, 3686, -1000, -1000,
	-1000, 4836, -1000, -1000, -1000, -1000, 150, -1000, -1000, 1552,
	22382, -1000, 1496, 225, -1000, -242, 1559, 1551, 1874, -1000,
	-318, 4810, -319, 490, 5002, 739, -1000, 16283, -1000, 404,
	-1000, 1283, 17221, -1000, -1000, -1000, 1894, -1000, 1892, 492,
	492, 4615, 853, 5002, -1000, -320, 489, 5002, -1000, 879,
	-1000, 2360, 1069, -1000, -1000, -1000, 324, 956, -1000, -1000,
	-1000, 4540, -1000, -323, 5002, -1000, -1000, -1000, -1000, -1000,
	487, 4348, -324, -1000, 481, 5002, -1000,
}
var yyPgo = [...]int{

	0, 2299, 2296, 44, 2294, 168, 2292, 2291, 2289, 20,
	15, 12, 22, 2285, 2021, 2014, 2012, 2008, 2284, 2001,
	2282, 9, 2277, 2275, 1999, 2270, 2269, 1997, 1995, 1992,
	1990, 2267, 2266, 2265, 1988, 1984, 36, 2263, 17, 2262,
	3, 130, 149, 2261, 4, 2260, 2258, 11, 2256, 2240,
	1982, 2239, 2237, 2234, 2232, 82, 2226, 1967, 1950, 2223,
	2222, 1943, 1934, 2221, 2220, 1929, 1921, 1919, 2216, 151,
	2215, 2214, 2213, 275, 94, 131, 2210, 2208, 2207, 103,
	60, 1915, 96, 46, 93, 1438, 2206, 26, 54, 2204,
	2202, 119, 124, 2199, 138, 2196, 68, 114, 90, 2195,
	2194, 150, 2193, 2191, 2189, 123, 2184, 2183, 2318, 2181,
	2176, 136, 2173, 64, 49, 40, 2172, 2166, 2165, 2156,
	2154, 10, 200, 2152, 2148, 135, 2146, 2144, 77, 2142,
	2141, 152, 2140, 2138, 2137, 128, 41, 2136, 42, 2135,
	126, 63, 2134, 43, 2132, 116, 2130, 2129, 31, 19,
	2128, 50, 2125, 55, 2122, 127, 871, 1083, 2121, 24,
	18, 28, 62, 58, 72, 122, 88, 14, 32, 109,
	91, 78, 35, 2119, 140, 2118, 73, 144, 117, 118,
	142, 2117, 2116, 2115, 968, 2114, 104, 71, 2113, 120,
	876, 153, 111, 2111, 87, 2110, 2109, 2107, 2106, 80,
	97, 2105, 2103, 86, 368, 47, 391, 1267, 1946, 225,
	133, 2102, 33, 2101, 2099, 3162, 98, 76, 95, 2097,
	92, 29, 51, 2096, 2094, 2091, 2090, 2088, 2084, 257,
	2083, 2082, 2081, 2076, 137, 105, 2075, 2072, 113, 84,
	2071, 2070, 2069, 2067, 112, 65, 132, 2065, 99, 115,
	121, 2064, 69, 2063, 2061, 102, 39, 2060, 2059, 2058,
	89, 81, 2054, 61, 37, 30, 67, 8, 83, 165,
	2053, 25, 2052, 108, 2, 5, 7, 2048, 2044, 2041,
	2040, 2039, 2036, 2035, 66, 2034, 2033, 56, 2032, 2030,
	2027, 27, 2026, 2024, 2023, 134, 100, 38, 141, 101,
	6, 2019, 2006, 34, 2003, 110, 1986, 59, 1976, 52,
	1974, 1971, 53, 1969, 1952, 57, 1947, 1945, 145, 1184,
	169, 1941, 143, 125, 48, 70, 1931, 1925, 0, 424,
	157, 167, 1914, 1911,
}
var yyR1 = [...]int{

	0, 327, 327, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 68, 3, 3,
	8, 4, 4, 4, 5, 5, 89, 90, 90, 94,
	94, 6, 6, 7, 7, 9, 9, 72, 72, 10,
	11, 11, 11, 11, 330, 330, 103, 103, 101, 101,
	102, 102, 169, 169, 12, 12, 12, 174, 174, 179,
	179, 179, 182, 182, 182, 182, 161, 162, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	301, 301, 310, 310, 310, 311, 311, 309, 309, 309,
	309, 309, 313, 313, 314, 314, 312, 312, 312, 312,
	316, 316, 317, 317, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 304, 304,
	304, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 318, 318, 318, 318, 319, 319, 320, 320, 321,
	321, 322, 322, 322, 322, 323, 323, 323, 323, 323,
	324, 324, 324, 324, 324, 324, 324, 325, 325, 326,
	326, 2, 282, 282, 283, 283, 284, 284, 284, 284,
	285, 285, 286, 286, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 25, 202, 202, 303, 303, 303,
	303, 297, 297, 297, 299, 299, 298, 298, 298, 300,
	300, 305, 305, 305, 305, 305, 307, 307, 307, 307,
	307, 307, 308, 308, 308, 306, 306, 48, 48, 49,
	49, 49, 154, 154, 154, 13, 13, 13, 13, 13,
	20, 22, 22, 37, 37, 38, 23, 23, 23, 23,
	39, 39, 40, 26, 26, 26, 26, 26, 26, 46,
	46, 46, 45, 45, 44, 44, 44, 44, 44, 44,
	24, 24, 24, 24, 47, 47, 42, 42, 41, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 27, 27, 27, 27, 27, 27, 19, 281, 281,
	281, 36, 36, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 53, 257, 258, 258, 258, 258, 258, 258,
	258, 258, 245, 245, 246, 222, 222, 222, 222, 222,
	222, 222, 222, 221, 221, 221, 221, 225, 225, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 224,
	224, 224, 224, 224, 224, 224, 224, 226, 226, 226,
	226, 226, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 228, 228, 228,
	228, 228, 228, 228, 228, 244, 244, 229, 229, 238,
	238, 239, 239, 239, 236, 236, 237, 237, 232, 233,
	240, 234, 234, 234, 235, 235, 235, 243, 243, 243,
	243, 230, 247, 247, 267, 267, 266, 266, 265, 265,
	265, 256, 256, 262, 262, 262, 262, 262, 262, 262,
	251, 251, 251, 250, 250, 252, 252, 255, 255, 264,
	264, 263, 263, 248, 248, 248, 268, 268, 268, 268,
	268, 249, 249, 249, 249, 269, 253, 253, 254, 254,
	254, 275, 276, 274, 274, 274, 274, 274, 118, 118,
	118, 259, 259, 259, 260, 260, 260, 261, 261, 261,
	279, 279, 278, 278, 50, 50, 51, 56, 56, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 153, 153, 153, 52,
	200, 200, 273, 273, 272, 270, 270, 271, 271, 15,
	15, 54, 54, 302, 302, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 277, 277, 277, 17, 17, 57,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 86, 188,
	188, 187, 187, 186, 186, 186, 189, 189, 189, 219,
	219, 219, 59, 59, 64, 64, 67, 67, 67, 65,
	66, 28, 29, 29, 29, 29, 30, 201, 201, 62,
	62, 63, 63, 63, 63, 78, 78, 332, 332, 61,
	61, 60, 60, 18, 333, 69, 70, 70, 71, 71,
	71, 192, 192, 75, 75, 75, 73, 73, 73, 74,
	74, 80, 80, 84, 84, 84, 84, 83, 83, 83,
	83, 156, 156, 156, 157, 157, 158, 158, 158, 159,
	159, 160, 160, 160, 160, 160, 126, 126, 211, 211,
	211, 210, 210, 210, 210, 88, 88, 91, 91, 92,
	92, 92, 92, 95, 139, 139, 112, 112, 113, 113,
	113, 113, 113, 124, 124, 168, 168, 167, 167, 170,
	170, 93, 93, 93, 93, 98, 98, 99, 99, 100,
	100, 199, 199, 217, 217, 217, 104, 104, 104, 106,
	105, 105, 105, 105, 107, 107, 109, 110, 110, 108,
	108, 111, 114, 114, 114, 114, 115, 115, 85, 85,
	85, 85, 85, 85, 85, 185, 185, 117, 117, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 134,
	134, 134, 134, 134, 134, 119, 119, 119, 119, 119,
	119, 119, 79, 79, 135, 135, 135, 97, 96, 96,
	82, 82, 81, 81, 136, 136, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 129, 129, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 331,
	331, 131, 130, 130, 130, 130, 130, 130, 76, 76,
	76, 76, 76, 218, 218, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 146, 146,
	77, 77, 144, 144, 145, 147, 147, 143, 143, 143,
	121, 121, 121, 121, 121, 121, 121, 121, 123, 123,
	123, 148, 148, 137, 137, 87, 149, 149, 150, 151,
	151, 152, 152, 155, 163, 163, 163, 164, 164, 164,
	164, 125, 125, 165, 165, 165, 120, 120, 120, 120,
	120, 120, 120, 166, 166, 166, 166, 171, 171, 138,
	138, 141, 141, 140, 142, 172, 172, 176, 176, 173,
	173, 177, 177, 177, 177, 180, 180, 181, 181, 181,
	178, 178, 178, 175, 175, 175, 214, 214, 214, 183,
	183, 193, 193, 190, 190, 191, 191, 184, 184, 231,
	231, 196, 196, 196, 196, 196, 196, 196, 196, 198,
	198, 197, 197, 197, 194, 194, 194, 195, 195, 212,
	212, 208, 208, 213, 213, 209, 209, 215, 215, 216,
	216, 280, 280, 241, 241, 290, 290, 242, 242, 291,
	291, 293, 293, 288, 288, 289, 289, 292, 292, 31,
	294, 294, 295, 295, 296, 296, 296, 296, 32, 33,
	33, 33, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 328, 329, 203, 204, 204, 204,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 11, 4, 7,
	5, 1, 13, 3, 10, 12, 2, 1, 3, 3,
	6, 1, 3, 1, 3, 7, 8, 1, 1, 9,
	8, 7, 6, 6, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 2, 3,
	3, 11, 7, 9, 5, 5, 15, 11, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 2, 2, 2, 1, 3, 0, 3, 1,
	3, 0, 1, 1, 1, 1, 3, 1, 3, 3,
	0, 2, 5, 5, 5, 7, 5, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 4, 0, 3, 1, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 6,
	5, 5, 4, 3, 5, 1, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 3, 5, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	2, 4, 2, 4, 2, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 3, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 5, 4, 1, 1, 2, 3, 4, 3,
	3, 3, 3, 3, 3, 0, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 2, 1, 2,
	1, 2, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 2, 4, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 0, 2, 1, 1, 5, 1, 3, 2,
	5, 4, 3, 3, 3, 5, 3, 8, 10, 3,
	3, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 3, 8, 0, 1, 2, 4,
	0, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 6, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	4, 4, 3, 6, 6, 4, 4, 4, 4, 4,
	4, 3, 3, 2, 6, 2, 4, 4, 4, 5,
	7, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	1, 1, 2, 1, 1, 1, 2, 4, 4, 1,
	1, 2, 3, 4, 4, 5, 3, 1, 1, 3,
	3, 1, 1, 1, 1, 0, 3, 1, 1, 2,
	2, 2, 2, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 4, 8, 0, 1, 0, 2, 2, 4,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 1,
	2, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 3, 2, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 6, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -327, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -57, -58, -59, -64, -65, -66,
	-62, -61, -60, -18, -24, -27, -19, -68, -28, -29,
	-30, -31, -32, -33, -34, -35, -4, 6, 7, -72,
	9, 10, 30, -53, 131, -51, -52, 134, 133, 170,
	135, 163, 64, 265, -67, 268, 269, -332, -201, 168,
	169, 137, 216, 217, 20, 37, 270, 272, 31, 32,
	185, 233, 235, -5, -89, -6, 8, 363, 132, 266,
	165, 164, 26, 415, -328, 68, 478, -151, 15, -69,
	-333, -69, -69, -69, -69, -69, -257, -199, 106, 68,
	23, -195, 144, 87, 354, 140, -202, 229, 231, -193,
	-194, 193, 203, 44, 151, 150, 141, 229, 141, 142,
	144, 354, 140, 178, 177, 229, 231, 141, -108, -215,
	72, -206, 154, 426, 254, 412, 132, 241, 190, 265,
	279, 281, 273, 308, 296, 413, 427, 155, 211, 139,
	294, 297, 341, 153, 244, 204, 428, 330, 336, 214,
	268, 350, 429, 156, 208, 210, 209, 198, 215, 36,
	166, 292, 250, 285, 219, 193, 430, 420, 283, 28,
	188, 431, 338, 313, 253, 432, 417, 248, 337, 288,
	284, 137, 157, 151, 434, 314, 318, 435, 342, 234,
	436, 437, 438, 143, 240, 277, 278, 439, 194, 344,
	245, 312, 33, 152, 414, 48, 175, 345, 38, 316,
	37, 322, 440, 311, 306, 323, 441, 442, 443, 444,
	258, 256, 257, 259, 310, 276, 305, 206, 53, 138,
	320, 319, 321, 207, 340, 301, 299, 445, 446, 249,
	158, 447, 448, 286, 18, 449, 450, 348, 169, 251,
	252, 42, 451, 452, 453, 173, 454, 455, 456, 339,
	315, 317, 192, 457, 289, 148, 458, 255, 459, 264,
	416, 238, 382, 346, 282, 460, 272, 174, 168, 349,
	461, 217, 462, 463, 464, 160, 465, 232, 231, 269,
	381, 270, 332, 212, 466, 467, 468, 469, 202, 187,
	352, 343, 52, 216, 327, 470, 275, 150, 218, 471,
	242, 266, 43, 7, 205, 246, 333, 213, 203, 303,
	176, 472, 473, 290, 291, 309, 274, 304, 267, 178,
	179, 170, 262, 351, 328, 418, 229, 298, 295, 182,
	302, 474, 144, 475, 183, 271, 347, 243, 293, 329,
	141, 124, 297, 341, 131, 331, 332, 338, -251, 339,
	177, 180, -219, 141, -188, 330, 234, 255, 387, 183,
	184, 72, 142, 143, 33, 343, 342, 334, -215, 145,
	271, -78, 135, 171, -108, -203, -203, -203, -203, -47,
	72, 218, -47, 30, 72, 72, 36, 72, 270, 333,
	333, 75, 416, 186, 21, -319, -300, 264, -318, -298,
	8, 159, 6, 9, -303, 74, 72, -206, -207, 383,
	384, 385, 386, 387, 400, 401, 402, 388, 389, 403,
	404, 405, 390, 391, 406, 407, 409, 410, 408, 181,
	394, 393, 392, 395, 396, 51, 398, 397, 399, 21,
	-319, -300, 264, 6, -71, 5, -184, 144, 146, 267,
	-90, -94, -217, -215, -207, 74, -3, -164, 17, 16,
	-75, 54, 55, -70, -83, 115, -85, -215, -116, 89,
	-122, 29, 72, -206, 24, -121, -207, -117, -143, -142,
	-97, 124, 125, 126, 113, 114, 121, 90, 127, -129,
	-127, -128, -130, -132, -133, 74, 73, 82, 75, 76,
	77, 78, 83, 383, 384, 385, 386, 387, 400, 401,
	402, 388, 389, 403, 404, 405, 390, 391, 406, 407,
	409, 410, 408, 394, 393, 392, 395, 396, 398, 397,
	399, 84, 85, -208, -140, -328, 58, 59, 171, 140,
	364, 365, 366, 367, 368, 411, 161, 372, 92, 47,
	353, 362, 361, 360, 358, 359, 355, 357, 356, 374,
	375, 147, 354, 119, 363, -184, -184, 11, -101, -102,
	-108, -111, -215, -173, 267, -180, -177, 342, 343, -178,
	-181, -175, -143, 322, 455, 456, 341, 297, 340, -208,
	-215, -2, -5, 6, -108, -258, -246, -249, -209, 156,
	-269, -208, -205, 153, 72, -206, 247, 136, 162, 88,
	419, 23, 25, 237, 325, 383, 91, 124, 384, 385,
	386, 16, 20, 92, 123, 81, 364, 186, 387, 131,
	62, 380, 355, 357, 353, 354, 331, 29, 10, 26,
	164, 197, 22, 117, 133, 95, 96, 97, 167, 24,
	165, 260, 85, 161, 433, 19, 65, 11, 180, 233,
	13, 378, 379, 14, 230, 147, 146, 108, 195, 142,
	60, 8, 127, 27, 105, 56, 388, 389, 422, 45,
	185, 423, 58, 106, 17, 358, 359, 31, 411, 390,
	172, 424, 391, 119, 200, 63, 50, 236, 89, 83,
	34, 86, 66, 87, 15, 196, 61, 376, 239, 261,
	177, 199, 425, 159, 107, 134, 363, 263, 235, 59,
	140, 6, 373, 30, 163, 394, 393, 392, 395, 201,
	57, 366, 367, 396, 476, 141, 94, 374, 375, 145,
	84, 5, 44, 32, 9, 64, 67, 360, 361, 362,
	47, 51, 398, 397, 399, 93, 12, 377, 415, 181,
	142, -108, 363, -191, 147, -191, 178, 177, -191, -191,
	141, 98, -54, -108, -302, -297, -303, -190, 147, -208,
	-190, -190, -190, -190, -190, -190, -190, -108, 128, -108,
	72, 30, -189, 106, 12, 354, 140, 72, 177, 180,
	141, 178, 144, -204, -328, -209, -204, -253, 11, 108,
	181, 181, 181, 182, 181, -187, 333, 335, 179, 336,
	337, 12, -86, 106, 19, -328, -164, -164, -204, 72,
	270, 145, -63, -3, -11, -9, -10, -3, 98, 30,
	30, 74, 51, 30, -42, -41, -43, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 30,
	-281, 68, -241, 322, 72, -294, -295, -108, 75, 75,
	66, 66, 69, 145, 69, 66, -320, 68, -320, -320,
	-320, 71, 66, 69, 255, 66, 11, 66, -69, -7,
	-5, -328, 21, 22, 141, -108, 346, 69, 23, -328,
	-329, 70, -165, 19, 31, -125, 75, 78, -152, -155,
	-85, -215, 50, -73, 21, 22, 80, 11, -211, 88,
	87, 105, -210, 23, 72, -206, -207, 74, 128, -85,
	-119, 108, 89, 106, 107, 91, 110, 109, 120, 113,
	114, 115, 116, 117, 118, 119, 111, 112, 123, 98,
	99, 100, 101, 102, 103, 104, -185, -328, -97, -328,
	129, 130, -122, -122, -122, -122, -122, -122, -122, -122,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -328, -328, -3,
	-136, -85, -328, -328, -328, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -146, -85, -328, -331, -131,
	-328, -331, -131, -331, -131, -331, -328, -331, -131, -331,
	-131, -331, -331, -131, -331, -328, -328, -328, -328, -328,
	-328, -110, 27, -108, -88, -91, -92, -93, -112, -96,
	-328, -108, -97, -108, -101, -330, 69, 11, 67, -330,
	69, 128, 69, -174, -179, 344, 346, 267, -178, -178,
	-214, -208, 74, 29, 98, 30, 128, -151, -69, 70,
	69, -249, 156, 153, -221, -225, -227, -226, -228, -223,
	-224, 294, 297, 301, 299, 295, 300, 124, 298, 303,
	304, 305, 306, 307, 308, 309, 310, 311, 312, 313,
	30, 166, 290, 291, 292, 293, 314, 315, 316, 317,
	318, 319, 320, 321, 273, 296, 413, 274, 275, 276,
	277, 278, 279, 281, 282, 283, 284, 285, 286, 287,
	288, 72, -207, -269, 68, -208, 23, 144, 72, 89,
	72, 72, 72, -306, -305, -297, -300, -191, 72, 69,
	145, 69, 145, 71, -101, 24, 66, -103, -108, 72,
	72, 72, 72, -299, -297, -300, -216, -215, -205, -204,
	-189, 74, -85, -191, -191, -204, -204, -204, -108, -108,
	-108, -108, -189, -189, -204, -189, -186, 11, 108, 11,
	-186, -186, -85, -122, -297, 356, 115, 72, 72, 270,
	72, -42, -42, 74, -42, 69, 98, -42, 70, -136,
	-280, 477, 69, -296, 23, 346, 347, 323, -322, 141,
	180, 177, -322, -318, -299, -298, -297, -321, -208, -303,
	-322, 233, 69, -322, -299, -297, -75, -3, -108, -204,
	347, 348, -94, -96, -328, -166, -209, 9, 108, 69,
	18, 69, -163, 25, 26, 128, -123, 51, 75, 78,
	-192, 49, -108, -85, -85, -134, 83, 89, 84, 85,
	-210, 115, -216, -209, -205, -122, -135, -140, -97, 79,
	108, 106, 107, 91, -122, -122, -122, -122, -122, -122,
	-122, -122, -122, -122, -122, -122, -122, -122, -122, -218,
	72, 74, 72, -121, -121, -208, -73, -81, -84, 115,
	-85, -215, -81, -81, -73, -329, -329, -84, -81, -81,
	-81, -84, -81, -73, -73, -81, -329, -329, -329, -329,
	-81, -81, -81, -81, -73, -81, -81, -81, -73, -329,
	69, -329, -3, -81, -81, -81, -329, -85, -85, -143,
	74, -81, -143, 74, -81, -122, 369, 370, 371, -81,
	-81, -73, -144, -145, 93, -143, -329, -122, -208, -208,
	-81, -82, -81, -81, -81, -169, 173, -108, 30, 69,
	-104, -106, -105, -107, 56, 60, 62, 57, 58, 59,
	63, -199, -88, -95, 47, -328, -113, 173, -114, 23,
	-217, 64, 146, 65, -169, 67, -88, -108, -88, -111,
	-215, 115, -177, -180, 69, 345, 347, 348, -174, -235,
	123, 66, 86, -85, -209, -216, -164, -75, -259, -260,
	-261, -209, 74, 75, -246, -247, -248, -249, -262, 156,
	-268, 148, 150, 44, -250, 157, 142, 45, -222, -236,
	328, -229, 68, -229, -229, 302, 294, 297, 295, -229,
	-229, -229, -229, -229, -234, 297, -234, -234, -234, -234,
	295, 68, 68, -229, -229, -229, -238, 68, -238, 289,
	-239, 68, -239, -239, -239, -239, -269, -269, -85, -212,
	67, -161, -108, -204, 24, -204, -48, 190, 162, 68,
	-301, 69, 29, -307, 230, -108, -108, -108, -297, -297,
	-303, -277, 160, 155, -108, 69, 69, 72, 72, -254,
	11, 108, -189, -215, -215, -108, -124, 23, -189, -79,
	167, 67, -331, -329, 72, -41, -121, 70, -109, 27,
	74, -295, -217, 322, 347, -323, 115, -208, -323, -326,
	415, 145, 70, 69, -323, 251, 233, -323, 11, -73,
	-329, -56, -55, -196, 136, 133, 134, 138, 139, -272,
	325, 132, 297, 81, 29, 15, 364, 173, 418, 72,
	174, -329, 69, 128, 52, -125, -125, -155, -183, 19,
	11, 47, 47, -74, 57, 83, 84, 85, 128, -328,
	-135, -122, -122, -122, -79, 88, -329, -81, 69, -329,
	128, -329, -329, -81, -156, 376, -156, -329, -329, -329,
	-329, -329, -329, -81, -81, -329, -156, -156, -156, -156,
	-329, -329, -329, -329, -81, -329, -329, -329, -82, -85,
	-329, -329, -329, -329, 69, 67, 23, 11, 11, -329,
	11, 11, -329, -329, 11, -122, -122, -122, -329, -329,
	-81, -147, -145, 95, -85, -329, -329, 69, 69, -329,
	-329, -329, -329, -120, 30, 47, -328, -3, -328, -172,
	-176, -143, -205, -91, -92, -92, -91, -92, 56, 56,
	56, 61, 56, 61, 56, -105, -217, -329, -329, -139,
	189, -328, 34, -217, -114, 142, 142, 142, -115, 12,
	-88, -115, -115, 128, -179, -182, 349, 346, 352, 72,
	74, 128, -165, 69, -261, 98, -249, 68, 72, -255,
	-207, 45, -250, 142, 45, -250, -255, 72, -255, 45,
	83, 89, -232, -233, -240, -243, -230, 29, 66, 325,
	148, 45, 44, 81, -237, 329, 75, -234, -234, -229,
	-229, -229, 302, -229, -234, -235, 30, -235, -235, -235,
	-235, -234, -244, 74, -244, 75, -238, 75, 70, 66,
	-208, -3, 23, -49, 8, 9, 10, -282, -283, -284,
	72, 108, 195, 196, -310, 263, -305, 231, 240, 88,
	16, 415, 145, 145, -204, -108, -297, -204, -204, -115,
	72, 72, -186, -189, 34, -122, -300, 183, 184, -169,
	141, -296, 145, 128, 128, 145, 254, -299, -208, 11,
	11, 251, 11, -299, -192, 69, -203, -200, -273, -250,
	-279, -248, -249, -278, 149, 157, 173, 156, -200, -273,
	156, 153, -250, 157, 148, 149, -197, -250, 145, 23,
	-200, -200, -256, 98, -200, 173, 23, -209, -209, 53,
	-108, -80, -162, 115, -209, -82, -79, 88, -122, -329,
	-84, -157, -156, 115, -216, -157, -157, -329, -208, -328,
	-156, -157, -157, -156, -156, -156, -329, -329, -156, -157,
	-157, -157, -157, -329, -157, -157, -157, -329, -220, 124,
	294, 166, 292, 285, 312, 299, 327, 290, 328, -218,
	-220, -122, -122, -122, -122, -122, 11, 11, 11, 412,
	-151, 97, -85, 94, -122, -122, -171, 66, -172, -138,
	-141, -140, -328, -3, -329, -166, 6, 415, -170, -208,
	-115, 69, 98, 98, -99, -98, 66, 67, -100, 66,
	-98, 56, 56, -168, 68, 69, -140, -328, -170, -122,
	-114, -328, -328, -328, -151, -85, -115, 346, 350, 351,
	-260, -261, -264, -263, -208, -207, 148, -268, 157, 44,
	-268, -255, -255, 68, 83, -122, 9, 45, 45, 74,
	70, -235, -235, -234, -229, -235, 72, 124, -235, 70,
	69, 70, 69, 70, 69, -118, 431, 89, -108, -161,
	-161, 66, 70, 69, -221, 72, 72, 72, -313, 415,
	236, -311, -309, 242, 243, 244, 245, 246, -300, 241,
	-307, 238, 74, 72, -108, -297, -189, -122, -234, -108,
	-299, 115, 115, -208, -299, 251, -325, 415, -299, -299,
	11, -299, -74, -55, 68, -245, 72, -207, -203, -255,
	-194, 148, 72, 72, -203, 72, -207, 72, -207, -208,
	45, 45, 72, -108, -208, -245, 72, -85, -208, -208,
	-96, 128, -115, 11, 69, -83, -329, -122, -157, 128,
	-157, -151, 173, -157, -157, -157, -329, -229, -229, -229,
	-239, -229, 278, -229, 278, -329, -329, 19, 19, 19,
	19, -329, -122, -122, -122, -328, -77, 373, -85, 69,
	69, 28, -171, 69, -329, -329, 47, -329, -329, 69,
	-151, -176, -85, -85, -85, 68, -85, -167, -208, 189,
	-329, -114, -199, -167, -167, -167, -164, 70, 69, -229,
	-229, 45, -252, -250, -167, -128, -235, -234, 74, -234,
	75, 75, 431, 68, -3, -108, -285, -286, -287, 81,
	414, 89, 197, 198, 158, 199, 200, 201, -284, -221,
	-221, -221, -316, -317, -315, 239, 260, 261, 247, -314,
	-312, 256, 257, 258, 259, 88, 74, 74, 74, -308,
	230, 88, 239, 16, 23, -288, -187, -325, -325, 233,
	-299, -80, -245, -153, 161, 162, -221, -221, -212, -252,
	45, 72, -198, 145, 23, 145, -153, -245, 30, 133,
	27, -209, -148, 13, -88, -162, -162, 115, -329, 16,
	-234, 72, -122, -122, -122, -122, -329, -329, -329, -122,
	-329, 74, -122, -122, 45, -141, -138, 47, -3, -328,
	-208, -164, -167, 70, 69, -140, -113, -217, -329, -329,
	-329, -266, -265, 67, 152, 81, -263, -163, -163, -255,
	70, -235, -235, 70, 70, -264, -161, 19, -161, -287,
	74, 201, 197, 201, 201, 201, 201, 202, -304, 81,
	237, -315, 248, 437, 232, 263, 75, 75, 262, 31,
	32, -312, 75, 75, 75, 75, -309, 16, 415, -307,
	238, 74, 74, -289, 38, -291, 39, -324, 23, -324,
	251, 11, 70, 72, -222, -222, 68, -255, 68, 72,
	-208, -153, 29, 29, -328, -149, 14, 16, -115, -83,
	-136, -329, -329, -329, -329, -76, 108, 415, -329, -329,
	9, -138, -3, 70, -208, -114, -265, 72, -256, 74,
	159, 70, 188, -21, -3, -9, -10, -11, -12, -14,
	-50, -15, -16, -22, -23, -17, -57, -58, -67, -65,
	-66, -62, -61, -26, -24, -27, -19, -28, -29, -30,
	-34, -35, -25, 92, 147, 219, 265, 36, 36, 193,
	194, 74, 74, 29, 249, 127, 29, 75, 127, 380,
	238, 74, 72, 239, -231, 146, -292, 43, -290, -242,
	42, 16, -297, -88, -264, -212, -264, -122, -270, -271,
	173, -150, -85, -137, -87, -85, -148, -162, -151, -329,
	413, 63, 416, -172, -329, 75, -108, -267, -266, 189,
	-161, -85, -85, 72, -46, -213, 222, 223, 224, -209,
	-36, -21, 75, 29, 75, 29, 252, 239, 23, -168,
	75, -291, 16, -293, 40, 41, 74, 415, -115, 70,
	68, 70, -329, 69, -208, 69, -149, -158, 381, 382,
	53, 414, 417, 68, -154, 191, 192, -37, -38, 93,
	94, 220, 221, 225, -221, 69, 478, 250, 250, 74,
	38, 74, 16, 16, 231, -148, -267, -264, -267, -271,
	47, -87, -329, -159, 91, -160, 262, 380, -126, 75,
	127, -159, 53, -167, -161, 72, 72, 97, 95, -38,
	-85, -36, 19, 19, 19, 29, -209, 97, -21, 74,
	74, 29, 236, 21, -300, -149, 70, 175, -160, 457,
	433, 189, 457, 433, -121, 415, 70, -13, -20, -12,
	-9, -10, -11, 265, 92, -36, 94, 478, -47, 75,
	-3, -45, -44, 75, -47, 227, 89, 228, 72, -122,
	253, -267, 176, 88, -208, 416, -275, -276, 66, -161,
	-36, 478, -36, 97, 95, -39, -40, 96, -21, 69,
	226, -300, -328, -160, 417, -276, 66, -275, 66, 10,
	9, 478, 97, 478, 147, -36, 97, 95, -40, -85,
	-44, -122, 172, -274, 160, 155, 158, 30, -274, 97,
	92, 478, 147, -36, 94, -329, -329, 154, 29, 83,
	97, 478, -36, 147, 97, 478, 147,
}
var yyDef = [...]int{

	36, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, -2, 674, 674, 674,
	674, 674, 674, 761, -2, 524, 525, 0, 0, 0,
	0, -2, 643, 644, 645, 649, 650, 665, -2, 1546,
	1546, 1546, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 0, 0, 57, 58, 1067, 0,
	668, 657, 658, 0, 0, 1544, 2, 1007, 0, 683,
	676, 0, 1067, 1067, 0, 0, 88, 0, 0, 0,
	762, 0, 0, 0, 1065, 1065, 0, 1065, 1065, 0,
	1088, 0, 1062, 1084, 1085, 1086, 0, 0, 1063, 0,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 0, 588, 779,
	1097, 1098, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	0, 0, 0, 636, 0, 1547, 1547, 603, 0, 605,
	0, 0, 0, 0, 0, 615, 618, 622, 0, 1007,
	1007, 1547, 470, 471, 472, 640, 641, 630, 642, 0,
	0, 0, 0, 0, 669, 670, 671, 672, 673, 280,
	282, 0, 302, 0, 305, 308, 1103, 651, 0, 0,
	1128, 1129, 0, 0, 0, 0, 0, 1433, 155, 219,
	157, 157, 157, 157, 218, 207, 208, 209, 210, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 0,
	0, 0, 1433, 674, 0, 678, 0, 0, 1068, 646,
	46, 47, 0, 763, 764, 765, 0, 1013, 0, 0,
	686, 684, 685, 675, 0, 697, 718, 0, 788, 0,
	793, 795, -2, -2, 0, 836, 837, 838, 839, 840,
	841, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	866, 867, 868, 869, 870, 980, 981, 982, 983, 984,
	985, 986, 987, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1541, 1542,
	1543, 797, 798, 977, 1034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 968, 0,
	939, 939, 939, 939, 939, 939, 939, 939, 939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 70, 779, 74, 1492, 0, 1039, -2, -2, 1041,
	0, 0, 0, -2, -2, -2, -2, 1305, -2, 977,
	0, 89, 999, 674, 90, 0, 344, 345, 0, 1317,
	494, 1095, 1096, 1307, 1091, 1092, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 0, 569, 0, 570, 0, 213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 587, 0, 589,
	1547, 636, 592, 0, 0, 1065, 1065, 1547, 1547, 1547,
	0, 0, 0, 601, 1548, 1549, 602, 0, 496, 497,
	636, 636, 1547, 636, 633, 0, 633, 612, 633, 631,
	632, 0, 617, 0, 0, 0, 625, 626, 627, 652,
	0, 0, 659, 661, 662, 663, 664, 660, 0, 0,
	0, 284, 0, 0, 304, 286, 0, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 300, 0,
	307, 0, 1101, 1104, 656, 1119, 1120, 0, 1130, 1131,
	161, 161, 0, 0, 0, 0, 151, 0, 152, 153,
	154, 217, 161, 0, 0, 161, 0, 0, 683, 43,
	53, 0, 679, 680, 0, 1547, 0, 0, 0, 0,
	52, 1545, 38, 0, 0, 1008, 1011, 1012, 1000, 1001,
	1004, 0, 0, 681, 687, 688, 677, 0, 698, 0,
	0, 0, 719, 0, 721, 722, 723, 724, 0, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 815,
	816, 817, 818, 819, 820, 821, 794, 0, 808, 0,
	0, 0, 857, 858, 859, 860, 861, 862, 863, 0,
	686, 0, 0, 0, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 686, 0,
	0, 834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 969, 0, 922, 931,
	0, 923, 932, 924, 933, 925, 0, 926, 934, 927,
	935, 928, 929, 936, 930, 0, 0, 0, 830, 0,
	0, 72, 0, 778, 0, 725, 727, 728, 729, -2,
	0, 782, 828, -2, 0, 0, 0, 64, 65, 0,
	0, 0, 0, 75, 77, 0, 0, 1492, 1042, 1043,
	444, 1056, 1057, 1058, 0, 1054, 0, 1007, 683, 511,
	0, 346, 0, 0, 355, 434, 364, 365, 366, 427,
	368, 427, 427, 0, 427, 427, 427, 427, 427, 441,
	441, 441, 441, 441, 410, 411, 412, 413, 414, 0,
	0, 387, 427, 427, 427, 391, 417, 418, 419, 420,
	421, 422, 423, 424, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 429, 429, 431, 431, 431, 431,
	431, 0, 0, 493, 0, 1089, 86, 0, 1547, 0,
	1547, 0, 0, 100, 235, 221, 99, 0, 206, 0,
	0, 0, 0, 212, 584, 1064, 0, 577, 66, 578,
	579, 580, 581, 582, 214, 583, 780, 1099, 1100, 590,
	591, 637, 638, 0, 0, 595, 596, 597, 598, 599,
	600, 498, 606, 607, 608, 614, 636, 0, 0, 0,
	743, 636, 616, 822, 619, 939, 0, 654, 653, 0,
	666, 281, 283, 285, 303, 0, 0, 306, 309, 0,
	0, 0, 0, 1122, 0, 1124, 1126, 0, 0, 162,
	163, 164, 0, 156, 179, 220, 0, 0, 159, 216,
	0, 0, 0, 0, 149, 0, 686, 0, 0, 559,
	647, 648, 48, 49, 0, 0, 1023, 1014, 0, 0,
	0, 0, 1003, 1005, 1006, 0, 0, 988, 0, 0,
	689, 682, 40, 789, 790, 792, 809, 0, 811, 813,
	720, 699, 0, 978, -2, 799, 800, 824, 825, 826,
	0, 0, 0, 0, 822, 804, 0, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 856,
	953, 954, 0, 854, 855, 864, 0, 0, 832, 693,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 827,
	0, 1033, 0, 0, 0, 0, 904, 0, 0, 839,
	980, 0, 839, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 972, 0, 0, 940, 0, 0, 0,
	0, 0, 831, 0, 0, 0, 0, 777, 0, 0,
	0, 0, 0, 0, 766, 0, 0, 769, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 1419, 738, 0,
	782, 0, 0, 0, 786, 0, 786, 69, 786, 71,
	0, 781, 1040, 0, 0, 0, 80, 81, 76, 1044,
	0, 1050, 1051, 1052, 978, 0, 1013, 686, 343, 512,
	514, 517, 518, 519, 347, 349, 350, 351, 0, -2,
	485, 1429, 1471, -2, 477, 1346, -2, -2, 354, 436,
	435, 367, 0, 441, 441, 427, 427, 427, 427, 396,
	441, 399, 402, 403, 444, 0, 444, 444, 444, 444,
	441, 0, 0, 388, 389, 390, 379, 0, 380, 429,
	382, 0, 383, 384, 385, 386, 491, 492, 0, 0,
	0, 0, 0, 94, 1066, 95, 0, 237, 238, 182,
	102, 0, 0, 222, 0, 342, 0, 571, 0, 573,
	211, 575, 585, 586, 1547, 0, 0, 1547, 1547, 786,
	0, 0, 609, 634, 635, 633, 636, 0, 613, 628,
	0, 0, 620, 0, 655, 287, 288, 310, 72, 0,
	1102, 1121, 0, 1125, 1127, 0, 165, 167, 0, 143,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 681,
	54, 526, 527, 1546, -2, 560, 1081, 560, 560, 547,
	461, 560, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	0, 0, 0, 0, 0, 1009, 1010, 1002, 0, 1059,
	1060, 989, 990, 87, 690, 810, 812, 814, 0, 830,
	801, 822, 805, 0, 802, 0, 796, 0, 0, 704,
	0, 704, 704, 0, 890, 0, 891, 0, 704, 704,
	0, 0, 0, 0, 0, 0, 897, 898, 899, 900,
	704, 704, 704, 704, 0, 704, 704, 704, 0, 835,
	-2, 901, 902, 903, 0, 0, 0, 0, 0, 946,
	0, 0, 947, 912, 0, 0, 0, 0, 0, 918,
	999, 0, 973, 0, 0, 921, 941, 0, 0, 942,
	943, 944, 945, 1027, 0, 0, 0, 1018, 0, 786,
	1035, 0, 0, 726, 757, 759, 0, 754, 767, 768,
	770, 0, 772, 0, 774, 775, 745, 732, 829, 733,
	0, 0, 0, 782, 742, 0, 0, 0, 999, 0,
	786, 62, 63, 0, 78, 79, 0, 0, 85, 445,
	446, 0, 181, 0, 515, 0, 348, 0, 478, 0,
	0, 463, 477, 473, 474, 477, 468, 478, 469, 0,
	356, 0, 358, 359, 360, 361, 362, 0, 0, 440,
	0, 448, 450, 0, 363, 437, 0, 444, 444, 441,
	394, 395, 427, 400, 444, 404, 0, 405, 406, 407,
	408, 444, 0, 425, 0, 0, 381, 0, 508, 0,
	1090, 86, 86, 0, 239, 240, 241, 0, 183, 184,
	0, 0, 0, 0, 112, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 576, 67, 215, 593, 594, 604,
	499, 500, 636, 611, 0, 823, 621, 623, 624, 441,
	0, 1123, 0, 0, 0, 0, 0, 177, 160, 0,
	0, 0, 0, 150, 689, 0, 529, 0, 1546, 477,
	0, 548, 549, 0, 561, 562, 563, 0, 0, 1546,
	0, 0, 0, 562, 0, 0, 0, 0, 1082, 1083,
	0, 0, 0, 462, 0, 0, 0, 1025, 1024, 1015,
	39, 786, 0, 700, 979, 0, 803, 0, 806, 704,
	833, 875, 705, 695, 0, 876, 877, 704, 701, 999,
	892, 879, 880, 893, 894, 895, 704, 704, 896, 884,
	883, 882, 885, 704, 888, 887, 889, 871, 0, 427,
	427, 958, 427, 431, 961, 427, 963, 427, 966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	970, 920, 976, 0, 0, 0, 55, 0, 1027, 1016,
	1029, 1031, 0, 0, 0, 0, -2, 1284, 0, 749,
	999, 0, 0, 0, 751, 758, 0, 0, 752, 0,
	753, 771, 773, 730, 0, 0, 734, 0, 0, -2,
	741, 0, 0, 0, 1007, 787, 61, 82, 83, 84,
	513, 516, 0, 479, 427, 427, 0, 483, 0, 475,
	484, 465, 467, 0, 357, 438, 0, 447, 449, 451,
	428, 392, 393, 444, 401, 397, 442, 443, 409, 441,
	0, 441, 0, 432, 0, 495, 509, 0, 0, 92,
	0, 0, 190, 0, 186, 0, 0, 0, 120, 0,
	103, 104, 105, 107, 108, 0, 0, 0, 101, 0,
	224, 0, 227, 228, 572, 574, 610, 744, 1113, 776,
	177, 166, 168, 169, 177, 180, 144, 0, 145, 147,
	0, 146, 87, 528, 0, 556, 0, 0, 532, 1089,
	475, 0, -2, 533, 534, 539, 540, 541, 542, 543,
	0, 554, 0, 536, 0, 556, 0, 551, 0, 0,
	50, 0, 991, 0, 87, 87, 872, 807, 874, 0,
	878, 0, 0, 873, 881, 886, 905, 955, 441, 959,
	960, 962, 964, 965, 967, 907, 906, 0, 0, 0,
	0, 913, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 56, 0, 1032, -2, 0, 0, 73, 0,
	1007, 1036, 1037, 1038, 755, 0, 760, 0, 747, 0,
	782, 739, 0, 0, 0, 0, 60, 453, 0, 1004,
	1004, 464, 477, 476, 0, 439, 398, 444, 426, 444,
	0, 0, 510, 0, 86, 0, 86, 191, 192, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 185, 187,
	188, 189, 138, 121, 122, 0, 0, 0, 0, 113,
	114, 0, 0, 0, 0, 0, 109, 110, 111, 223,
	0, 0, 226, 0, 0, 1115, 1109, 170, 170, 0,
	148, 0, 0, 531, 557, 0, 355, 355, 0, 477,
	0, 550, 0, 1079, 1080, 0, 545, 556, 0, 0,
	0, 1026, 996, 0, 786, 0, 691, 696, 702, 0,
	956, 957, 0, 0, 0, 0, 914, 915, 916, 948,
	919, 971, 0, 0, 0, 1030, 1017, 0, 1021, 0,
	750, 59, 0, 746, 0, 735, 737, 782, 783, 784,
	785, 452, 456, 0, 461, 0, 480, 481, 482, 466,
	0, 415, 416, 430, 433, 0, 93, 0, 0, 193,
	194, 195, 196, 198, 199, 0, 0, 0, 98, 0,
	0, 123, 0, 0, 0, 0, 133, 134, 135, 136,
	137, 115, 116, 117, 118, 119, 106, 0, 0, 225,
	0, 230, 231, 1069, 1117, -2, 0, 141, 0, 142,
	178, 0, 530, 558, 352, 353, 0, 1089, 0, 535,
	544, 546, 0, 553, 0, 44, 0, 0, 991, 87,
	999, 908, 910, 909, 911, 0, 0, 0, 937, 938,
	0, 1020, 0, 756, 748, 740, 457, 458, 0, 460,
	0, 454, 0, 86, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 332, 333, 334, 335, 336, 337, 338,
	339, 340, 341, 0, 0, 0, 0, 200, 201, 202,
	203, 139, 140, 124, 125, 0, 127, 128, 0, 0,
	0, 233, 0, 229, 745, 0, 1109, 0, 1111, 0,
	1108, 0, 171, 786, 0, 0, 0, 552, 0, 565,
	0, 997, 998, 992, 993, 995, 996, 692, 706, 917,
	0, 0, 0, 1028, -2, 459, 0, 91, 455, 242,
	97, 0, 0, 1091, 0, 0, 269, 270, 271, 1093,
	0, 311, 0, 129, 0, 131, 132, 232, 0, 37,
	0, 1116, 0, 1114, 0, 0, 1110, 0, 991, 454,
	0, 454, 564, 0, 0, 0, 45, 0, 0, 0,
	949, 0, 952, 0, 86, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 267, 0, 0, 126, 130, 234,
	1070, 1118, 0, 0, 0, 996, 537, 0, 555, 566,
	0, 994, 703, 707, 0, 710, 0, 0, 0, 716,
	0, 708, 950, 0, 0, 243, 244, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 1094, 204, 312, 1112,
	1106, 172, 173, 174, 176, 42, 454, 0, 0, 711,
	712, 713, 714, 715, 0, 0, 486, 86, 245, 246,
	247, 248, 249, 0, 251, 0, 0, 0, 263, 264,
	265, 0, 272, 274, 275, 276, 0, 278, 279, 268,
	0, 538, 0, 0, 717, 0, 487, 488, 0, 96,
	0, 0, 0, 0, 0, 0, 260, 0, 266, 0,
	277, 175, 0, 709, 951, 489, 0, 490, 0, 0,
	0, 0, 0, 255, 256, 0, 0, 0, 261, 0,
	273, 0, 0, 501, 503, 504, 0, 0, 502, 250,
	252, 0, 258, 0, 0, 567, 568, 505, 506, 507,
	0, 0, 0, 257, 0, 262, 259,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 478,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:483
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, nil)
		}
	case 37:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:532
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 38:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:538
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:551
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:569
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:575
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:582
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:591
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:601
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:607
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:637
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:649
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.str = InsertStr
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.str = ReplaceStr
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:677
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:681
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:685
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:689
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:713
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:728
		{
			yyVAL.partitions = nil
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:732
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:742
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:749
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:758
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:790
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:804
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:810
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:829
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:841
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:849
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 96:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:857
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 97:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 98:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:865
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:893
		{
			yyVAL.accountNames = nil
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:902
		{
			yyVAL.tlsOptionItems = nil
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:906
		{
			yyVAL.tlsOptionItems = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.accountLimitItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:961
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:971
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:979
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:984
		{
			yyVAL.passLockItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1012
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1020
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1024
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1028
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1032
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1036
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1076
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 142:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1081
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1085
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 144:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1089
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1095
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1100
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1104
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1108
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1116
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1126
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1149
		{
			yyVAL.strs = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.grantAssumption = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1215
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1219
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1236
		{
			yyVAL.boolean = false
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.boolean = true
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1245
		{
			yyVAL.boolean = false
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yyVAL.boolean = true
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1256
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1264
		{
			yyVAL.procedureParams = nil
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1274
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1301
		{
			yyVAL.characteristics = nil
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1333
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1390
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1468
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1472
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 225:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1476
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1482
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1486
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1490
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1494
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1498
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1502
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1508
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1516
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = BeforeStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = AfterStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = InsertStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = UpdateStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = DeleteStr
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1555
		{
			yyVAL.triggerOrder = nil
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1579
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1585
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 252:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1589
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1605
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 256:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1611
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 257:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1616
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 258:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1621
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 259:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1627
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1655
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1659
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1663
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1671
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1732
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1740
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Resignal{}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1848
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1853
		{
			yyVAL.exprs = nil
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.exprs = nil
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1911
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1928
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1955
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1960
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1968
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2014
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2242
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2353
		{
			yyVAL.sqlVal = nil
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2362
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2366
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2374
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2378
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2384
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2392
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2401
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2411
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2455
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.colKeyOpt = colKey
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2479
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2483
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.indexOptions = nil
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2512
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2517
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = ""
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2537
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2545
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2591
		{
			yyVAL.str = ""
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = yyDollar[1].str
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2600
		{
			yyVAL.str = ""
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2614
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2624
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 486:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2644
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 487:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2648
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 488:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2652
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 489:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2656
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 490:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2660
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2684
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2699
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2746
		{
			yyVAL.boolean = true
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.boolean = true
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.boolean = false
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = yyDollar[1].str
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2779
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2783
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2811
		{
			yyVAL.str = string("")
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2825
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2852
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2859
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2878
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 537:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2887
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 538:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2891
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2900
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2915
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2919
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2923
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2930
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2940
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2952
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 552:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2961
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2965
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2969
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 555:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2973
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2980
		{
			yyVAL.columnOrder = nil
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2994
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3000
		{
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
		}
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3010
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3016
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3020
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3026
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3030
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3062
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3068
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3076
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3080
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3096
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3104
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3112
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3120
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3128
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3137
		{

		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3141
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3160
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3166
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3171
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3179
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3183
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3188
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3192
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3196
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3200
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3204
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3208
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3220
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3224
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3232
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3236
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3240
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3244
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3248
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3253
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3262
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3266
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3270
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3274
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3292
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3297
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3301
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3310
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3314
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3318
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3344
		{
			yyVAL.boolean = false
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.boolean = true
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = ""
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.showFilter = nil
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3386
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3392
		{
			yyVAL.str = ""
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.str = SessionStr
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = GlobalStr
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3406
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.statement = &Begin{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.statement = &Begin{}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3430
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3434
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.statement = &Commit{}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.statement = &Rollback{}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3452
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3462
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3466
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3470
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3519
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.statement = &OtherRead{}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3533
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3539
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3543
		{
			setAllowComments(yylex, true)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3547
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3553
		{
			yyVAL.bytes2 = nil
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = UnionStr
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = UnionAllStr
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = UnionDistinctStr
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3576
		{
			yyVAL.byt = 0
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.byt = 1
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3585
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3589
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = SQLCacheStr
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3598
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = ""
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = DistinctStr
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = StraightJoinHint
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3629
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3648
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3652
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3670
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3676
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3680
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3684
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy, Frame: yyDollar[7].frame}
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3690
		{
			yyVAL.over = nil
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.over = yyDollar[1].over
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3699
		{
			yyVAL.frame = nil
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3707
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3714
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3737
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3790
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3798
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3840
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3862
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3872
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3883
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3894
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3898
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3902
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{
			yyVAL.expr = nil
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3930
		{
			yyVAL.columns = nil
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3934
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3967
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3971
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3975
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3979
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3985
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3987
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3991
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3997
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3999
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = JoinStr
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4023
		{
			yyVAL.str = JoinStr
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = JoinStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = StraightJoinStr
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.str = LeftJoinStr
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = LeftJoinStr
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = RightJoinStr
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = RightJoinStr
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = NaturalJoinStr
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4071
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4077
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.indexHints = nil
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4106
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4110
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4114
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4119
		{
			yyVAL.expr = nil
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4137
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4145
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4187
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4195
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4207
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4211
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = IsNullStr
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = IsNotNullStr
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = IsTrueStr
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = IsNotTrueStr
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = IsFalseStr
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = IsNotFalseStr
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = EqualStr
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = LessThanStr
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = GreaterThanStr
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = LessEqualStr
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = GreaterEqualStr
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = NotEqualStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = nil
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4280
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4310
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.selectExprs = nil
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4337
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4347
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4371
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4403
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4427
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4439
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4465
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4489
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4493
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4511
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4515
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4523
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4527
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4531
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4535
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4539
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 883:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4543
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4547
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 886:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4555
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4643
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4647
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4651
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4655
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 909:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4659
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4663
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 911:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4675
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 914:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4679
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 915:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4683
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 916:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4687
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 917:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4691
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 919:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4699
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4703
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4707
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4725
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4730
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4760
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4773
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 937:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4787
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 938:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4791
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4820
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = BooleanModeStr
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 951:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = QueryExpansionStr
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4870
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4882
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4886
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4890
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4900
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4908
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4912
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4920
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4925
		{
			yyVAL.expr = nil
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4934
		{
			yyVAL.str = string("")
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4954
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = nil
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4977
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4995
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5003
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.expr = &NullVal{}
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5021
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5030
		{
			yyVAL.exprs = nil
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5055
		{
			yyVAL.expr = nil
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5059
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5070
		{
			yyVAL.orderBy = nil
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5074
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5084
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5095
		{
			yyVAL.str = AscScr
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.str = AscScr
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.str = DescScr
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5108
		{
			yyVAL.limit = nil
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5116
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5120
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5135
		{
			yyVAL.str = ""
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5139
		{
			yyVAL.str = ForUpdateStr
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5143
		{
			yyVAL.str = ShareModeStr
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5156
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5160
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5168
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5173
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5177
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5181
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5192
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5196
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5200
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5205
		{
			yyVAL.assignExprs = nil
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5209
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5215
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5219
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5235
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5255
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5261
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5264
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5270
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5274
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5291
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5304
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5317
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5333
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5341
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5347
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5351
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5355
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5362
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.expr = &Default{}
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.byt = 0
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5388
		{
			yyVAL.byt = 1
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5391
		{
			yyVAL.byt = 0
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			yyVAL.byt = 1
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5396
		{
			yyVAL.byt = 0
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5398
		{
			yyVAL.byt = 1
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = ""
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = IgnoreStr
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5406
		{
			yyVAL.sqlVal = nil
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5408
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5412
		{
			yyVAL.empty = struct{}{}
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.empty = struct{}{}
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			yyVAL.empty = struct{}{}
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.empty = struct{}{}
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.empty = struct{}{}
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.empty = struct{}{}
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			yyVAL.empty = struct{}{}
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.empty = struct{}{}
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.empty = struct{}{}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
			yyVAL.empty = struct{}{}
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5435
		{
			yyVAL.empty = struct{}{}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.empty = struct{}{}
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.empty = struct{}{}
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = UniqueStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.str = FulltextStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = SpatialStr
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5455
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5457
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5475
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5488
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5504
		{
			yyVAL.str = string("")
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5509
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5514
		{
			yyVAL.EnclosedBy = nil
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5518
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5523
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5532
		{
			yyVAL.sqlVal = nil
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5541
		{
			yyVAL.sqlVal = nil
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5545
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5550
		{
			yyVAL.Fields = nil
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5554
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5559
		{
			yyVAL.Lines = nil
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5568
		{
			yyVAL.sqlVal = nil
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5578
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5594
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5598
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.lockType = LockRead
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5608
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
			yyVAL.lockType = LockWrite
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5616
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5622
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5628
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5632
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5636
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			decNesting(yylex)
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6092
		{
			skipToEnd(yylex)
		}
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6097
		{
			skipToEnd(yylex)
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6101
		{
			skipToEnd(yylex)
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6105
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
